#ifdef _MSC_VER
#include <stdint.h>
#endif

#line 2 "lib/MapSetScanner.cpp"

#line 4 "lib/MapSetScanner.cpp"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 0
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer MapSetFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* %if-c++-only */
/* begin standard C++ headers. */
#include <iostream> 
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

#ifdef __cplusplus

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

/* C99 requires __STDC__ to be defined as 1. */
#if defined (__STDC__)

#define YY_USE_CONST

#endif	/* defined (__STDC__) */
#endif	/* ! __cplusplus */

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif

/* %not-for-header */

/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

/* %if-not-reentrant */
extern yy_size_t yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

    #define YY_LESS_LINENO(n)
    #define YY_LINENO_REWIND_TO(ptr)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::streambuf* yy_input_file; 
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */
    
	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)

/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
/* %endif */

void *MapSetalloc (yy_size_t  );
void *MapSetrealloc (void *,yy_size_t  );
void MapSetfree (void *  );

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG

typedef unsigned char YY_CHAR;

#define yytext_ptr yytext

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }

/* %% [1.5] DFA */

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyleng = (size_t) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;

/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 160
#define YY_END_OF_BUFFER 161
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static yyconst flex_int16_t yy_accept[1242] =
    {   0,
        0,    0,  161,  159,    2,    1,    1,   62,  159,    2,
      159,  159,  159,   27,   28,   29,   61,   53,   78,   18,
       58,  144,  138,   54,   72,   70,   73,   60,  159,  159,
      159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
      159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
      159,   19,   20,   59,  159,   56,  159,  159,   16,   57,
       17,  159,  159,  159,  159,  159,  159,  159,  159,  159,
      159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
        2,    1,   71,    0,  154,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    2,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,  142,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   69,    0,  153,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  157,    0,  147,   45,    0,  150,  145,  145,
      144,    0,  139,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   74,  137,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   75,  141,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  143,    0,    0,  138,
        0,    0,    0,   26,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   36,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  114,   76,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  158,  134,    0,    0,    0,   68,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  154,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  142,
      142,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  142,  142,  142,  142,  142,  142,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  153,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  148,  148,    0,  151,  151,    0,    0,  145,

        0,    0,  146,  139,    0,  139,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  139,  139,
      139,  139,  139,  139,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  141,  141,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  141,
      141,  141,  141,  141,  141,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   88,

       66,   39,  131,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  102,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       84,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      130,    0,    0,  129,    0,    0,   77,  107,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   79,
        0,  128,    0,    0,    0,    0,    0,   85,    0,    0,

        0,    0,    0,  140,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    2,
        0,    0,    0,  142,  142,  142,  142,  142,  142,  142,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  142,  142,  142,  142,  142,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  148,    0,

        0,  149,    0,  151,    0,    0,  152,    0,  146,    0,
      146,  139,  139,  139,  139,  139,  139,  139,  139,  139,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  139,  139,  139,  139,  139,    0,    0,
        0,    0,    0,    0,  141,  141,  141,  141,  141,  141,
      141,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  141,  141,  141,  141,  141,    0,
        0,  143,    0,    0,    0,    0,    0,    0,    0,   21,
       49,    0,    0,   89,    0,    0,    0,    0,    0,    0,
       40,    0,    0,    0,    0,   65,    0,    0,    0,   32,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   80,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   87,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    6,    0,    0,    0,  100,  140,    0,  140,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  140,  140,  140,  140,  140,  140,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,  135,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  142,  142,  142,  142,  142,    0,
        0,  142,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  149,    0,  149,    0,  152,    0,  152,
      139,  139,  139,  139,  139,    0,    0,  139,  141,  141,
      141,  141,  141,    0,    0,  141,    0,   86,   83,    0,
        0,    0,    0,  126,    0,    0,    0,    0,    0,    0,
        0,    0,   90,   47,   35,    0,  103,    0,    0,  118,
        0,    0,  119,   30,    0,   95,   41,  108,    0,   50,
        0,  101,   33,    0,    0,   38,    0,    0,    0,    0,

        0,  123,    0,   91,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  116,
        0,    0,    0,    0,    0,    0,   94,   44,   51,    0,
        0,    0,   34,  140,  140,  140,  140,  140,  140,  140,
      140,  140,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  140,  140,  140,  140,  140,
        0,    0,  136,  156,    0,    0,    0,    0,  142,  155,
        0,    0,    0,    0,  139,  141,    0,   92,    0,    0,
        0,    0,    0,    0,    4,    0,  125,   52,    0,   37,
        0,    0,    0,    0,    0,    0,    0,   42,    0,    0,

       22,    0,    0,    0,    0,    0,  132,    0,   23,    0,
        5,    0,  109,    0,    0,    0,    0,   55,   64,    0,
        0,    0,   93,    0,  124,    0,    0,   43,    0,  140,
      140,  140,  140,  140,    0,    0,  140,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  120,    0,    0,
        0,   63,  104,    0,    0,    0,    0,   25,    0,    0,
      105,    0,   48,    0,    0,    0,    0,    9,   99,  115,
        0,    0,    0,    0,  140,  113,    0,   97,    8,   82,
       24,    0,    0,    0,    0,    0,    0,    0,   46,    7,
        0,    0,    0,  117,    0,  110,  111,  112,    0,    0,

      106,    0,   14,   31,   15,    0,    0,    0,  121,  122,
        0,    0,    0,    0,  133,    0,   98,   67,    0,    0,
        0,    0,   10,    0,    3,   11,    0,    0,    0,   81,
       13,    0,  127,   12,    0,    0,    0,    0,    0,   96,
        0
    } ;

static yyconst YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    5,    6,    7,    8,    9,   10,   11,   12,   13,
       14,   15,   16,   17,   18,   19,   20,   21,   22,   23,
       24,   25,   26,   27,   21,   28,   21,   29,   30,   31,
       32,   33,   34,   35,   36,   37,   38,   39,   40,   41,
       42,   43,   44,   45,   46,   47,   48,   49,   50,   51,
       45,   52,   53,   54,   55,   56,   57,   58,   59,   60,
       61,   62,   63,   64,   65,    1,   66,   67,   68,   69,

       70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
       80,   81,   75,   82,   83,   84,   85,   86,   87,   88,
       89,   90,   91,   92,   93,   10,   10,   94,   95,   96,
       96,   96,   96,   97,   98,   98,   98,   98,   98,   99,
       99,   98,  100,  101,  101,  101,  101,  101,  101,  101,
      102,  103,  103,  103,  103,  103,  103,  103,  103,  104,
      104,  104,  104,  105,  105,  105,  105,  105,  105,  105,
      105,  105,  105,  105,  105,  106,  106,  106,  106,  106,
      106,  106,  107,  108,  108,  108,  108,  108,  108,  109,
      110,  111,  111,  112,  113,  114,  114,  114,  114,  114,

      114,  114,  114,  115,  116,  117,  117,  117,  117,  117,
      117,  117,  117,  117,  117,  117,  117,  117,  117,  117,
      117,  117,  117,  118,  119,  120,  121,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  123,  124,  125,  126,
      127,  127,  127,  128,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  111
    } ;

static yyconst YY_CHAR yy_meta[129] =
    {   0,
        1,    1,    2,    2,    1,    1,    1,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        4,    4,    4,    4,    4,    4,    4,    4,    3,    3,
        1,    3,    3,    3,    3,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        3,    1,    3,    1,    6,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        5,    5,    5,    5,    5,    5,    5,    5,    5,    5,
        1,    1,    1,    7,    8,    8,    8,    8,    8,    6,

        8,    8,    8,    8,    8,    8,    8,    8,    8,    6,
        7,    3,    6,    6,    3,    6,    6,    6,    6,    6,
        6,    6,    6,    3,    6,    6,    6,    3
    } ;

static yyconst flex_uint16_t yy_base[1258] =
    {   0,
        0,    0,  479,16453,  127,16453,  470,  436,  126,   30,
      160,  456,  276,  157,16453,16453,  151,16453,  168,  176,
    16453,  270,  310,16453,  406,16453,  432,  440,    0,  550,
      263,  265,  404,  405,  637,  413,  642,  689,  650,  710,
      751,  749,  799,  790,  847,  898,  842,  906,  942,  950,
      978,  161,16453,  395,  426,    0, 1000, 1002,16453,  360,
    16453,  111,  259,  995, 1012, 1029, 1046, 1063, 1080,   28,
     1097,  123, 1114, 1131, 1148, 1165, 1182,   62, 1185, 1202,
      178,16453,16453, 1306,  444,  673, 1220, 1236, 1251,  273,
     1275, 1292, 1341, 1295, 1358,  229, 1369, 1404, 1420, 1435,

      403, 1452, 1469, 1479, 1489, 1506,  276, 1596, 1630, 1647,
     1664, 1681, 1698, 1715, 1732, 1749,  339, 1766,  704, 1783,
     1800, 1817, 1834, 1851,  370, 1854, 1871,16453, 1970,  431,
     1976, 1895, 1911, 2005,  754, 2022, 1926, 2039, 2049, 2066,
      406,  778,16453, 1386, 2158,16453, 1449, 2168, 2178, 2189,
     2218, 2041, 2271, 2166, 2305, 2322, 2339, 2356, 2373, 2390,
     2407,  474, 2424, 1521, 2441, 2458, 2475, 2492, 2183,  506,
     2502, 2519, 2597,    0,16453, 2537, 2553, 2568, 1944, 2585,
     2632, 2642, 2652, 2669, 1268,16453, 2759, 2793, 2810, 2827,
     2844, 2861, 2878, 2895, 2912,  643, 2929, 1967, 2946, 2963,

     2980, 2997, 3014,  536, 3017, 3034,  416, 3108, 3117, 3109,
     3116, 3184, 3201, 3206, 3216, 3209, 3226, 3243, 3260, 3277,
     3294, 3311,  318, 3328, 3345, 3362, 3379, 3396, 2115, 3413,
     3430, 3447, 3464, 3481,  595, 3484, 3501, 3575, 3576, 3577,
     3585, 3616, 3629, 3638, 3660, 3669, 3689, 3714, 3745, 3755,
     3770, 3753, 3805, 3814, 3820, 3822, 3861, 3867, 3882, 3911,
     3920, 3926, 3965, 3967, 3989, 3980, 4020, 4025, 4040, 4060,
     4084, 4075, 4113, 4104, 4128, 4148, 4179, 4188, 4201, 4239,
     4173, 4252, 4274, 4299, 4314, 4335, 4359, 4367, 4387, 4411,
     4412, 4447,  903,16453,16453, 4439, 4514, 4531,16453, 4327,

     4536, 4546, 4571, 4581, 4586, 4591, 4584, 4601, 4618, 4635,
     4652, 4669, 4686, 4703, 4720, 4737,  904, 4754, 4771,16453,
     4875, 4789,  359, 4806, 4823, 4844, 4861, 4910, 4927, 4944,
     4961,  358, 4978, 4995, 5012, 5029, 5046, 5063, 5080,    0,
        0, 5097, 5114, 5131, 5148, 5165, 5182, 5199,  280, 5216,
     5233, 5250, 5267, 2126, 5284, 5301, 5318, 5335, 4421,  717,
     5345, 5362,    0,    0,    0,    0,    0,    0, 5379, 5396,
     5413, 5430, 5447, 5464, 5481, 5498, 5515, 5532, 1927, 5549,
     5566,16453, 5665, 5584,  322, 5601, 5634, 5651, 5700, 5717,
     5734, 5751, 3707, 5841, 4483, 5849, 5869, 4956, 5696, 5877,

     5746, 2228, 2677,    0,    0,    0, 5826, 5854, 5871, 5888,
     5905, 5922, 5939,  277, 5956, 5973, 5990, 6007, 6024, 2196,
     6041, 6058, 6075, 6092, 6109,  783, 6112, 6129,    0,    0,
        0,    0,    0,    0, 6146, 6163, 6180, 6197, 6214, 6231,
     6248, 6265, 6282, 6299, 2682, 6316, 6333, 6350,  287, 6367,
     6384, 6401, 6418, 6435, 6452, 6469,    0,    0, 6486, 6503,
     6520, 6537, 6554, 6571, 6588,  240, 6605, 6622, 6639, 6656,
     3072, 6673, 6690, 6707, 6724, 6741,  787, 6744, 6761,    0,
        0,    0,    0,    0,    0, 6778, 6795, 6812, 6829, 6846,
     6863, 6880, 6897, 6914, 6931, 3041, 6948, 6965,    0, 7039,

     7040, 7041, 7049, 7080, 7093, 7101, 7102, 7133, 7141, 7146,
     7154, 7185, 7178, 7195, 7212, 7229, 7246, 7263, 7280, 7297,
     7314, 7331, 3139, 7348, 7365, 7439, 7441, 7447, 7482, 7492,
     7497, 7535, 7514, 7559, 7557, 7567, 7595, 7617, 7615, 7639,
     7656, 7671, 7677, 7699, 7716, 7737, 7752, 7747, 7776, 7804,
     7812, 7817, 7852, 7832, 7872, 7877, 7912, 7925, 7887, 7927,
     7940,  315, 7965, 7975, 7980, 8000, 7990, 8025, 8031, 8053,
     8063, 8085, 8094, 8107, 8135, 8150, 8145, 8155, 8190, 8195,
     8210, 8215, 8200, 8251, 8253, 8273, 8275, 8311, 8320, 8335,
     8364, 8370, 8385, 8379, 8414, 8423, 8443, 8438, 8467, 8499,

     8491, 8508, 8543, 8612, 8646, 8663, 8680, 8697, 8714, 8731,
     7150, 8748,  812, 8765, 3511, 8782, 8799, 8816, 8833, 8506,
      805, 8510, 8850, 8924, 8925, 8926, 8934, 8965, 8978, 8986,
     8979, 8996, 9100, 9222, 9047, 9038, 9069, 9084, 3541, 9136,
     9054, 9153, 9163, 9191, 4480, 9344, 9208, 9258, 9275, 9295,
     9330, 9379, 9396,    0,    0,    0,    0,    0,    0,    0,
     9413, 9430, 9447, 9464, 9481, 9498, 9515, 9532, 9549, 9566,
     3169, 9583, 9600,    0,    0,    0,    0,    0, 9617, 9634,
     9733, 9850, 9739, 9658, 9674, 9769, 5778, 9786, 9180, 9819,
     9682, 9836, 5846, 9967, 9886, 9903, 9936, 9180,10026, 9303,

     9365, 9375, 9425,10034, 9804, 9813, 9876, 9930, 9993,10084,
    10092,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    10027,10044,10061,10078,10095,10112,10129,10146,10163,10180,
     3976,10197,10214,    0,    0,    0,    0,    0,10231,10248,
    10326,10266,10283,10300,    0,    0,    0,    0,    0,    0,
        0,10361,10378,10395,10412,10429,10446,10463,10480,10497,
    10514, 5806,10531,10548,    0,    0,    0,    0,    0,10565,
    10582,  313,10656,10657,10658,10666,10697,10690,10707,10781,
    10782,10783,10803,10834,10839,10844,10875,10896,10897,10918,
    10940,10950,10972,10978,10993,11010,11031,11041,11051,11046,

    11098,11089,11099,11120,11137,11158,11173,11178,11202,11223,
    11240,11255,11275,11276,  305,11300,11315,11335,11336,11360,
    11375,11380,11400,11428,11452,11460,11443,11495,11500,11508,
    11553,11517,11558,11575,11596,11613,11634,  978,11644,11649,
    11684,11669,11704,11694,11729,11744,11764,11754,11785,11805,
    11814,11836,11845,11846,11874,11896,11898,    0,    0,    0,
    11891,11908,11925,11942,11959,11976,11993,  204,10319,12010,
    12027,12044,12061, 6975,12078,12095,12112,12129,10660,  843,
    10664,12146,    0,    0,    0,    0,    0,    0,12163,12180,
    12197,12214,12231,12248,12265,12282,12299,12316, 7003,12333,

    12350,12424,12425,12426,12506,12420,  245,12437,12454,12475,
    12492,12541,12558,12575,    0,    0,    0,    0,    0,12592,
    12609,    0,12708,12627,  221,12644,12677,12694,12743,12760,
    12777,12794,11946,12443,12462,12474,12586,12734,12788,12884,
        0,    0,    0,    0,    0,12819,12836,    0,    0,    0,
        0,    0,    0,12853,12870,    0,12944,12945,12946,12954,
    12985,12998,13023,13006,13038,13059,13058,13079,13103,13094,
    13123,13144,13138,13166,13176,13197,13191,13219,13229,13244,
    13250,13279,13285,13294,13323,13314,13329,16453,13358,13338,
    13379,13389,13394,13399,13414,13439,13449,13454,13471,13499,

    13507,13509,13547,13538,13562,13567,13603,13612,13618,13650,
    13656,  263,  246,  209,  213,13681,13691,13706,13716,13741,
    13747,13756,13769,13801,13791,13816,13822,13844,13854,13869,
    13875,13897,13907,    0,    0,    0,    0,    0,    0,    0,
        0,    0,13900,13917,13934,13951,13968,13985,14002,14019,
    14036,14053, 7448,14070,14087,    0,    0,    0,    0,    0,
    14104,14121,14195,16453,14275,14189,14206,14223,    0,16453,
    14392,14244,14261,14311,    0,    0,14385,14390,14395,14410,
    14484,14485,14486,14506,14537,14545,14546,14547,14597,14599,
    14605,14614,14649,14655,14690,14650,14703,14705,14711,14743,

    14756,14765,14778,14810,14816,14818,14831,14866,14871,14872,
    14881,14922,16453,  207,  200,  200,14916,14924,14937,14969,
    14975,14977,14997,15022,15028,15050,15060,15081,15082,    0,
        0,    0,    0,    0,15075,15092,    0,15166,15167,15172,
    15207,15217,15222,15232,  157,15260,15282,15277,15292,15320,
    15342,15333,15348,15377,15383,15392,15421,15430,15436,15445,
    15465,15480,15489,  173,  172,  170,15518,15490,15533,15542,
    15557,15577,15578,15586,    0,15617,15622,15630,15658,15673,
    15675,15683,  169,15711,15726,15736,15758,15780,15771,15779,
    15811,15819,15840,15855,15864,16453,16453,16453,15872,15896,

    15911,15920,15928,15949,15959,  230,15980,15990,15988,16012,
    16040,16041,16050,16085,16065,16094,16109,16126,  240,16147,
    16141,16162,16179,16194,16200,16215,  251,16235,16244,16250,
    16259,  129,16279,16288,   74,  125,  249,  254,  265,16453,
    16453,16374,16380,16383,16391,16394,16400,16403,  126,16408,
    16416,16422,16425,16430,16436,16442,16446
    } ;

static yyconst flex_int16_t yy_def[1258] =
    {   0,
     1241,    1, 1241, 1241, 1241, 1241, 1241, 1241, 1242, 1243,
     1244, 1241, 1245, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1246, 1241, 1247, 1241, 1241, 1248, 1249, 1241,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30, 1241, 1241, 1241, 1241,   30,   30,   30, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1242, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1243, 1241, 1241, 1241,

     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1245, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1247,  173, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,

     1241, 1241, 1241, 1241, 1241, 1241, 1249,   30,   30, 1246,
       30,   30,   30,   30,   30, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30, 1241, 1241, 1241, 1250,   30,   30, 1241,   30,

       30,   30,   30,   30,   30,   30, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1251, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  108,
      108, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241,  108,  108,  108,  108,  108,  108, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1252, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,

     1241, 1241, 1241,  153,  153,  153, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  153,  153,
      153,  153,  153,  153, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241,  187,  187, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  187,
      187,  187,  187,  187,  187, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1253,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30, 1241,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,   30,   30,   30,   30,   30,   30,   30,
     1241, 1241, 1251, 1251, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1254, 1241, 1241, 1241, 1255,
     1241, 1241, 1241,  108,  108,  108,  108,  108,  108,  108,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  108,  108,  108,  108,  108, 1241, 1241,
     1252, 1252, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1256, 1241, 1241, 1241, 1241, 1241, 1241,

     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241,  153,  153,  153,  153,  153,  153,  153,  153,  153,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  153,  153,  153,  153,  153, 1241, 1241,
     1257, 1241, 1241, 1241,  187,  187,  187,  187,  187,  187,
      187, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241,  187,  187,  187,  187,  187, 1241,
     1241, 1253,   30,   30,   30,   30,   30, 1241, 1241,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30, 1241,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30, 1241,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,  604,  604,  604,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241,  604,  604,  604,  604,  604,  604, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,

     1241,   30,   30,   30, 1251, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241,  108,  108,  108,  108,  108, 1241,
     1241,  108, 1252, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
      153,  153,  153,  153,  153, 1241, 1241,  153,  187,  187,
      187,  187,  187, 1241, 1241,  187,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30, 1241,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30, 1241, 1241, 1241, 1241,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,  604,  604,  604,  604,  604,  604,  604,
      604,  604, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241,  604,  604,  604,  604,  604,
     1241, 1241,   30, 1241, 1251, 1241, 1241, 1241,  108, 1241,
     1252, 1241, 1241, 1241,  153,  187,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30, 1241, 1241, 1241, 1241,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,  604,
      604,  604,  604,  604, 1241, 1241,  604,   30,   30,   30,
       30,   30,   30,   30, 1241,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30, 1241, 1241, 1241,   30,   30,   30,   30,
       30,   30,   30,   30,  604,   30,   30,   30,   30,   30,
       30,   30, 1241,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30, 1241, 1241, 1241,   30,   30,

       30,   30,   30,   30,   30, 1241,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30, 1241,   30,
       30,   30,   30,   30,   30,   30, 1241,   30,   30,   30,
       30, 1241,   30,   30, 1241, 1241, 1241, 1241, 1241, 1241,
        0, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241
    } ;

static yyconst flex_uint16_t yy_nxt[16582] =
    {   0,
        4,    5,    6,    7,    5,    8,    9,   10,   11,    4,
       12,   13,   14,   15,   16,   17,   18,   19,   20,   21,
       22,   22,   22,   22,   22,   22,   22,   22,   23,   24,
       25,   26,   27,   28,   29,   30,   31,   32,   33,   34,
       35,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   47,   48,   49,   50,   39,   51,   39,
       52,    4,   53,   54,   55,   56,   31,   32,   33,   34,
       57,   36,   37,   38,   39,   39,   40,   41,   42,   43,
       44,   45,   46,   58,   48,   49,   50,   39,   51,   39,
       59,   60,   61,    4,   62,   63,   64,   62,   62,   62,

       62,   62,   62,   62,   62,   62,   65,   66,   66,   67,
        4,    4,   68,   69,    4,   70,   71,   72,   73,   74,
       75,   76,   77,    4,   78,   79,   80,    4,   81,   98,
      207,   81,   85,  306,  306,  306, 1237,  306, 1236,   99,
     1235,  100,  100,  100,  100,  100,  100,  101,  102,  102,
      102,  102,  103,  104,  104,  105,  106,  107,  142,  142,
      142,  142,  293,  293,  293,  293,  316,  316,  317,  144,
      143,  145,  145,  145,  145,  145,  145,  145,  145,   81,
     1206, 1198,   81, 1197, 1196,  146,  147,   86,  148,  148,
      148,  148,  148,  148,  148,  148,  149,  149,  149,  149,

      149,  149,  149,  149,  300,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      300, 1183, 1166,  294, 1165,   87,  307,  307,  307,  307,
      307,  307,  307, 1164, 1116,   88, 1115,   89,   89,   89,
       89,   89,   89,   90,   91,   91,   91,   91,   92,   93,
       93,   94,   95,   96,  109,  110,  111,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  112,  113,  113,  114,
     1219, 1114,  115,  116, 1113,  117,  118,  119,  120,  121,
      122,  123,  124,  681,  125,  126,  127,  130,  150, 1227,
      151,  151,  151,  151,  151,  151,  151,  151,  238,  211,

     1219,  211, 1232, 1238,  243, 1239,  239,  633, 1240,  152,
      858,  240,  241,  211,  244,  211,  988,  211,  211, 1227,
      211,  242,  330,  330,  330,  330,  330,  330,  238,  211,
      499,  211, 1232, 1238,  243, 1239,  239,  131, 1240,  152,
      815,  240,  241,  211,  244,  211,  457,  211,  211,  173,
      211,  242,  301,  301,  301,  301,  301,  301,  301,  301,
      301,  301,  301,  301,  301,  301,  301,  301,  301,  339,
      339,  339,  339,  339,  339,  132,  324,  324,  324,  324,
      324,  324,  324,  404,  129,  133,  340,  134,  134,  134,
      134,  134,  134,  135,  136,  136,  136,  136,  137,  138,

      138,  139,  140,  141,  154,  155,  156,  154,  154,  154,
      154,  154,  154,  154,  154,  154,  157,  158,  158,  159,
       97,   84,  160,  161,  208,  162,  163,  164,  165,  166,
      167,  168,  169,  499,  170,  171,  172,  174,  175,  245,
      211,  211,  383,  246,  368,  368,  368,  247,  368,  211,
      321,  299,  211,  249,  296,  248,  211,  211,  295,  211,
      211,  211,  250,  186,  254,  211,  128,   83,  211,  245,
      211,  211,   82,  246,  378,  378,  379,  247, 1241,  211,
     1241, 1241,  211,  249, 1241,  248,  211,  211, 1241,  211,
      211,  211,  250, 1241,  254,  211, 1241, 1241,  211,  392,

      392,  392,  392,  392,  392,  176,  333,  333,  333,  333,
      333,  333,  333, 1241, 1241,  177, 1241,  178,  178,  178,
      178,  178,  178,  179,  180,  180,  180,  180,  181,  182,
      182,  183,  184,  185,  188,  189,  190,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  191,  192,  192,  193,
     1241, 1241,  194,  195, 1241,  196,  197,  198,  199,  200,
      201,  202,  203, 1241,  204,  205,  206,  208,  209, 1241,
      208,  208,  208,  208,  208,  208,  208,  208,  210,  434,
      434,  434, 1241,  434, 1241,  211,  212,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  213,  211,

      211,  211,  214,  211,  211,  215,  211,  211,  211,  211,
      444,  444,  445, 1241,  211,  211,  212,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  213,  211,
      211,  211,  214,  211,  211,  215,  211,  211,  211,  211,
      495,  495,  496, 1241,  216,  217,  218,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  220,  221,  221,  222,
     1241,  223,  224,  225,  226,  227,  228,  229,  230,  231,
      232,  233,  234,  211,  235,  236,  237,  255,  211,   84,
      251, 1241, 1241,  252,   84,  211,  211, 1241,  253,  211,
      211,  256,  211, 1241,  211, 1241, 1241,  211,  211,  522,

      522,  523,  211,  211, 1241,  211, 1241,  255,  211, 1241,
      251, 1241, 1241,  252, 1241,  211,  211, 1241,  253,  211,
      211,  256,  211, 1241,  211,  211, 1241,  211,  211,  257,
     1241, 1241,  211, 1241,   84,  211, 1241,  258, 1241,   84,
      259,  260, 1241,   84,  211,  261,  211,  262,  485,  485,
      485,   84,  485,  263,   84,  211,   84, 1241,  211,  257,
     1241, 1241,  211, 1241, 1241,  211, 1241,  258, 1241, 1241,
      259,  260, 1241, 1241,  211,  261,  211,  262, 1241,  142,
      142,  142,  142,  263,  269,  211,  264,  211,  211,  265,
      266,  143,  211, 1241,  267,  211, 1241,  211,  270,  211,

      268,  211, 1241,  211,  211, 1241,  211,  369,  369,  369,
      369,  369,  369,  369,  269,  211,  264,  211, 1241,  265,
      266,  670,  670,  671,  267,  274,  211,  211,  270,  211,
      268,  211, 1241,  211,  211,  211,  211, 1241,  211,  271,
     1241,  275,  211, 1241, 1241,  211, 1241,  211, 1241,  272,
      273,  211, 1241, 1241,  211,  274,  211,  386,  386,  386,
      386,  386,  386,  386, 1241,  211, 1241, 1241,  211,  271,
     1241,  275,  211, 1241, 1241,  211, 1241,  211,  211,  272,
      273,  211,  276,  211,  211,  285,  277,  730,  730,  731,
      211,  761,  761,  762,  211,  211,  278,  211, 1241,  211,

     1241, 1241,  211, 1241,  293,  293,  293,  293,  211,  898,
      898,  899,  276,  211, 1241,  285,  277,  888,  888,  888,
      211,  888, 1241, 1241,  211,  211,  278,  211, 1241,  211,
     1241, 1241,  211,  279,  211, 1241, 1241,  280, 1241, 1241,
      281,  282,  211,  286, 1241, 1241,  211, 1052, 1052, 1053,
      211,  283,  284,  211,  287, 1241, 1241,  288,  289, 1241,
     1241,  211, 1241,  279,  211,  294, 1241,  280, 1241, 1241,
      281,  282,  211,  286, 1241, 1241,  211,  290,  211, 1241,
      211,  283,  284,  211,  287, 1241,  211,  288,  289, 1241,
      211,  211,  291, 1241,  211, 1241, 1241,  211,  211, 1012,

     1013, 1014,  211, 1015, 1241,  211, 1241,  290,  211,  630,
      630,  630,  630,  630,  211, 1241,  211,  292, 1241, 1241,
      211, 1241,  291, 1241,  211, 1241,  211,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211, 1241,  211, 1241,
     1241, 1241, 1241,  251,  211,  285,  252,  292,  211, 1241,
      211,  253,  211, 1241,  211,  211,  211,  211, 1241, 1241,
      211, 1241, 1241,  211, 1241,  297,  211, 1241,  211, 1241,
     1241, 1241, 1241,  251, 1241,  285,  252, 1241,  211, 1241,
      211,  253,  211,  298,  211,  211, 1241,  211,  301,  301,
      301,  301,  301,  301,  301,  300,  300,  300,  300,  300,

      300,  300,  300,  300,  300,  302,  302,  302,  302,  302,
      302,  302,  300,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,  303,  303,  303,  303,  303,  303,  303,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  304,
      304,  303,  303,  303,  300,  300,  305,  305,  305,  305,
      305,  305,  305,  305, 1241,  305,  305,  305,  305, 1241,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      305,  305,  305,  305,  305,  305,  305,  305,  305,  305,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,

      306,  306,  306,  306,  306,  306,  306,  308,  308,  308,
      308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  308,  309,  310,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  312,  312,  312,  312,
      311,  313,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  314,  314,
      314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
      314,  314,  314,  314,  314,  315,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  318,  318,  318,  318,  318,
      318,  318,  318,  318,  318,  319,  319,  319,  319,  319,

      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  319,  320,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,  456,  456,  456,  456,  456,  456,   86,  325,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  326,  328,  328,  328,  328,  328,

      328,  328,  328,  328,  328,   87,  393,  393,  393,  393,
      393,  393,  393,  393, 1241,   88, 1241,   89,   89,   89,
       89,   89,   89,   90,   91,   91,   91,   91,   92,   93,
       93,   94,   95,   96,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  329,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  329,   98,  396,
      396,  396,  396,  396,  396,  396,  396, 1241,   99, 1241,
      100,  100,  100,  100,  100,  100,  101,  102,  102,  102,
      102,  103,  104,  104,  105,  106,  107,  331,  331,  331,

      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,  334,  334,  334,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  334,
      334,  334,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  337,
      337,  337,  337,  337,  337,  337,  337,  337,  337,  338,

      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  340,  340,  340,  340,
      340,  340,  340,  340,  435,  435,  435,  435,  435,  435,
      435,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341, 1241, 1241, 1241, 1241,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341, 1241, 1241, 1241, 1241,
      342,  343,  344,  345,  345,  345,  345,  345,  345,  345,

      345,  345,  346,  347,  347,  348, 1241,  349,  350,  351,
     1241,  352,  353,  354,  355,  356,  357,  358,  359, 1241,
      360,  361,  362,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  364,  364,  364,  364,  364,  364,
      364,  364,  364,  364,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  365,  365,  365,  365,  365,  365,
      365,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  366,  366,  366,  366,  366,  366,  366,  366,  366,

      366,  366,  366,  366,  366,  366,  366,  366,  367,  367,
      367,  367,  367,  367,  367,  367,  367,  367,  367,  367,
      366,  366,  366,  363,  363,  108,  108,  108,  108,  108,
      108,  108,  108, 1241,  108,  108,  108,  108, 1241,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  370,  370,  370,  370,
      370,  370,  370,  370,  370,  370,  370,  370,  370,  370,
      370,  370,  370,  371,  372,  373,  373,  373,  373,  373,

      373,  373,  373,  373,  373,  374,  374,  374,  374,  373,
      375,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  373,  373,  373,  376,  376,  376,
      376,  376,  376,  376,  376,  376,  376,  376,  376,  376,
      376,  376,  376,  376,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  380,  380,  380,  380,  380,  380,
      380,  380,  380,  380,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  382,  129, 1241, 1241, 1241, 1241,  129,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,

      384,  384,  384,  384,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388, 1241,
     1241,  131,  678,  678,  678,  678,  678,  129, 1241, 1241,
     1241, 1241,  129, 1241, 1241, 1241,  129,  450,  450,  450,
      450,  450,  450,  450,  129, 1241,  402,  129,  402,  129,
     1241,  403,  403,  403,  403,  403,  403,  403,  403,  132,
      486,  486,  486,  486,  486,  486,  486, 1241, 1241,  133,
     1241,  134,  134,  134,  134,  134,  134,  135,  136,  136,
      136,  136,  137,  138,  138,  139,  140,  141,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  389,  389,  389,  389,  389,  389,  389,  389,
      389,  389,  389,  389,  389,  389,  389,  389,  389,  390,
      390,  390,  390,  390,  390,  390,  390,  390,  390,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  394, 1241,  145,  145,
      145,  145,  145,  145,  145,  145,  397, 1241,  148,  148,
      148,  148,  148,  148,  148,  148, 1241,  395,  149,  149,

      149,  149,  149,  149,  149,  149, 1241,  398, 1241,  400,
      400,  400,  400,  400,  400,  400,  400,  399,  513,  513,
      513,  513,  513,  513,  513, 1241, 1241,  395,  401,  661,
      661,  661,  661,  661,  661,  661,  150,  398,  151,  151,
      151,  151,  151,  151,  151,  151, 1241,  399,  403,  403,
      403,  403,  403,  403,  403,  403, 1241,  152,  401,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  443, 1241,  152,  404,  405,
     1241,  404,  404,  404,  404,  404,  404,  404,  404,  721,

      721,  721,  721,  721,  721,  721,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406, 1241, 1241, 1241, 1241,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406, 1241, 1241, 1241, 1241,  407,  408,  409,  410,  410,
      410,  410,  410,  410,  410,  410,  410,  411,  412,  412,
      413, 1241,  414,  415,  416,  417,  418,  419,  420,  421,
      422,  423,  424,  425, 1241,  426,  427,  428,  430,  430,

      430,  430,  430,  430,  430,  430,  430,  430,  430,  430,
      430,  430,  430,  430,  430,  430,  430,  430,  430,  430,
      430,  430,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  431,  431,  431,  431,  431,  431,  431,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  432,
      432,  432,  432,  432,  432,  432,  432,  432,  432,  432,
      432,  432,  432,  432,  432,  432,  433,  433,  433,  433,
      433,  433,  433,  433,  433,  433,  433,  433,  432,  432,
      432,  429,  429,  153,  153,  153,  153,  153,  153,  153,
      153, 1241,  153,  153,  153,  153, 1241,  153,  153,  153,

      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  434,  434,  434,
      434,  434,  434,  434,  434,  434,  434,  434,  434,  434,
      434,  434,  434,  434,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  437,  438,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  440,  440,  440,  440,  439,  441,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  439,  442,  442,  442,  442,  442,
      442,  442,  442,  442,  442,  442,  442,  442,  442,  442,

      442,  442,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  447,  447,  447,  447,  447,  447,  447,  447,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  175,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      449,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  451, 1241,  176,  403,  403,  403,

      403,  403,  403,  403,  403, 1241,  177, 1241,  178,  178,
      178,  178,  178,  178,  179,  180,  180,  180,  180,  181,
      182,  182,  183,  184,  185,  452,  452,  452,  452,  452,
      452,  452,  452,  452,  452,  453,  453,  453,  453,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  453,  453,
      453,  453,  454,  454,  454,  454,  454,  454,  454,  454,
      454,  454,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455,  457,
      457,  457,  457,  457,  457,  457,  457,  738,  738,  738,
      738,  738, 1241, 1241,  458,  458,  458,  458,  458,  458,

      458,  458,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458, 1241,
     1241, 1241, 1241,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458, 1241,
     1241, 1241, 1241,  459,  460,  461,  462,  462,  462,  462,
      462,  462,  462,  462,  462,  463,  464,  464,  465, 1241,
      466,  467,  468, 1241,  469,  470,  471,  472,  473,  474,
      475,  476, 1241,  477,  478,  479,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,

      480,  480,  480,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  482,  482,  482,
      482,  482,  482,  482,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  483,  483,  483,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,  483,  483,  483,
      483,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  484,  484,  483,  483,  483,  480,  480,  187,  187,
      187,  187,  187,  187,  187,  187, 1241,  187,  187,  187,

      187, 1241,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  485,  485,  485,  485,  485,  485,  485,  485,
      485,  485,  485,  485,  485,  485,  485,  485,  485,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  488,  489,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  491,  491,
      491,  491,  490,  492,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,

      493,  493,  493,  493,  493,  493,  493,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  498,  498,  498,
      498,  498,  498,  498,  498,  498,  498,  498,  498,  498,
      498,  498,  498,  498,  211, 1241,  769,  769,  769,  769,
      769, 1241,  211,  211, 1241, 1241,  211, 1241, 1241, 1241,
      211, 1241, 1241,  211,  211,  211, 1241, 1241,  211,  211,
     1241,  211,  211, 1241,  211,  752,  752,  752,  752,  752,
      752,  752,  211,  211, 1241, 1241,  211, 1241, 1241, 1241,
      211, 1241, 1241,  211,  211,  211, 1241, 1241,  211,  211,

     1241,  211,  211,  154,  155,  156,  154,  154,  154,  154,
      154,  154,  154,  154,  154,  157,  158,  158,  159, 1241,
      211,  160,  161, 1241,  162,  163,  164,  165,  166,  167,
      168,  169,  211,  170,  171,  172,  500,  211, 1241,  211,
     1241, 1241,  211,  502,  777,  777,  777,  777,  777,  211,
      211, 1241,  211,  211,  211, 1241,  211,  503,  211,  501,
     1241,  211,  211, 1241,  211, 1241,  500,  211,  211,  211,
     1241,  211,  211,  502,  919,  919,  919,  919,  919,  211,
     1241, 1241,  211,  211,  211, 1241,  211,  503,  211,  501,
     1241,  211, 1241, 1241,  211, 1241, 1241, 1241,  211, 1241,

     1241,  211,  504,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  506,
      506,  506,  506,  506,  506,  506,  506,  506,  506,  506,
      506,  506,  506,  506,  506,  506,  506,  506,  506,  506,
      506,  506,  506,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      507,  507,  507,  507,  507,  507,  507,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  508,  508,  508,
      508,  508,  508,  508,  508,  508,  508,  508,  508,  508,

      508,  508,  508,  508,  509,  509,  509,  509,  509,  509,
      509,  509,  509,  509,  509,  509,  508,  508,  508,  505,
      505,  211,  211,  211,  211,  211,  211,  211,  211, 1241,
      211,  211,  211,  211, 1241,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  510,  510,  510,  510,  510,  510,  510,  510,
      510,  510,  510,  510,  511,  511,  511,  211,  511,  512,
      512,  512,  512,  512,  512,  512,  512,  512,  512,  512,

      512,  512,  512,  512,  512,  512,  514,  514,  514,  514,
      514,  514,  514,  514,  514,  514,  514,  514,  514,  514,
      514,  514,  514,  515,  516,  517,  517,  517,  517,  517,
      517,  517,  517,  517,  517,  518,  518,  518,  518,  517,
      519,  517,  517,  517,  517,  517,  517,  517,  517,  517,
      517,  517,  517,  517,  517,  517,  517,  520,  520,  520,
      520,  520,  520,  520,  520,  520,  520,  520,  520,  520,
      520,  520,  520,  520,  521,  521,  521,  521,  521,  521,
      521,  521,  521,  521,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  525,  525,  525,  525,  525,  525,

      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  211,  211,  211,  889,  889,  889,  889,  889,  889,
      889,  211, 1241,  211,  527,  211,  528,  526,  211,  211,
      211,  211,  211,  211, 1241, 1241, 1241,  211, 1241,  529,
      211,  211,  211,  211,  908,  908,  908,  908,  908,  908,
      908,  211,  211,  211,  527,  211,  528,  526,  211,  211,
      211,  211,  211,  211,  211,  211, 1241,  211,  211,  529,
      211,  211,  530,  531,  211, 1241, 1241,  211, 1241, 1241,
     1241,  211,  211, 1241,  211, 1241,  532, 1241, 1241, 1241,
      211, 1241,  533,  211,  211,  211,  211, 1241,  211, 1241,

     1241,  211,  530,  531,  211,  211, 1241,  211,  211, 1241,
     1241,  211,  211,  534,  211,  211,  532,  211,  535, 1241,
      211,  536,  533,  211,  211,  211,  211,  393,  393,  393,
      393,  393,  393,  393,  393,  211, 1241,  211,  211, 1241,
     1241,  537,  211,  534,  211,  211,  698,  211,  535,  538,
      211,  536, 1241, 1241,  211,  211, 1241,  539, 1241, 1241,
     1241, 1241,  211, 1241, 1241, 1241,  211,  211, 1241,  211,
     1241,  537, 1241, 1241,  211, 1241,  698, 1241, 1241,  538,
      211,  211,  540,  541, 1241, 1241, 1241,  539, 1241,  211,
     1241,  211,  211,  211, 1241, 1241,  211,  211,  542,  211,

      211,  211,  544,  211, 1241,  211,  211,  211,  211, 1241,
      211,  211,  540,  541, 1241, 1241,  543, 1241,  211,  211,
     1241,  211,  211,  211, 1241,  211, 1241,  211,  542, 1241,
      211,  211,  544,  211, 1241,  211,  211,  211,  211, 1241,
      211,  211, 1241, 1241, 1241, 1241,  543, 1241,  211,  546,
      211, 1241,  211,  211,  545,  211,  211,  211,  211, 1241,
      211, 1241,  211,  547, 1241, 1241,  211, 1241,  211,  211,
      211,  211,  211, 1241,  211,  548,  549,  211, 1241,  546,
      211, 1241, 1241,  211,  545, 1241,  211,  211,  211, 1241,
      211, 1241,  211,  547, 1241, 1241,  211,  211,  211,  211,

      211, 1241,  211,  211,  211,  548,  549,  211, 1241,  211,
     1241, 1241, 1241,  211, 1241,  211,  211, 1241,  211,  211,
      550, 1241,  211, 1241, 1241,  551, 1241,  211, 1241, 1241,
      211, 1241, 1241,  211,  211, 1241, 1241,  211, 1241,  211,
     1241, 1241, 1241,  211, 1241,  211,  211,  552,  211,  211,
      550, 1241,  211, 1241,  553,  551,  557,  554, 1241,  555,
      211,  559,  211,  211,  211,  556,  211,  211,  558, 1241,
     1241, 1241,  211, 1241,  211,  211, 1241,  552,  211, 1241,
     1241,  211, 1241, 1241,  553, 1241,  557,  554, 1241,  555,
     1241,  559,  211,  211, 1241,  556,  211, 1241,  558, 1241,

      562,  211,  211,  211,  211,  211, 1241, 1241,  211, 1241,
     1241,  211,  560,  211, 1241,  211,  211,  211, 1241,  211,
      211, 1241,  211, 1241,  561,  211, 1241,  563,  211, 1241,
     1241,  211,  211,  211, 1241,  211, 1241,  211, 1241, 1241,
     1241,  211,  560,  211,  211,  211,  211,  211, 1241,  211,
      211, 1241,  211, 1241,  561,  211,  211,  563,  211, 1241,
     1241,  211,  211, 1241, 1241,  211, 1241,  211,  564, 1241,
     1241,  211,  211,  565,  211,  211,  211,  211, 1241, 1241,
      211,  945,  945,  945,  945,  945,  211,  566,  211, 1241,
     1241,  211,  211, 1241, 1241,  211,  211, 1241,  564, 1241,

     1241, 1241,  211,  565, 1241,  211,  211,  211,  211, 1241,
      211,  211,  211,  567, 1241,  211,  568,  566,  211, 1241,
      211, 1241,  211,  211,  569,  211,  211,  211,  570, 1241,
      211, 1241,  211, 1241, 1241, 1241,  211, 1241,  211,  211,
      211,  211,  211,  567, 1241,  211,  568, 1241, 1241,  211,
      211,  571,  211,  211,  569, 1241,  572,  211,  570,  211,
      211,  211,  211, 1241,  211,  211,  211,  573,  211,  211,
      211,  574, 1241, 1241, 1241, 1241,  211,  575, 1241,  211,
      211,  571,  211,  211,  211, 1241,  572, 1241, 1241,  211,
     1241,  211, 1241, 1241,  211,  211,  576,  573,  211, 1241,

      211,  574, 1241,  211, 1241, 1241,  211,  575,  586,  211,
      211, 1241, 1241,  211,  211,  211, 1241,  577, 1241, 1241,
      578,  211, 1241, 1241,  211,  211,  576,  211,  211, 1241,
      211,  211, 1241,  211,  211,  579,  211,  211,  586,  211,
      211, 1241,  580,  211, 1241,  211, 1241,  577,  581,  211,
      578,  211, 1241,  211,  211,  211,  211,  211,  211, 1241,
     1241,  211, 1241, 1241,  211,  579,  211,  211, 1241, 1241,
      211, 1241,  580,  211, 1241,  211,  582, 1241,  581,  211,
     1241, 1241, 1241,  211, 1241,  583,  211,  211,  211,  584,
      585,  211, 1241, 1241,  211, 1241, 1241, 1241,  587, 1241,

      211, 1241, 1241, 1241,  211,  211,  582,  211, 1241,  588,
      211, 1241, 1241,  589, 1241,  583, 1241,  211,  211,  584,
      585,  211,  211, 1241,  211,  590,  211, 1241,  587,  211,
      211, 1241, 1241, 1241,  211,  591, 1241,  211, 1241,  588,
      211, 1241, 1241,  589, 1241, 1241,  592,  211, 1241, 1241,
      211,  211,  211, 1241,  211,  590,  211, 1241, 1241,  211,
     1241,  593,  211,  211, 1241,  591,  211, 1241, 1241,  211,
      594,  211, 1241, 1241, 1241,  211,  592,  211, 1241,  211,
      211,  211,  211,  211,  211, 1241, 1241,  211, 1241, 1241,
      211,  593,  211,  211, 1241,  211,  211,  595, 1241,  211,

      594,  211,  596,  211, 1241,  211, 1241,  211,  597,  211,
      598,  211,  211,  211,  211,  211, 1241,  211, 1241,  211,
      211, 1241,  211,  211, 1241,  211,  599,  595, 1241, 1241,
     1241, 1241,  596,  211, 1241,  211, 1241,  211,  597,  211,
      598,  211,  211, 1241,  211,  211, 1241,  211,  211,  211,
     1241,  602,  211,  211, 1241, 1241,  599,  600, 1241,  211,
      211, 1241,  601,  211,  211,  211,  211,  211, 1241,  211,
     1241, 1241,  211, 1241, 1241, 1241, 1241,  211,  211, 1241,
     1241,  602,  603,  211, 1241, 1241, 1241,  600, 1241,  211,
      211, 1241,  601,  211,  211,  211,  211,  211,  701,  211,

      701, 1241,  211,  702,  702,  702,  702,  702,  702,  702,
      702, 1241,  603,  211,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669, 1241,  211, 1241, 1241, 1241,  211,
     1241, 1241,  211,  605,  606,  607,  605,  605,  605,  605,
      605,  605,  605,  605,  605,  608,  609,  609,  610, 1241,
      211,  611,  612, 1241,  613,  614,  615,  616,  617,  618,
      619,  620,  211,  621,  622,  623,  211,  211, 1241,  211,
     1241, 1241,  211,  914,  914,  914,  914,  914,  914,  211,
      211, 1241,  211,  211,  211, 1241,  211, 1241,  211, 1241,
      624,  211,  211, 1241,  211, 1241,  211,  211,  211,  211,

     1241,  211,  211, 1241, 1241, 1241, 1241,  211, 1241,  211,
     1241, 1241,  211,  211,  211,  625,  211,  211,  211,  211,
     1241,  211,  211,  211,  211, 1241,  211,  211,  211,  211,
     1241,  211, 1241,  211,  211, 1241,  211,  211,  211,  211,
     1241,  211, 1241,  211, 1241, 1241,  211,  211, 1241,  211,
     1241, 1241,  211,  211, 1241, 1241,  211,  211, 1241,  211,
     1241, 1241, 1241,  211,  211, 1241,  211, 1241,  211,  211,
     1241,  211, 1241,  211, 1241, 1241,  211,  306,  306,  306,
      306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,  306,  306,  626,  626,  626,  626,  626,  626,

      626,  626,  626,  626,  626,  626,  626,  626,  626,  626,
      626,  300,  300,  300,  300,  300,  301,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      301,  301,  301,  301,  301,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  627,  627,  627,  627,  627,  627,  627,  627,
      627,  627,  627,  627,  627,  627,  627,  627,  627,  300,
      628,  628,  628,  628,  628,  628,  628,  628,  628,  628,
      628,  628,  628,  628,  628,  628,  628,  628,  628,  628,

      628,  628,  628,  628,  628,  628,  628,  628,  628,  628,
      628,  628,  628,  300,  300,  300,  300,  300,  300,  300,
      300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
      629,  629,  629,  629,  629,  629,  629,  629,  629,  629,
      629,  629,  629,  629,  629,  629,  629,  631,  631,  631,
      631,  631,  631,  631,  631,  631,  631,  631,  631,  631,
      631,  631,  631,  631,  632,  632,  632,  632,  632,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,
      632,  634,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,   84,

       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,  646,  646,  646,  646,
      646,  646,  646,  646,  646,  646,  646,  646,  646,  646,
      646,  646,  646, 1241, 1241, 1241,  635,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,  706, 1241,  706,  636, 1241,  707,  707,  707,  707,
      707,  707,  707,  707,  637, 1241,  638,  638,  638,  638,
      638,  638,  639,  640,  640,  640,  640,  641,  642,  642,

      643,  644,  645,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      648,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  649,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  649,  649,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,

      650,  650,  650,  650,  650,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,  651,
      651,  651,  651,  651,  651,  651,  651,  651,  651,  651,
      651,  651,  651,  651,  651,  651,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  653,  653,  653,  653,  653,  653,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,
      654,  655,  655,  655,  655,  655,  655,  655,  655,  655,

      655,  655,  655,  655,  655,  655,  655,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  656,  656,  656,  656,  656,  656,  656,  656,  656,
      656,  655,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  657,  657,
      657,  657,  657,  657,  657,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  658,  658,  658,  658,  658,
      658,  658,  658,  658,  658,  658,  658,  658,  658,  658,
      658,  658,  659,  659,  659,  659,  659,  659,  659,  659,

      659,  659,  659,  659,  658,  658,  658,  655,  655,  341,
      341,  341,  341,  341,  341,  341,  341, 1241,  341,  341,
      341,  341, 1241,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  341,  341,  341,  341,  341,  341,  341,
      341,  341,  341,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  660,  660,  660, 1241,  660,
      660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  663,  664,  665,  665,  665,  665,

      665,  665,  665,  665,  665,  665,  666,  666,  666,  666,
      665,  667,  665,  665,  665,  665,  665,  665,  665,  665,
      665,  665,  665,  665,  665,  665,  665,  665,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  672,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  673,  673,  673,  673,  673,
      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      673,  673,  368,  368,  368,  368,  368,  368,  368,  368,
      368,  368,  368,  368,  368,  368,  368,  368,  368,  674,
      674,  674,  674,  674,  674,  674,  674,  674,  674,  674,

      674,  674,  674,  674,  674,  674,  363,  363,  363,  363,
      363,  364,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  364,  364,  364,  364,  364,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  675,  675,  675,
      675,  675,  675,  675,  675,  675,  675,  675,  675,  675,
      675,  675,  675,  675,  363,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,  676,

      676,  676,  676,  676,  676,  676,  676,  676,  363,  363,
      363,  363,  363,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  363,  677,  677,  677,  677,  677,
      677,  677,  677,  677,  677,  677,  677,  677,  677,  677,
      677,  677,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  680,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  682,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  708, 1241,  708, 1241, 1241,  709,  709,  709,  709,
      709,  709,  709,  709, 1241, 1241,  683,  694,  694,  694,
      694,  694,  694,  694,  694,  694,  694,  694,  694,  694,
      694,  694,  694,  694,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  710, 1241,  710,  684, 1241,  711,  711,  711,  711,
      711,  711,  711,  711,  685, 1241,  686,  686,  686,  686,
      686,  686,  687,  688,  688,  688,  688,  689,  690,  690,
      691,  692,  693,  129,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  695,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  696,  697,  697,  697,  697,  697,  697,
      697,  697,  697,  697,  697,  697,  697,  697,  697,  697,
      697,  699,  699,  699,  699,  699,  699,  699,  699,  396,
      396,  396,  396,  396,  396,  396,  396, 1241, 1241, 1241,
      700,  926,  926,  926,  926,  926,  926,  926,  703,  704,
      704,  704,  704,  704,  704,  704,  704,  400,  400,  400,

      400,  400,  400,  400,  400, 1241, 1241, 1241,  705, 1241,
      700,  953,  953,  953,  953,  953,  401, 1241,  703,  712,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713, 1241, 1241,  705,  932,
      932,  932,  932,  932,  932, 1241,  401,  714,  714,  714,
      714,  714,  714,  714,  714,  714,  714,  714,  714,  714,
      714,  714,  714,  714,  714,  714,  714,  714,  714,  714,
      714,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  715,  715,

      715,  715,  715,  715,  715,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  716,  716,  716,  716,  716,
      716,  716,  716,  716,  716,  716,  716,  716,  716,  716,
      716,  716,  717,  717,  717,  717,  717,  717,  717,  717,
      717,  717,  717,  717,  716,  716,  716,  713,  713,  406,
      406,  406,  406,  406,  406,  406,  406, 1241,  406,  406,
      406,  406, 1241,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,
      406,  406,  406,  406,  406,  406,  406,  406,  406,  406,

      718,  718,  718,  718,  718,  718,  718,  718,  718,  718,
      718,  718,  719,  719,  719,  406,  719,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  722,  722,  722,  722,  722,  722,
      722,  722,  722,  722,  722,  722,  722,  722,  722,  722,
      722,  723,  724,  725,  725,  725,  725,  725,  725,  725,
      725,  725,  725,  726,  726,  726,  726,  725,  727,  725,
      725,  725,  725,  725,  725,  725,  725,  725,  725,  725,
      725,  725,  725,  725,  725,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,

      728,  728,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  732,  732,  732,  732,  732,  732,  732,  732,
      732,  732,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  733,  733,  733,  434,
      434,  434,  434,  434,  434,  434,  434,  434,  434,  434,
      434,  434,  434,  434,  434,  434,  734,  734,  734,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,  734,
      734,  734,  734,  429,  429,  429,  429,  429,  430,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,

      429,  429,  430,  430,  430,  430,  430,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  735,  735,  735,  735,  735,  735,
      735,  735,  735,  735,  735,  735,  735,  735,  735,  735,
      735,  429,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  736,  736,  736,  736,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  429,  429,  429,  429,
      429,  429,  737,  737,  737,  737,  737,  737,  737,  737,

      737,  737,  737,  737,  737,  737,  737,  737,  737,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  740,  740,  740,  740,
      740,  740,  740,  740,  740,  740,  740,  740,  740,  740,
      740,  740,  740,  449,  449,  449,  449,  449,  449,  449,
      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  741,  741,  741,
      741,  741,  741,  741,  741,  741,  741,  741,  741,  741,
      741,  741,  741,  741,  173,  173,  173,  173,  173,  173,

      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  742,  742,
      742,  742,  742,  742,  742,  742,  742,  742,  742,  742,
      742,  742,  742,  742,  742,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  744,  744,  744,  744,  744,  744,  744,  744,
      744,  744,  744,  744,  744,  744,  744,  744,  744,  745,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  747,  747,  747,  747,

      747,  747,  747,  747,  747,  747,  747,  747,  747,  747,
      747,  747,  747,  747,  747,  747,  747,  747,  747,  747,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  748,  748,  748,
      748,  748,  748,  748,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  749,  749,  749,  749,  749,  749,
      749,  749,  749,  749,  749,  749,  749,  749,  749,  749,
      749,  750,  750,  750,  750,  750,  750,  750,  750,  750,
      750,  750,  750,  749,  749,  749,  746,  746,  458,  458,

      458,  458,  458,  458,  458,  458, 1241,  458,  458,  458,
      458, 1241,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  458,  458,  458,  458,  458,  458,  458,  458,
      458,  458,  457,  457,  457,  457,  457,  457,  457,  457,
      457,  457,  457,  457,  751,  751,  751, 1241,  751,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  754,  755,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  757,  757,  757,  757,  756,

      758,  756,  756,  756,  756,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  756,  756,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  760,  760,  760,  760,  760,  760,
      760,  760,  760,  760,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  485,  485,  485,  485,  485,  485,  485,  485,  485,
      485,  485,  485,  485,  485,  485,  485,  485,  765,  765,
      765,  765,  765,  765,  765,  765,  765,  765,  765,  765,

      765,  765,  765,  765,  765,  480,  480,  480,  480,  480,
      481,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  481,  481,  481,  481,  481,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  766,  766,  766,  766,
      766,  766,  766,  766,  766,  766,  766,  766,  766,  766,
      766,  766,  766,  480,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,
      767,  767,  767,  767,  767,  767,  767,  767,  767,  767,

      767,  767,  767,  767,  767,  767,  767,  480,  480,  480,
      480,  480,  480,  480,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,  768,  768,  768,  768,  768,  768,
      768,  768,  768,  768,  768,  768,  768,  768,  768,  768,
      768,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      770,  770,  770,  770,  770,  770,  770,  770,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  771,  211,  211,  211, 1043, 1043,
     1043, 1043, 1043, 1043, 1043,  211, 1241,  211,  211,  211,
     1241,  211,  211,  211,  211,  211,  211,  211, 1241, 1241,

     1241,  211, 1241, 1241,  211,  211,  211,  211, 1060, 1060,
     1060, 1060, 1060, 1241, 1241,  211,  211,  211,  211,  211,
     1241,  211,  211,  211,  211,  211,  211,  211,  211,  211,
     1241,  211,  211, 1241,  211,  211, 1241,  211,  211, 1241,
     1241,  211, 1241, 1241, 1241,  211,  211, 1241,  211,  211,
      211, 1241, 1241,  211,  211, 1241,  211,  211,  211,  211,
     1241, 1241,  211, 1241, 1241,  211, 1241,  211,  211,  211,
     1241,  211, 1241, 1241, 1241,  211, 1241,  211,  211,  211,
      211,  211,  211,  211,  211,  211,  211,  211,  211,  211,
      211, 1241, 1241,  211,  211, 1241,  211, 1241,  211,  211,

     1241,  211,  211, 1241, 1241, 1241,  211,  211, 1241,  211,
     1241,  211,  211, 1241, 1241,  211, 1241, 1241,  211,  211,
      211,  211, 1241,  211,  211, 1241,  211, 1241,  211, 1241,
     1241,  211,  211,  211, 1241, 1241,  211,  211, 1241,  211,
      211, 1241, 1241,  604,  604,  604,  604,  604,  604,  604,
      604,  211,  604,  604,  604,  604, 1241,  604,  604,  604,
     1241, 1241, 1241,  211, 1241, 1241, 1241,  211, 1241, 1241,
      211,  512,  512,  512,  512,  512,  512,  512,  512,  512,
      512,  512,  512,  512,  512,  512,  512,  512,  773,  773,
      773,  773,  773,  773,  773,  773,  773,  773,  773,  773,

      773,  773,  773,  773,  773,  505,  505,  505,  505,  505,
      506,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  504,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  506,  506,  506,  506,  506,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  774,  774,  774,  774,
      774,  774,  774,  774,  774,  774,  774,  774,  774,  774,
      774,  774,  774,  505,  775,  775,  775,  775,  775,  775,
      775,  775,  775,  775,  775,  775,  775,  775,  775,  775,
      775,  775,  775,  775,  775,  775,  775,  775,  775,  775,

      775,  775,  775,  775,  775,  775,  775,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  776,  776,  776,  776,  776,  776,
      776,  776,  776,  776,  776,  776,  776,  776,  776,  776,
      776,  778,  778,  778,  778,  778,  778,  778,  778,  778,
      778,  778,  778,  778,  778,  778,  778,  778,  779,  779,
      779,  779,  779,  779,  779,  779,  779,  779,  779,  779,
      779,  779,  779,  779,  779,  211, 1241,  211,  780,  781,
     1241, 1241, 1241,  211, 1241,  782, 1241,  211, 1241,  211,
     1241,  211, 1241,  211,  211,  211,  211, 1241, 1241,  211,

     1241, 1241,  211, 1241, 1241,  211, 1241,  211,  780,  781,
     1241, 1241, 1241,  211, 1241,  782, 1241,  211,  211,  211,
     1241,  211, 1241,  211,  211,  211,  211, 1241,  211,  211,
      783, 1241,  211,  211,  211, 1241, 1241,  211,  784, 1241,
      211, 1241, 1241,  785,  211,  211, 1241,  211,  211,  211,
      211, 1241,  211, 1134, 1134, 1134, 1134, 1134,  211, 1241,
      783, 1241,  789,  211,  211, 1241,  211,  211,  784,  211,
      211,  211,  786,  785,  211,  211, 1241,  211, 1241,  211,
      211, 1241,  211,  211, 1241, 1241, 1241,  787,  788, 1241,
      211, 1241,  789,  211,  790,  211,  211, 1241, 1241,  211,

     1241,  211,  786,  211,  791,  211, 1241,  211, 1241,  211,
     1241,  211,  211,  211,  211,  211, 1241,  787,  788,  211,
      211, 1241,  211,  211,  790,  211, 1241, 1241, 1241, 1241,
     1241,  211, 1241,  211,  791,  211, 1241,  211, 1241,  211,
     1241,  211,  211,  211,  211,  211, 1241,  211,  792,  211,
      211,  211,  211,  211,  793, 1241, 1241, 1241, 1241, 1241,
     1241,  211, 1241,  211, 1241,  211, 1241,  211, 1241,  211,
      794, 1241,  211,  211, 1241,  211, 1241,  211,  792, 1241,
      211,  211, 1241,  211,  793, 1241, 1241,  211,  795, 1241,
     1241,  211,  211,  211,  211,  211, 1241,  211, 1241,  211,

      794, 1241,  211, 1241,  211,  211, 1241,  211,  796, 1241,
     1241,  211, 1241,  211, 1241, 1241, 1241,  211,  795,  211,
     1241,  211,  211,  797,  211,  211,  211, 1241, 1241,  211,
      798, 1241,  211, 1241,  211,  211, 1241,  211,  796, 1241,
     1241,  211, 1241,  211, 1241, 1241, 1241,  211,  799,  211,
     1241,  211,  211,  797,  211,  211,  211, 1241, 1241,  211,
      798, 1241,  211,  800,  211,  211, 1241, 1241,  211, 1241,
     1241,  211, 1241,  211, 1241, 1241, 1241,  211,  799, 1241,
     1241,  211,  211,  211,  211,  211, 1241,  801,  211,  211,
      803, 1241,  211,  800,  211,  211, 1241, 1241,  211,  211,

      211,  211,  211,  211,  211, 1241,  802,  211, 1241, 1241,
     1241, 1241,  211,  211, 1241,  211, 1241,  801,  211,  211,
      803, 1241,  211, 1241,  211,  211, 1241,  804,  211,  211,
      211,  211,  211, 1241,  211, 1241,  802,  211, 1241, 1241,
      211, 1241,  211,  805, 1241, 1241, 1241, 1241,  211, 1241,
     1241, 1241,  211,  211,  211, 1241,  211,  804,  211,  211,
      211,  211, 1241,  806,  211,  211, 1241,  211,  211,  211,
      211, 1241,  211,  805, 1241,  808, 1241, 1241,  211, 1241,
      211, 1241,  211,  211,  211, 1241,  211,  211,  211,  211,
      211, 1241, 1241,  806,  211,  211, 1241,  211,  211,  211,

      211, 1241,  211,  807,  211,  808, 1241,  211,  211, 1241,
      211, 1241, 1241,  211,  211, 1241, 1241,  211,  211, 1241,
      211, 1241, 1241,  211,  211,  211,  809,  211,  810,  211,
      211, 1241,  211,  807,  211,  211, 1241,  211,  211,  813,
     1241, 1241,  211,  211, 1241, 1241, 1241, 1241,  211, 1241,
      211,  811, 1241,  211,  211,  211,  809,  211,  810,  211,
      211,  211,  211,  211,  211,  211,  812,  211, 1241,  813,
      814, 1241,  211,  211, 1241,  211,  211,  211,  211,  211,
      211,  811,  211, 1241, 1241, 1241, 1241, 1241,  211, 1241,
      211,  211,  211,  211,  211,  211,  812,  211, 1241, 1241,

      814,  816, 1241,  211, 1241,  211,  211,  211, 1241,  211,
      211,  211,  211,  211, 1241, 1241,  211,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211,  211,  211,  817,
      211,  816,  211,  818, 1241,  211,  211, 1241,  211,  819,
     1241,  211,  211,  211, 1241,  211,  211,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211,  211,  211,  817,
      211,  211,  211,  818, 1241,  211,  211,  211,  211,  819,
     1241, 1241,  211,  211, 1241,  211, 1241,  211,  211,  211,
      211, 1241,  211,  820, 1241,  211,  211, 1241, 1241,  211,
     1241,  211, 1241, 1241, 1241, 1241,  821,  211, 1241,  211,

     1241,  211,  822,  211, 1241,  211, 1241,  211,  211,  211,
      211,  211, 1241,  820, 1241,  211,  211, 1241,  211,  211,
     1241,  211, 1241, 1241, 1241, 1241,  821, 1241, 1241,  211,
      211,  211,  822,  211,  824,  211, 1241,  823,  211, 1241,
      211,  211,  211,  211, 1241,  211,  211, 1241,  211,  211,
     1241,  211, 1241, 1241,  825,  211, 1241, 1241, 1241,  211,
      211, 1241,  211,  211,  824, 1241, 1241,  823, 1241, 1241,
      211,  211,  211,  211, 1241, 1241,  211, 1241, 1241,  211,
     1241,  211,  826,  211,  825,  211,  211,  211,  827,  211,
      211,  211,  211,  211,  829, 1241, 1241,  211,  211,  828,

      211,  211,  211,  211, 1241,  211, 1241,  211, 1241, 1241,
      211,  211,  826,  211, 1241, 1241,  211,  211,  827, 1241,
      211,  211, 1241,  211,  829, 1241,  211,  211,  211,  828,
      211,  211,  211,  211, 1241,  211,  211,  211,  211,  835,
      211,  830,  211,  831, 1241,  211,  211,  211,  211,  832,
      211,  211,  211, 1241, 1241,  211,  211, 1241,  211, 1241,
      833,  211,  211,  211,  834,  211,  211,  211,  211,  835,
      211,  830,  211,  831, 1241,  211,  211,  211,  211,  832,
      211,  211,  211, 1241,  838,  211,  836,  211,  211,  211,
      833, 1241,  211,  211,  834,  211, 1241,  211, 1241,  211,

      211,  211, 1241,  211, 1241,  211,  211, 1241,  837,  211,
     1241,  211, 1241, 1241,  840, 1241,  836,  211, 1241,  211,
     1241,  211, 1241,  211,  839,  211, 1241,  211,  211,  211,
      211,  211, 1241,  211, 1241,  211,  211, 1241,  837,  211,
     1241,  211, 1241, 1241,  840, 1241, 1241,  211, 1241, 1241,
     1241,  211, 1241,  211,  839,  211,  211,  211,  211,  211,
      211, 1241,  841,  211, 1241, 1241,  211,  842,  211, 1241,
     1241,  211,  211,  843,  844,  211, 1241,  211, 1241, 1241,
     1241,  845, 1241,  211, 1241, 1241,  211,  846, 1241,  211,
      211, 1241,  841,  211, 1241, 1241,  211,  842,  211, 1241,

      211,  211,  211,  843,  844,  211,  211, 1241, 1241, 1241,
     1241,  845,  211,  211, 1241,  211,  847,  846,  211,  211,
      211,  211,  211, 1241,  848,  211, 1241,  211, 1241, 1241,
      211,  849, 1241,  211,  211, 1241,  211,  211, 1241, 1241,
      211, 1241,  211, 1241, 1241,  211,  847, 1241,  211,  211,
      211,  211,  211,  850,  848,  211, 1241,  211, 1241,  211,
     1241,  849,  211,  211,  211, 1241,  211,  211, 1241,  211,
      211,  211,  851, 1241,  211,  211, 1241, 1241,  211,  211,
      211, 1241, 1241,  850, 1241, 1241,  211, 1241, 1241,  211,
      211,  211,  211,  211,  852,  211,  211, 1241,  211,  211,

     1241,  211,  851,  211,  211,  211, 1241, 1241,  211,  211,
     1241, 1241, 1241, 1241, 1241,  211,  211, 1241,  853,  211,
      211,  211,  211,  211,  852,  211, 1241,  211,  211, 1241,
     1241, 1241, 1241,  211, 1241,  211, 1241, 1241, 1241,  855,
     1241, 1241, 1241,  211,  211,  211,  211,  211,  853,  211,
     1241,  211,  211,  854,  211, 1241,  211,  211, 1241,  856,
      211, 1241, 1241,  211, 1241,  211, 1241, 1241, 1241,  855,
     1241, 1241, 1241,  211,  211, 1241,  211,  211, 1241,  211,
     1241,  211, 1241,  854,  211, 1241,  211, 1241, 1241,  856,
      211,  211, 1241,  211,  857,  211, 1241, 1241,  211,  897,

      897,  897,  897,  897,  897,  897,  897,  897,  897,  211,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
     1241,  211, 1241, 1241,  857,  211, 1241, 1241,  211,  858,
      859, 1241,  858,  858,  858,  858,  858,  858,  858,  858,
     1241, 1241, 1241, 1241, 1241, 1241, 1241,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860, 1241, 1241, 1241, 1241,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,

      860,  860, 1241, 1241, 1241, 1241,  861,  862,  863,  864,
      864,  864,  864,  864,  864,  864,  864,  864,  865,  866,
      866,  867, 1241,  868,  869,  870,  871,  872,  873,  874,
      875,  876,  877,  878,  879, 1241,  880,  881,  882,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      884,  884,  884,  884,  884,  884,  884,  884,  884,  884,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      885,  885,  885,  885,  885,  885,  885,  883,  883,  883,

      883,  883,  883,  883,  883,  883,  883,  886,  886,  886,
      886,  886,  886,  886,  886,  886,  886,  886,  886,  886,
      886,  886,  886,  886,  887,  887,  887,  887,  887,  887,
      887,  887,  887,  887,  887,  887,  886,  886,  886,  883,
      883,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  888,  888,
      888,  888,  888,  888,  888,  888,  888,  888,  888,  888,
      888,  888,  888,  888,  888,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  891,  892,  893,  893,  893,  893,  893,  893,

      893,  893,  893,  893,  894,  894,  894,  894,  893,  895,
      893,  893,  893,  893,  893,  893,  893,  893,  893,  893,
      893,  893,  893,  893,  893,  893,  896,  896,  896,  896,
      896,  896,  896,  896,  896,  896,  896,  896,  896,  896,
      896,  896,  896,  901,  901,  901,  901,  901,  901,  901,
      901,  901,  901,  901,  901,  901,  901,  901,  901,  901,
      211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
      211, 1241,  211,  211,  211, 1241,  211,  211,  211,  211,
      211,  211,  211, 1241, 1241, 1241,  211, 1241, 1241,  211,
      211,  211,  211, 1241,  903, 1241, 1241, 1241, 1241, 1241,

      211,  211,  211,  211,  211, 1241,  902,  211,  211,  211,
      211,  211,  211,  211,  211, 1241,  211,  211, 1241,  211,
      211, 1241,  211, 1241, 1241, 1241,  211, 1241, 1241, 1241,
      211,  211, 1241,  211,  211, 1241, 1241, 1241,  211, 1241,
     1241,  211, 1241,  211,  211, 1241, 1241,  211, 1241, 1241,
      211, 1241,  211,  633, 1241, 1241,  211, 1241,  633, 1241,
      211, 1241, 1241,  211,  211, 1241, 1241, 1241,  211, 1241,
     1241,  211,  904,  904,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  904,
      904,  904,  904,  904,  904,  904,  904,  904,  904,  904,

      904,  904,  904,  904,  904,  904,  634, 1241,  633, 1241,
     1241, 1241, 1241,  633, 1241, 1241, 1241,  633, 1241, 1241,
     1241, 1241, 1241, 1241, 1241,  633, 1241, 1241,  633, 1241,
      633,  906,  906,  906,  906,  906,  906,  906,  906,  906,
      906,  906,  906,  906,  906,  906,  906,  910,  910,  910,
      910,  910,  910,  910,  910,  910,  910, 1241, 1241, 1241,
     1241,  635,  907,  907,  907,  907,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633, 1241,  933, 1241,  933, 1241,  636,

      934,  934,  934,  934,  934,  934,  934,  934, 1241,  637,
     1241,  638,  638,  638,  638,  638,  638,  639,  640,  640,
      640,  640,  641,  642,  642,  643,  644,  645,  905,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      911,  911,  911,  912,  912,  912,  912,  912,  912,  912,
      912,  912,  912,  928,  928,  928,  928,  928,  928,  928,
      928,  928,  928,  635,  913,  913,  913,  913,  913,  913,
      913,  913,  913,  913,  913,  913,  913,  913,  913,  913,

      913,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,  935, 1241,
      935,  636, 1241,  936,  936,  936,  936,  936,  936,  936,
      936,  637, 1241,  638,  638,  638,  638,  638,  638,  639,
      640,  640,  640,  640,  641,  642,  642,  643,  644,  645,
      320,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,  323,  323,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  323,
      323,  323,  323,  323,  323,  702,  702,  702,  702,  702,
      702,  702,  702, 1241,   98,  702,  702,  702,  702,  702,

      702,  702,  702, 1241,   99,   86,  100,  100,  100,  100,
      100,  100,  101,  102,  102,  102,  102,  103,  104,  104,
      105,  106,  107,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
      937, 1241,  937,   87, 1241,  938,  938,  938,  938,  938,
      938,  938,  938,   88, 1241,   89,   89,   89,   89,   89,
       89,   90,   91,   91,   91,   91,   92,   93,   93,   94,
       95,   96,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   97,   97,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,

      332,  332,  332,  332,  332,  332,  660,  660,  660,  660,
      660,  660,  660,  660,  660,  660,  660,  660,  660,  660,
      660,  660,  660,  915,  915,  915,  915,  915,  915,  915,
      915,  915,  915,  915,  915,  915,  915,  915,  915,  915,
      655,  655,  655,  655,  655,  656,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  654,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  655,  656,
      656,  656,  656,  656,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  916,  916,  916,  916,  916,  916,  916,  916,  916,

      916,  916,  916,  916,  916,  916,  916,  916,  655,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  917,  917,  917,  917,  917,  917,  917,  917,
      917,  917,  655,  655,  655,  655,  655,  655,  655,  655,
      655,  655,  655,  655,  655,  655,  655,  655,  655,  918,
      918,  918,  918,  918,  918,  918,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  918,  920,  920,  920,  920,
      920,  920,  920,  920,  920,  920,  920,  920,  920,  920,
      920,  920,  920,  921,  921,  921,  921,  921,  921,  921,

      921,  921,  921,  921,  921,  921,  921,  921,  921,  921,
      922,  922,  922,  922,  922,  922,  922,  922,  922,  922,
      922,  922,  922,  922,  922,  922,  922,  922,  922,  922,
      922,  922,  922,  922,  922,  922,  922,  922,  922,  922,
      922,  922,  922,  922,  682,  681, 1241, 1241, 1241, 1241,
      681,  924,  924,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  924,  925,  925,  925,
      925,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      925,  925,  930,  930,  930,  930,  930,  930,  930,  930,
      930,  930, 1241, 1241,  683, 1241, 1241, 1241, 1241, 1241,

      681, 1241, 1241, 1241, 1241,  681, 1241, 1241, 1241,  681,
     1241, 1241, 1241, 1241, 1241, 1241, 1241,  681, 1241,  939,
      681,  939,  681, 1241,  940,  940,  940,  940,  940,  940,
      940,  940,  684,  707,  707,  707,  707,  707,  707,  707,
      707, 1241,  685, 1241,  686,  686,  686,  686,  686,  686,
      687,  688,  688,  688,  688,  689,  690,  690,  691,  692,
      693,  923,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  927,
      927,  927,  927,  927,  927,  927,  927,  927,  927,  927,
      927,  927,  927,  927,  927,  927,  707,  707,  707,  707,

      707,  707,  707,  707, 1241, 1241, 1241, 1241, 1241, 1241,
     1241,  683,  929,  929,  929,  929,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  931,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  931,
      931,  931,  931,  931,  931,  931, 1241, 1241, 1241,  684,
      709,  709,  709,  709,  709,  709,  709,  709, 1241,  685,
     1241,  686,  686,  686,  686,  686,  686,  687,  688,  688,
      688,  688,  689,  690,  690,  691,  692,  693,  382,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,

      129,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  709,  709,  709,  709,  709,  709,  709,
      709, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  131,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  699,  699,  699,  699,
      699,  699,  699,  699,  704,  704,  704,  704,  704,  704,
      704,  704, 1241, 1241, 1241,  700,  132, 1241, 1241, 1241,
     1241, 1241, 1241,  705, 1241, 1241,  133, 1241,  134,  134,
      134,  134,  134,  134,  135,  136,  136,  136,  136,  137,
      138,  138,  139,  140,  141,  700, 1241, 1241, 1241, 1241,

     1241, 1241, 1241,  705,  711,  711,  711,  711,  711,  711,
      711,  711,  711,  711,  711,  711,  711,  711,  711,  711,
      720,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720,  720,  720,  720,  720,  720,  941,  941,  941,
      941,  941,  941,  941,  941,  941,  941,  941,  941,  941,
      941,  941,  941,  941,  713,  713,  713,  713,  713,  714,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      712,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  714,  714,  714,  714,  714,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,

      713,  713,  713,  713,  713,  942,  942,  942,  942,  942,
      942,  942,  942,  942,  942,  942,  942,  942,  942,  942,
      942,  942,  713,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  943,  943,  943,  943,
      943,  943,  943,  943,  943,  943,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  944,  944,  944,  944,  944,  944,  944,
      944,  944,  944,  944,  944,  944,  944,  944,  944,  944,
      946,  946,  946,  946,  946,  946,  946,  946,  946,  946,

      946,  946,  946,  946,  946,  946,  946,  947,  947,  947,
      947,  947,  947,  947,  947,  947,  947,  947,  947,  947,
      947,  947,  947,  947,  948,  948,  948,  948,  948,  948,
      948,  948,  948,  948,  948,  948,  948,  948,  948,  948,
      948,  948,  948,  948,  948,  948,  948,  948,  948,  948,
      948,  948,  948,  948,  948,  948,  948,  948,  175,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  449,  449,  449,  449,  449,  449,  449,

      449,  449,  449,  449,  449,  449,  449,  449,  449,  449,
     1241, 1241,  860,  860,  860,  860,  860,  860,  860,  860,
     1241,  860,  860,  860,  860,  176,  860,  860,  860, 1241,
     1241, 1241, 1241, 1241, 1241,  177, 1241,  178,  178,  178,
      178,  178,  178,  179,  180,  180,  180,  180,  181,  182,
      182,  183,  184,  185,  751,  751,  751,  751,  751,  751,
      751,  751,  751,  751,  751,  751,  751,  751,  751,  751,
      751,  949,  949,  949,  949,  949,  949,  949,  949,  949,
      949,  949,  949,  949,  949,  949,  949,  949,  746,  746,
      746,  746,  746,  747,  746,  746,  746,  746,  746,  746,

      746,  746,  746,  746,  745,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  747,  747,  747,
      747,  747,  746,  746,  746,  746,  746,  746,  746,  746,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  950,
      950,  950,  950,  950,  950,  950,  950,  950,  950,  950,
      950,  950,  950,  950,  950,  950,  746,  951,  951,  951,
      951,  951,  951,  951,  951,  951,  951,  951,  951,  951,
      951,  951,  951,  951,  951,  951,  951,  951,  951,  951,
      951,  951,  951,  951,  951,  951,  951,  951,  951,  951,
      746,  746,  746,  746,  746,  746,  746,  746,  746,  746,

      746,  746,  746,  746,  746,  746,  746,  952,  952,  952,
      952,  952,  952,  952,  952,  952,  952,  952,  952,  952,
      952,  952,  952,  952,  954,  954,  954,  954,  954,  954,
      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      954,  955,  955,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  956,  956,
      956,  956,  956,  956,  956,  956,  956,  956,  956,  956,
      956,  956,  956,  956,  956,  956,  956,  956,  956,  956,
      956,  956,  956,  956,  956,  956,  956,  956,  956,  956,
      956,  956,  211,  211,  211, 1241, 1241, 1241, 1241, 1241,

     1241, 1241,  211, 1241,  211,  211,  211, 1241,  211,  211,
      211,  211,  211,  211,  211, 1241, 1241, 1241,  211, 1241,
     1241,  211,  211,  211,  211, 1241, 1241, 1241, 1241, 1241,
     1241, 1241,  211,  211,  211,  211,  211, 1241,  211,  211,
      211,  211,  211,  211,  211,  211, 1241, 1241,  211,  211,
     1241,  211,  211, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 1051, 1051,  211, 1054, 1054, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1241,  211, 1241, 1241, 1241,  211,
     1241, 1241,  211,  957,  957,  957,  957,  957,  957,  957,
      957,  957,  957,  957,  957,  957,  957,  957,  957,  957,

      957,  957,  957,  957,  957,  957,  957,  957,  957,  957,
      957,  957,  957,  957,  957,  957,  957,  211,  211,  211,
     1241, 1241,  958, 1241, 1241, 1241, 1241, 1241, 1241,  211,
      211,  211, 1241,  211,  211,  211,  211,  211,  211,  211,
     1241,  959, 1241, 1241, 1241, 1241, 1241,  211,  211,  211,
     1241,  211,  958, 1241, 1241,  211, 1241, 1241,  211,  211,
      211,  211, 1241,  211,  211,  211,  211,  211,  211,  211,
      211,  959, 1241, 1241, 1241,  211, 1241, 1241,  960,  961,
      211,  211,  211, 1241, 1241,  211,  211,  211,  211,  211,
     1241,  211,  211, 1241,  211, 1241,  211, 1241, 1241,  211,

      211, 1241, 1241, 1241, 1241,  211, 1241, 1241,  960,  961,
      211,  211,  211, 1241, 1241, 1241,  211,  211, 1241,  211,
     1241,  211,  211,  211,  211, 1241,  211,  211,  962,  211,
      211,  963,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241,
     1241,  211, 1241, 1241,  211,  211, 1241, 1241,  211,  211,
      964,  211,  211,  211,  965, 1241, 1241,  211,  962, 1241,
      211,  963,  211,  211, 1241, 1241,  211, 1241, 1241, 1241,
      211,  966, 1241,  211,  211,  211,  211, 1241,  211,  211,
      964,  211,  211, 1241,  965, 1241,  211, 1241,  211, 1241,
     1241, 1241,  211,  967, 1241,  211,  211, 1241,  211, 1241,

      211,  966,  211,  211, 1241,  211,  211, 1241,  211, 1241,
     1241, 1241, 1241, 1241,  211, 1241,  211,  969,  211, 1241,
      211,  968,  211,  967,  211,  211,  211,  211,  211,  211,
      211,  970,  211,  211, 1241,  211, 1241, 1241,  211, 1241,
     1241,  211, 1241, 1241,  211,  211,  211,  969,  211, 1241,
      211,  968, 1241, 1241,  211, 1241,  211,  211,  211,  211,
      211,  970,  211,  211, 1241,  211, 1241,  211, 1241, 1241,
     1241,  211, 1241, 1241, 1241,  211,  211,  211,  211,  211,
      972, 1241,  211,  211,  971, 1241,  211,  211,  211,  211,
     1241, 1241,  211,  211,  211,  211,  211,  211,  211,  211,

     1241,  211,  973,  211, 1241, 1241,  211,  211, 1241,  211,
      972, 1241,  211,  211,  971, 1241,  211,  211, 1241,  211,
     1241, 1241, 1241,  211,  211,  211,  211, 1241,  211,  211,
     1241,  211,  973,  211,  211,  211,  211,  211, 1241,  975,
      974,  211, 1241, 1241,  211, 1241,  211,  976, 1241, 1241,
      211,  211, 1241,  211,  211,  211,  211, 1241, 1241, 1241,
     1241, 1241, 1241, 1241,  211,  211, 1241,  211,  211,  975,
      974,  211,  977,  211,  211,  211,  211,  976, 1241, 1241,
      211,  211, 1241,  211,  211,  211,  211, 1241,  978,  211,
     1241, 1241,  211,  979,  211, 1241, 1241, 1241,  211, 1241,

     1241, 1241,  977,  211, 1241,  211,  211, 1241, 1241,  211,
      211, 1241, 1241,  211,  211,  211,  980, 1241,  978,  211,
     1241,  211,  211,  979,  211,  211,  211, 1241,  211, 1241,
      211,  981, 1241,  211, 1241, 1241,  211, 1241,  211,  211,
      211, 1241, 1241,  211,  211, 1241,  980, 1241, 1241,  982,
      211,  211, 1241, 1241,  211,  211,  211,  211,  211,  211,
      211,  981, 1241,  211, 1241, 1241,  983, 1241,  211, 1241,
     1241,  211, 1241, 1241, 1241,  211,  211, 1241,  211,  982,
      211, 1241, 1241, 1241,  211, 1241,  984,  211,  211,  211,
     1241,  211,  211, 1241, 1241,  211,  983, 1241, 1241, 1241,

     1241,  211,  985,  211, 1241,  211,  211,  211,  211, 1241,
      211,  211,  211, 1241,  986, 1241,  984, 1241,  211, 1241,
     1241,  211,  211,  211,  211,  211, 1241,  211,  211,  987,
      211,  211,  985,  211, 1241, 1241,  211,  211, 1241,  989,
      211,  211,  211, 1241,  986, 1241, 1241, 1241,  211, 1241,
     1241,  211,  211,  211,  211,  211, 1241,  211,  211,  987,
      211,  211, 1241,  211, 1241, 1241,  211,  990,  991,  989,
      211,  211,  211, 1241,  993, 1241, 1241,  992,  211, 1241,
     1241,  211,  211,  211,  211,  211, 1241,  211,  211, 1241,
      211,  211, 1241,  211, 1241, 1241,  211,  990,  991,  994,

      211,  211,  211, 1241,  993, 1241, 1241,  992,  211, 1241,
     1241,  211,  211,  211,  211,  211,  211,  211,  211, 1241,
      211,  211, 1241,  211,  995, 1241,  211,  211,  211,  994,
      211,  996,  211, 1241, 1241,  211,  211, 1241,  211, 1241,
     1241,  211,  211, 1241, 1241,  211,  211, 1241,  211, 1241,
     1241, 1241,  211,  211,  995,  211,  997,  211,  211, 1241,
      211,  996,  211, 1241,  211,  211,  211, 1241, 1241, 1241,
     1241,  998, 1241, 1241, 1241, 1241,  211, 1241,  211,  211,
      211, 1241,  211,  211, 1241,  211,  997,  999,  211, 1241,
     1241,  211, 1241, 1241,  211,  211,  211, 1241,  211, 1241,

      211,  998, 1241, 1000,  211, 1241,  211,  211,  211,  211,
      211, 1241,  211,  211, 1241,  211, 1241,  999,  211, 1241,
     1241,  211, 1241, 1241, 1241,  211,  211, 1241,  211, 1241,
      211,  211, 1001, 1000,  211, 1241,  211,  211,  211, 1241,
     1241, 1241,  211,  211,  211,  211, 1241,  211,  211, 1241,
      211, 1003,  211,  211, 1241,  211,  211, 1002, 1241, 1241,
      211,  211, 1001,  211, 1241,  211,  211, 1241, 1241,  211,
     1005, 1241,  211,  211,  211, 1241, 1241,  211,  211, 1241,
      211, 1003,  211,  211, 1241,  211,  211, 1002, 1241,  211,
      211, 1004, 1241,  211,  211,  211, 1241, 1241, 1241,  211,

     1005,  211,  211, 1241, 1006,  211,  211, 1241,  211, 1241,
      211,  211, 1241,  211, 1241, 1241, 1241, 1241, 1241,  211,
     1241, 1004, 1241, 1007,  211, 1241, 1241,  211, 1241, 1241,
      211,  211,  211, 1008, 1006,  211,  211, 1241,  211, 1241,
      211,  211, 1241,  211,  211, 1241, 1241, 1241,  211,  211,
     1241,  211, 1241, 1007, 1241, 1241, 1241,  211, 1241, 1241,
      211,  211,  211, 1008, 1009,  211, 1241, 1241,  211, 1241,
      211, 1241, 1241, 1010,  211, 1241, 1241, 1011,  211,  211,
      211,  211,  211, 1016, 1241,  211,  211, 1241, 1241,  211,
     1241,  211,  211, 1241, 1009,  211,  211, 1017,  211,  211,

      211,  211, 1241, 1010,  211,  211, 1241, 1011, 1241, 1241,
      211, 1241,  211, 1016, 1241,  211,  211,  211, 1241,  211,
      211,  211,  211, 1019,  211, 1241,  211, 1017, 1241,  211,
      211,  211,  211, 1241,  211,  211,  211, 1018, 1241,  211,
      211, 1241, 1021, 1241, 1241, 1241,  211,  211, 1241,  211,
      211,  211,  211, 1019,  211, 1241,  211, 1020, 1241,  211,
      211, 1241,  211, 1241, 1022,  211,  211, 1018, 1023,  211,
      211, 1241, 1021, 1241, 1241, 1241,  211,  211, 1241,  211,
      211,  211,  211, 1241,  211, 1241,  211, 1020, 1241,  211,
      211, 1241,  211, 1241, 1022,  211,  211, 1024, 1023,  211,

      211, 1241,  211, 1241, 1241, 1241,  211,  211, 1241,  211,
      211,  211,  211, 1026,  211, 1241,  211, 1025, 1241,  211,
      211,  211,  211, 1241, 1027, 1241,  211, 1024, 1241,  211,
      211, 1241,  211,  211, 1241, 1241,  211,  211, 1241,  211,
      211,  211,  211, 1026, 1241, 1028,  211, 1025, 1241,  211,
      211,  211, 1241,  211, 1027, 1241, 1241,  211, 1241, 1241,
      211, 1241, 1029,  211, 1241, 1241,  211,  211, 1241,  211,
      211,  211,  211, 1241, 1030, 1028, 1241, 1241, 1241, 1241,
      211,  211,  211,  211,  211, 1031, 1241,  211,  211, 1241,
      211,  211, 1029,  211,  211, 1241,  211,  211,  211,  211,

      211,  211,  211, 1241, 1030, 1241, 1241, 1241, 1241, 1032,
      211,  211,  211, 1241,  211, 1031, 1241, 1241,  211, 1241,
     1241,  211,  211,  211,  211, 1241,  211,  211,  211,  211,
      211,  211,  211, 1241,  211, 1033, 1241, 1241, 1241, 1032,
      211, 1241, 1241, 1241,  211, 1241,  211, 1241,  211, 1241,
      211,  211,  211,  211, 1241, 1241,  211, 1241, 1241,  211,
     1241, 1241,  211, 1241,  211, 1033,  934,  934,  934,  934,
      934,  934,  934,  934,  211, 1241,  211, 1241,  211, 1241,
      211,  211, 1241,  211, 1034, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,

     1035, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1036, 1036, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038, 1038,
     1038, 1038, 1038, 1038, 1038, 1038, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1038, 1038,

     1038, 1035, 1035,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860,  860,  860,  860,
      860,  860,  860,  860,  860,  860,  860, 1040, 1040, 1040,
     1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1041,
     1041, 1041,  860, 1041, 1042, 1042, 1042, 1042, 1042, 1042,
     1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
     1042, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1045, 1046,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,

     1048, 1048, 1048, 1048, 1047, 1049, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
     1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1055,
     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1055,  888,  888,  888,  888,
      888,  888,  888,  888,  888,  888,  888,  888,  888,  888,
      888,  888,  888, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
      883,  883,  883,  883,  883,  884,  883,  883,  883,  883,

      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  884,
      884,  884,  884,  884,  883,  883,  883,  883,  883,  883,
      883,  883,  883,  883,  883,  883,  883,  883,  883,  883,
      883, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,
     1057, 1057, 1057, 1057, 1057, 1057, 1057, 1057,  883, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058, 1058,
     1058, 1058,  883,  883,  883,  883,  883,  883,  883,  883,

      883,  883,  883,  883,  883,  883,  883,  883,  883, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059, 1059,
     1059, 1059, 1059, 1059, 1059, 1059, 1061, 1061, 1061, 1061,
     1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
     1061, 1061, 1061, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
      211,  211,  211,  934,  934,  934,  934,  934,  934,  934,
      934, 1241,  211,  211,  211, 1241,  211,  211,  211,  211,
      211,  211,  936,  936,  936,  936,  936,  936,  936,  936,
      211,  211,  211, 1063,  936,  936,  936,  936,  936,  936,

      936,  936,  211,  211,  211, 1241,  211,  211,  211,  211,
      211,  211, 1064,  907,  907,  907,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  907,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1241, 1241, 1241,  635,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,

      633,  633, 1241, 1241, 1241,  636,  938,  938,  938,  938,
      938,  938,  938,  938, 1241,  637, 1241,  638,  638,  638,
      638,  638,  638,  639,  640,  640,  640,  640,  641,  642,
      642,  643,  644,  645, 1066, 1066, 1066, 1066, 1066, 1066,
     1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
     1066, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1069, 1069, 1069, 1069, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069,

     1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069,
     1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1069, 1070,
      925,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      925,  925,  925,  925,  925,  925,  925,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  938,  938,  938,  938,  938,  938,
      938,  938, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  683,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,

      681,  681,  681,  681, 1241, 1241, 1241,  684,  940,  940,
      940,  940,  940,  940,  940,  940, 1241,  685, 1241,  686,
      686,  686,  686,  686,  686,  687,  688,  688,  688,  688,
      689,  690,  690,  691,  692,  693,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
     1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,

     1074, 1074, 1074, 1074,  940,  940,  940,  940,  940,  940,
      940,  940, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1075, 1075, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
     1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076, 1076,
      211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
      211, 1241,  211,  211,  211, 1241,  211,  211,  211,  211,

      211,  211,  211, 1241, 1241, 1241, 1077, 1241, 1241,  211,
      211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
      211,  211,  211,  211,  211, 1241,  211,  211,  211,  211,
      211,  211,  211,  211,  211, 1241, 1077,  211, 1078,  211,
      211, 1241,  211, 1241, 1241, 1241,  211, 1241, 1241, 1079,
      211,  211, 1241,  211,  211, 1241, 1241, 1241,  211,  211,
     1241,  211, 1241,  211,  211, 1241, 1080,  211, 1078, 1241,
      211,  211,  211, 1081,  211,  211,  211, 1241,  211, 1079,
      211, 1241, 1241,  211,  211, 1241,  211, 1241,  211,  211,
      211,  211, 1241,  211,  211,  211, 1080, 1241, 1241, 1241,

     1241,  211, 1241, 1081,  211,  211, 1083,  211,  211, 1241,
      211,  211, 1241,  211,  211,  211,  211, 1082, 1241, 1241,
      211, 1241, 1241,  211,  211,  211, 1241, 1084, 1241, 1241,
      211,  211, 1241, 1086,  211, 1241, 1083,  211, 1241,  211,
      211,  211,  211,  211,  211,  211,  211, 1082, 1241,  211,
     1241,  211, 1241, 1241, 1085,  211, 1241, 1084,  211,  211,
      211,  211, 1241, 1086,  211, 1241, 1241, 1241, 1241,  211,
     1241,  211,  211, 1241,  211, 1087,  211, 1241,  211,  211,
      211,  211, 1241, 1241, 1085,  211,  211, 1241,  211,  211,
      211, 1241,  211,  211, 1241, 1088,  211, 1241, 1241,  211,

     1241,  211,  211, 1241,  211, 1087, 1241, 1241,  211, 1241,
      211, 1241,  211, 1241,  211, 1241,  211, 1241,  211, 1241,
      211,  211,  211,  211,  211, 1088,  211,  211,  211,  211,
     1241,  211,  211,  211, 1241, 1241, 1241, 1241, 1090,  211,
     1089, 1241,  211,  211,  211,  211,  211, 1241,  211,  211,
     1241,  211,  211, 1241,  211,  211, 1241,  211,  211, 1241,
     1241,  211, 1241,  211, 1241,  211, 1241,  211, 1090,  211,
     1241, 1091, 1241,  211,  211,  211,  211, 1092, 1241,  211,
      211,  211,  211, 1241,  211,  211,  211, 1241, 1241, 1093,
     1241, 1241,  211, 1241, 1241,  211,  211,  211,  211,  211,

     1241, 1091,  211, 1241,  211,  211, 1241, 1092, 1241, 1241,
      211,  211, 1241, 1241,  211,  211,  211, 1241, 1094, 1093,
     1241,  211,  211, 1241, 1241, 1241,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211, 1241,  211, 1241, 1241,
      211, 1241,  211, 1241, 1241,  211,  211, 1241, 1094,  211,
      211,  211, 1241, 1241, 1241, 1241, 1241,  211, 1095,  211,
      211,  211,  211,  211,  211,  211,  211,  211, 1241,  211,
      211,  211,  211, 1241,  211,  211,  211,  211,  211,  211,
      211,  211, 1241, 1241,  211, 1241,  211, 1241, 1095,  211,
      211, 1241,  211,  211,  211,  211,  211, 1241, 1241,  211,

     1241,  211, 1241, 1241,  211,  211,  211,  211,  211, 1096,
      211,  211, 1241,  211,  211,  211,  211, 1241, 1097, 1241,
      211, 1241, 1241,  211,  211,  211, 1241,  211, 1241, 1241,
      211,  211, 1241, 1241,  211,  211,  211,  211, 1241, 1096,
      211,  211,  211,  211,  211,  211,  211,  211, 1097,  211,
      211,  211, 1098, 1241,  211,  211, 1241,  211, 1241, 1241,
      211,  211, 1099, 1241,  211,  211,  211,  211, 1241,  211,
     1241,  211,  211, 1241,  211,  211,  211,  211, 1241,  211,
      211,  211, 1098, 1241,  211,  211, 1241,  211, 1241, 1241,
      211,  211, 1099, 1241,  211, 1241,  211,  211, 1100,  211,

     1241,  211,  211, 1241,  211,  211,  211,  211, 1241,  211,
     1241, 1101, 1241, 1241, 1241,  211, 1241,  211, 1241,  211,
      211,  211, 1102,  211,  211, 1241,  211,  211, 1100, 1241,
     1241,  211,  211, 1241,  211,  211,  211,  211, 1241,  211,
     1241, 1101, 1241,  211, 1241,  211, 1104,  211, 1241,  211,
     1241, 1103, 1102,  211,  211,  211,  211,  211, 1241,  211,
     1241,  211,  211, 1241,  211,  211, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  211,  211,  211, 1104,  211, 1241, 1241,
     1241, 1103, 1241,  211,  211,  211,  211,  211, 1241,  211,
      211,  211,  211,  211,  211,  211, 1241, 1241,  211,  211,

     1105, 1106,  211,  211,  211, 1241, 1107, 1241, 1241, 1241,
      211, 1241, 1241,  211,  211,  211,  211,  211, 1241,  211,
      211, 1241,  211,  211, 1241,  211, 1241, 1241,  211,  211,
     1105, 1106,  211,  211, 1241, 1241, 1107, 1241, 1241,  211,
      211, 1108, 1241, 1241,  211,  211, 1241,  211,  211,  211,
     1241,  211,  211, 1110,  211,  211, 1241, 1241,  211, 1241,
      211, 1241, 1241, 1241,  211, 1109,  211,  211, 1241,  211,
      211, 1108, 1241,  211, 1241, 1241, 1241, 1241,  211, 1241,
     1241,  211, 1241, 1110,  211,  211,  211, 1241,  211, 1241,
      211, 1241,  211, 1112,  211, 1109,  211,  211,  211, 1241,

      211, 1111,  211,  211,  211,  211, 1241, 1241,  211, 1241,
     1241,  211, 1241, 1241, 1241, 1241,  211,  211, 1241, 1117,
     1241, 1241,  211, 1112, 1241, 1241, 1241,  211,  211,  211,
     1241, 1111,  211,  211,  211,  211,  211, 1241,  211,  211,
     1241,  211,  211,  211, 1118, 1241,  211,  211, 1241, 1117,
     1241, 1241,  211, 1241,  211, 1241, 1241,  211, 1119,  211,
     1241,  211, 1241,  211,  211, 1241,  211, 1120,  211,  211,
     1241,  211,  211,  211, 1118, 1241,  211,  211, 1241, 1241,
     1241, 1241,  211,  211,  211, 1121, 1241, 1241, 1119,  211,
     1241,  211,  211,  211,  211,  211,  211, 1120,  211,  211,

     1241,  211,  211, 1241, 1122,  211, 1241,  211,  211, 1241,
     1241,  211, 1241,  211, 1241, 1121, 1241, 1123, 1241,  211,
     1241,  211,  211,  211,  211,  211,  211,  211, 1241,  211,
     1241, 1241,  211, 1241, 1122,  211, 1124,  211,  211,  211,
     1241,  211, 1125,  211, 1241, 1241,  211, 1123, 1241,  211,
     1241,  211,  211,  211,  211, 1241,  211,  211,  211, 1241,
     1241, 1241, 1241, 1241,  211, 1126, 1124,  211,  211,  211,
      211,  211, 1125,  211,  211, 1241,  211,  211, 1241,  211,
      211, 1241,  211,  211, 1241, 1241,  211, 1241,  211, 1241,
      211, 1241,  211, 1241,  211, 1126,  211, 1241,  211,  211,

      211,  211,  211, 1241,  211,  211,  211,  211, 1127,  211,
      211,  211, 1241, 1241, 1241, 1241, 1241,  211, 1241, 1241,
      211,  211,  211,  211,  211, 1241,  211, 1128, 1241,  211,
      211, 1241,  211,  211, 1241,  211,  211, 1241, 1127,  211,
     1241,  211, 1241,  211, 1129,  211, 1241,  211, 1241,  211,
     1241,  211,  211,  211,  211,  211, 1241, 1128, 1241,  211,
      211, 1241,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  211, 1129,  211, 1241, 1241, 1241,  211,
     1241, 1241,  211, 1241, 1241,  211, 1241, 1241, 1241,  211,
     1241, 1241,  211, 1042, 1042, 1042, 1042, 1042, 1042, 1042,

     1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1130, 1130, 1035, 1035, 1035,
     1035, 1035, 1036, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1034, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1036, 1036, 1036, 1036,
     1036, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1035, 1132, 1132, 1132, 1132,

     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133, 1133,
     1133, 1133, 1133, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136,
     1136, 1136, 1136, 1136, 1136, 1136, 1136, 1137, 1137, 1137,

     1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
     1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
     1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137, 1137,
     1137,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  211, 1241, 1241, 1241,  211, 1241, 1241,
      211, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241,  211, 1241, 1241, 1241,  211, 1241, 1241,
      211,  634,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,

      633,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  907,  907,  907,  907,
      907,  907,  907,  907,  907,  907,  907,  907,  907,  907,
      907,  907,  907, 1241, 1241, 1241,  635,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681, 1241, 1241, 1241,  636, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241,  637, 1241,  638,  638,  638,  638,
      638,  638,  639,  640,  640,  640,  640,  641,  642,  642,

      643,  644,  645,  682,  925,  925,  925,  925,  925,  925,
      925,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      925,  211, 1138, 1241, 1241, 1241,  211, 1241, 1241, 1241,
     1241,  211, 1241,  211, 1241, 1241, 1241,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211,  211, 1241, 1139,
      211,  211, 1138,  683, 1241, 1241,  211, 1241, 1140, 1241,
     1241,  211,  211,  211, 1241,  211, 1241,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211,  211, 1241, 1139,
      211, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1140, 1241,
     1241,  684,  211, 1241, 1241,  211, 1241, 1241, 1241, 1241,

     1241,  685, 1241,  686,  686,  686,  686,  686,  686,  687,
      688,  688,  688,  688,  689,  690,  690,  691,  692,  693,
      211,  211,  211, 1143, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241,  211,  211,  211, 1142, 1141,  211,  211,  211,
      211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241, 1144,
      211,  211,  211, 1143,  211, 1241, 1145, 1241,  211, 1241,
     1241,  211,  211,  211,  211, 1142, 1141,  211,  211,  211,
      211,  211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1144,
     1241,  211,  211,  211,  211,  211, 1241, 1241,  211,  211,
     1241,  211,  211,  211,  211,  211, 1241,  211,  211,  211,

      211,  211,  211,  211, 1241, 1241, 1241, 1241, 1241, 1241,
     1241,  211,  211,  211, 1241,  211, 1241, 1241, 1241,  211,
     1241, 1241,  211,  211,  211,  211, 1241,  211,  211,  211,
      211,  211,  211,  211, 1146,  211, 1241, 1241, 1241, 1241,
     1241,  211, 1241, 1241, 1147,  211, 1241,  211, 1241,  211,
      211,  211,  211,  211,  211, 1241, 1241,  211, 1241, 1148,
      211, 1241,  211,  211, 1146,  211,  211, 1241, 1241,  211,
     1241,  211, 1241, 1241, 1147,  211, 1241,  211, 1241,  211,
      211,  211,  211,  211,  211,  211,  211,  211, 1241, 1148,
      211,  211,  211, 1241, 1241, 1241,  211,  211,  211,  211,

     1149,  211, 1152,  211,  211,  211, 1150,  211, 1241, 1241,
      211, 1241, 1241, 1241, 1241,  211,  211, 1241, 1241, 1241,
     1241,  211, 1241, 1241, 1241, 1241,  211,  211,  211, 1241,
     1149,  211, 1152,  211,  211,  211, 1150,  211,  211,  211,
      211,  211,  211, 1151, 1241,  211, 1154,  211, 1241, 1241,
     1241,  211, 1241,  211, 1241, 1153,  211,  211,  211,  211,
      211, 1241, 1241,  211, 1241, 1241,  211, 1241,  211,  211,
     1241,  211,  211, 1151, 1241,  211, 1154,  211, 1241,  211,
     1241,  211, 1241,  211, 1241, 1153, 1241,  211,  211,  211,
      211,  211,  211,  211, 1155,  211,  211, 1241,  211, 1241,

     1241,  211, 1241, 1241,  211, 1241, 1241, 1241,  211,  211,
     1241,  211, 1241,  211,  211, 1157, 1241,  211, 1241, 1241,
      211,  211,  211, 1156, 1155,  211,  211, 1241,  211, 1241,
      211,  211, 1241,  211,  211, 1241, 1241, 1241,  211, 1241,
     1241,  211, 1241,  211,  211, 1157,  211,  211, 1158, 1241,
      211, 1241,  211, 1156,  211, 1159,  211, 1241,  211, 1241,
      211, 1241,  211,  211,  211,  211,  211,  211,  211, 1160,
      211,  211, 1241,  211, 1241, 1241,  211, 1241, 1158,  211,
     1241, 1241,  211,  211,  211, 1159,  211, 1241,  211, 1241,
     1241, 1241,  211, 1241,  211,  211,  211,  211,  211, 1160,

      211,  211,  211,  211, 1241, 1241, 1241,  211,  211,  211,
     1241, 1241, 1241,  211,  211, 1241,  211,  211, 1161,  211,
      211,  211, 1241,  211,  211, 1162,  211,  211, 1241,  211,
     1241, 1241,  211,  211, 1241, 1241,  211,  211,  211, 1241,
     1241, 1241, 1241, 1241,  211, 1241, 1241,  211, 1161,  211,
      211,  211,  211,  211,  211, 1162,  211,  211,  211,  211,
      211, 1163, 1241,  211,  211, 1241,  211, 1241,  211, 1241,
      211, 1167,  211,  211,  211, 1241,  211,  211, 1241,  211,
     1241, 1241,  211, 1241, 1241,  211, 1241, 1241,  211,  211,
      211, 1163,  211, 1241,  211, 1241, 1241, 1241,  211, 1241,

      211, 1167,  211,  211,  211,  211,  211,  211, 1241,  211,
     1241,  211, 1168,  211, 1241,  211, 1241,  211, 1170,  211,
     1241,  211,  211,  211,  211,  211, 1241, 1169, 1241,  211,
      211, 1241,  211,  211, 1241,  211, 1241, 1241, 1241, 1241,
     1241,  211, 1168,  211, 1241,  211, 1241,  211, 1170,  211,
     1241,  211,  211,  211,  211,  211, 1241, 1169,  211,  211,
      211, 1241,  211,  211,  211, 1241, 1241, 1241, 1241, 1241,
      211, 1241, 1241, 1171,  211,  211,  211,  211, 1241,  211,
      211, 1241,  211,  211, 1241, 1241,  211, 1241,  211, 1241,
     1241, 1241, 1241, 1241,  211, 1241,  211, 1241, 1172, 1241,

      211, 1241,  211, 1171,  211,  211,  211,  211,  211, 1241,
      211, 1173,  211,  211, 1241,  211,  211,  211,  211, 1241,
     1241, 1174, 1241, 1241, 1241, 1241,  211, 1241, 1172,  211,
      211, 1241,  211,  211,  211,  211,  211,  211,  211, 1241,
     1241, 1173,  211, 1241, 1241,  211, 1241,  211,  211, 1241,
     1241, 1174, 1241, 1241, 1241, 1241, 1241, 1241, 1241,  211,
      211, 1241, 1241,  211,  211, 1241,  211,  211, 1175, 1175,
     1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175,
     1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175,
     1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175,

     1175, 1175,  211,  211, 1177, 1176, 1241, 1241,  211, 1241,
     1241, 1241, 1241, 1241,  211,  211, 1241, 1241,  211,  211,
      211,  211,  211, 1241, 1178, 1241, 1241,  211, 1241, 1241,
     1241, 1241,  211,  211, 1177, 1176, 1241, 1241,  211, 1241,
     1241, 1241, 1241,  211,  211,  211, 1179, 1241,  211,  211,
      211,  211,  211,  211, 1178,  211, 1180,  211,  211,  211,
     1241, 1241,  211, 1241, 1241,  211, 1241, 1182,  211,  211,
      211, 1241,  211,  211,  211, 1181, 1179,  211, 1241, 1241,
      211, 1241, 1241,  211,  211,  211, 1180,  211,  211,  211,
     1241, 1241,  211, 1241, 1241,  211,  211, 1182,  211,  211,

      211, 1241,  211, 1241,  211, 1181, 1241,  211,  211, 1184,
      211, 1241,  211,  211,  211,  211, 1241,  211,  211, 1185,
     1241, 1241, 1241, 1241, 1241,  211,  211, 1186,  211,  211,
      211, 1241,  211, 1241,  211, 1241, 1241,  211,  211, 1184,
      211, 1241,  211,  211,  211,  211, 1241,  211,  211, 1185,
     1241, 1241, 1241, 1241, 1241,  211,  211, 1186,  211,  211,
      211, 1241,  211, 1187,  211, 1241, 1241,  211,  211,  211,
      211, 1241,  211, 1241,  211,  211, 1241,  211,  211, 1188,
     1241,  211, 1241, 1241,  211,  211,  211, 1241,  211, 1241,
      211, 1241, 1241, 1187,  211, 1241,  211,  211,  211,  211,

      211, 1241,  211,  211, 1241,  211, 1241, 1241,  211, 1188,
     1241,  211, 1241,  211,  211,  211, 1241, 1241,  211,  211,
      211, 1190, 1241, 1189,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  211, 1241,  211, 1241, 1191,  211, 1241,
      211, 1241, 1241,  211,  211, 1241, 1241,  211, 1241,  211,
     1241, 1190, 1241, 1189, 1241,  211, 1241,  211,  211,  211,
     1241,  211,  211, 1241, 1241,  211,  211, 1191,  211,  211,
      211, 1241,  211,  211,  211, 1192,  211,  211,  211, 1241,
     1241,  211,  211, 1241,  211,  211, 1241,  211,  211, 1241,
     1241, 1193, 1194,  211, 1241, 1241,  211,  211, 1241,  211,

      211,  211,  211,  211, 1241, 1192,  211, 1241,  211, 1241,
     1241,  211,  211,  211,  211,  211,  211,  211,  211, 1241,
      211, 1193, 1194,  211, 1241,  211,  211,  211,  211, 1195,
      211,  211,  211, 1241, 1241,  211, 1241,  211,  211, 1241,
     1241,  211,  211,  211,  211,  211,  211,  211, 1241, 1241,
      211, 1241, 1241, 1199,  211,  211,  211, 1241,  211, 1195,
     1241, 1241,  211, 1241, 1241,  211,  211,  211,  211,  211,
      211,  211,  211,  211,  211,  211, 1241, 1241,  211, 1241,
     1241,  211, 1241, 1199,  211,  211, 1241, 1241,  211, 1241,
      211, 1241, 1241,  211,  211, 1241,  211,  211, 1241,  211,

      211, 1241, 1241,  211, 1241,  211, 1241, 1241,  211,  211,
     1200,  211,  211,  211,  211,  211, 1201, 1202,  211, 1241,
      211, 1241,  211,  211,  211,  211,  211,  211, 1241,  211,
      211, 1241,  211,  211,  211,  211, 1241, 1241, 1203,  211,
     1200,  211,  211,  211,  211, 1241, 1201, 1202, 1241, 1241,
     1241, 1241,  211,  211, 1241,  211,  211, 1241,  211,  211,
      211, 1241,  211,  211,  211,  211,  211, 1241, 1203,  211,
      211,  211,  211, 1241,  211, 1204, 1241,  211,  211, 1241,
     1241, 1241,  211,  211, 1241,  211, 1241, 1241,  211, 1241,
     1241, 1241, 1241, 1241,  211,  211,  211, 1241, 1241,  211,

      211, 1241,  211, 1241,  211, 1204,  211,  211,  211,  211,
      211,  211,  211,  211, 1241,  211, 1241, 1241, 1241,  211,
     1241,  211, 1241,  211,  211,  211, 1241,  211,  211, 1241,
      211, 1205, 1241, 1241, 1241,  211,  211, 1241,  211,  211,
      211,  211, 1241,  211, 1241, 1241, 1241,  211, 1241,  211,
     1241,  211, 1241,  211, 1241,  211, 1241,  211,  211, 1207,
      211, 1205,  211,  211, 1241,  211,  211, 1241,  211, 1241,
     1241, 1241,  211, 1241,  211, 1241, 1241,  211,  211, 1208,
     1241,  211, 1209, 1241,  211, 1241, 1241, 1241,  211, 1207,
     1241,  211,  211,  211,  211, 1210,  211, 1241, 1241, 1241,

     1241, 1241,  211, 1241,  211, 1241,  211,  211,  211, 1208,
      211,  211, 1209,  211,  211,  211,  211, 1241,  211,  211,
     1241,  211, 1211,  211,  211, 1210,  211,  211,  211, 1241,
     1241,  211,  211, 1241,  211,  211,  211,  211, 1241, 1241,
      211, 1241, 1241,  211, 1241,  211,  211,  211, 1241,  211,
     1212, 1241, 1211,  211, 1241,  211,  211,  211,  211,  211,
     1241,  211,  211,  211,  211,  211,  211,  211, 1213, 1241,
     1241,  211, 1241, 1241,  211, 1214,  211,  211, 1241, 1241,
     1212, 1241, 1241, 1241, 1241,  211, 1241, 1241,  211,  211,
     1241,  211,  211,  211, 1241,  211,  211,  211, 1213, 1241,

      211,  211, 1241,  211,  211, 1214,  211,  211,  211, 1241,
      211, 1241,  211, 1241, 1241, 1215,  211, 1241,  211,  211,
      211,  211,  211, 1216,  211,  211, 1241,  211, 1241, 1241,
      211, 1241,  211,  211, 1241, 1241, 1241,  211,  211, 1241,
      211, 1241,  211, 1241,  211, 1215,  211,  211, 1217,  211,
      211,  211, 1241, 1216,  211, 1241,  211,  211, 1218,  211,
     1241, 1241,  211,  211,  211, 1241,  211, 1241,  211, 1241,
     1241, 1241,  211, 1241,  211,  211,  211,  211, 1217, 1241,
      211,  211, 1241,  211, 1241,  211,  211, 1241, 1218,  211,
     1241, 1241, 1241,  211,  211,  211,  211,  211,  211, 1241,

     1241,  211,  211, 1241,  211,  211,  211,  211, 1241, 1241,
      211,  211, 1241,  211,  211,  211,  211, 1220, 1241, 1241,
     1241, 1241, 1241, 1241,  211,  211,  211,  211,  211, 1241,
     1241,  211,  211, 1221,  211,  211,  211,  211,  211, 1241,
      211,  211,  211,  211,  211,  211,  211, 1220,  211, 1241,
     1241, 1241, 1241, 1241,  211, 1241,  211, 1241,  211, 1241,
      211, 1241,  211, 1221,  211,  211,  211,  211,  211, 1241,
      211, 1241,  211,  211, 1241,  211,  211,  211,  211, 1222,
     1241, 1241, 1241, 1241, 1241, 1241,  211, 1241,  211,  211,
      211, 1241,  211,  211,  211,  211,  211,  211,  211, 1223,

     1241,  211,  211, 1241, 1224,  211,  211,  211, 1241, 1222,
     1241, 1241, 1241,  211, 1241, 1241,  211,  211,  211,  211,
      211,  211,  211,  211, 1241,  211,  211, 1241,  211, 1223,
      211,  211,  211,  211, 1224,  211, 1225,  211, 1241, 1241,
      211, 1241,  211,  211, 1241,  211, 1226,  211, 1241,  211,
      211,  211, 1241, 1241, 1241, 1241, 1241,  211, 1241, 1241,
      211,  211,  211,  211,  211, 1241, 1225,  211, 1241, 1241,
      211, 1241,  211, 1241,  211,  211, 1226,  211,  211,  211,
     1241,  211, 1228,  211, 1241, 1241, 1241,  211, 1241,  211,
     1229,  211,  211,  211,  211,  211,  211, 1241,  211,  211,

     1241, 1241,  211, 1241,  211, 1241, 1241,  211,  211, 1241,
      211,  211, 1228,  211, 1230,  211, 1241,  211, 1241,  211,
     1229, 1241, 1241,  211, 1241,  211,  211,  211,  211,  211,
      211,  211,  211, 1241,  211, 1241,  211, 1241, 1241, 1241,
      211, 1241,  211, 1241, 1230,  211, 1231,  211,  211,  211,
     1241,  211,  211, 1241, 1241,  211, 1241,  211, 1241, 1241,
      211,  211, 1241,  211,  211, 1241,  211,  211, 1241, 1241,
      211,  211,  211, 1241, 1241, 1241, 1231, 1241,  211,  211,
      211,  211,  211,  211, 1241,  211,  211,  211, 1233, 1241,
      211, 1241, 1234,  211, 1241,  211,  211,  211,  211,  211,

      211,  211,  211, 1241, 1241,  211, 1241,  211, 1241, 1241,
      211,  211, 1241,  211,  211,  211,  211,  211, 1233, 1241,
      211, 1241, 1234, 1241,  211,  211,  211,  211,  211,  211,
     1241,  211,  211, 1241,  211,  211,  211,  211, 1241, 1241,
      211,  211, 1241,  211,  211,  211, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241,  211, 1241, 1241,  211, 1241, 1241,
     1241,  211, 1241, 1241,  211, 1241,  211, 1241, 1241, 1241,
      211, 1241, 1241,  211,   84, 1241,   84,   84,   84,   84,
       97, 1241,   97,   97,   97,   97,  108,  108,  108, 1241,
      108,  129, 1241,  129,  129,  129,  129,  153,  153,  153,

     1241,  153,  173,  173,  173,  173,  187,  187,  187, 1241,
      187,  604,  604,  604, 1241,  604,  633,  633,  633,  633,
      633,  633,  681,  681,  681,  681,  681,  681,  772,  772,
       84, 1241,   84,   84,   84,   84,   97, 1241,   97,   97,
       97,   97,  129, 1241,  129,  129,  129,  129,  173,  173,
      173,  173,    3, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,

     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241
    } ;

static yyconst flex_int16_t yy_chk[16582] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    5,   10,
     1249,    5,    9,   70,   70,   70, 1236,   70, 1235,   10,
     1232,   10,   10,   10,   10,   10,   10,   10,   10,   10,
       10,   10,   10,   10,   10,   10,   10,   10,   14,   14,
       14,   14,   52,   52,   52,   52,   78,   78,   78,   17,
       14,   17,   17,   17,   17,   17,   17,   17,   17,   81,
     1183, 1166,   81, 1165, 1164,   19,   19,    9,   19,   19,
       19,   19,   19,   19,   19,   19,   20,   20,   20,   20,

       20,   20,   20,   20,   62,   62,   62,   62,   62,   62,
       62,   62,   62,   62,   62,   62,   62,   62,   62,   62,
       62, 1145, 1116,   52, 1115,    9,   72,   72,   72,   72,
       72,   72,   72, 1114, 1015,    9, 1014,    9,    9,    9,
        9,    9,    9,    9,    9,    9,    9,    9,    9,    9,
        9,    9,    9,    9,   11,   11,   11,   11,   11,   11,
       11,   11,   11,   11,   11,   11,   11,   11,   11,   11,
     1206, 1013,   11,   11, 1012,   11,   11,   11,   11,   11,
       11,   11,   11,  925,   11,   11,   11,   13,   22, 1219,
       22,   22,   22,   22,   22,   22,   22,   22,   31,   31,

     1206,   32, 1227, 1237,   32, 1238,   31,  907, 1239,   22,
      868,   31,   31,   32,   32,   31,  815,   32,   31, 1219,
       32,   31,   96,   96,   96,   96,   96,   96,   31,   31,
      772,   32, 1227, 1237,   32, 1238,   31,   13, 1239,   22,
      562,   31,   31,   32,   32,   31,  466,   32,   31,  449,
       32,   31,   63,   63,   63,   63,   63,   63,   63,   63,
       63,   63,   63,   63,   63,   63,   63,   63,   63,  107,
      107,  107,  107,  107,  107,   13,   90,   90,   90,   90,
       90,   90,   90,  414,  385,   13,  349,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   23,   23,   23,   23,   23,   23,
       23,   23,   23,   23,   23,   23,   23,   23,   23,   23,
      332,  323,   23,   23,  223,   23,   23,   23,   23,   23,
       23,   23,   23,  207,   23,   23,   23,   25,   25,   33,
       33,   34,  130,   33,  117,  117,  117,   33,  117,   36,
       85,   60,   33,   34,   55,   33,   33,   34,   54,   33,
       34,   36,   34,   27,   36,   36,   12,    8,   36,   33,
       33,   34,    7,   33,  125,  125,  125,   33,    3,   36,
        0,    0,   33,   34,    0,   33,   33,   34,    0,   33,
       34,   36,   34,    0,   36,   36,    0,    0,   36,  141,

      141,  141,  141,  141,  141,   25,  101,  101,  101,  101,
      101,  101,  101,    0,    0,   25,    0,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   28,   28,   28,   28,   28,   28,
       28,   28,   28,   28,   28,   28,   28,   28,   28,   28,
        0,    0,   28,   28,    0,   28,   28,   28,   28,   28,
       28,   28,   28,    0,   28,   28,   28,   30,   30,    0,
       30,   30,   30,   30,   30,   30,   30,   30,   30,  162,
      162,  162,    0,  162,    0,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,

       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      170,  170,  170,    0,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
      204,  204,  204,    0,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   30,   30,   30,   30,   30,   30,   30,
        0,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   30,   30,   35,   30,   30,   30,   37,   37,   86,
       35,    0,    0,   35,   86,   35,   39,    0,   35,   35,
       37,   37,   35,    0,   37,    0,    0,   37,   39,  235,

      235,  235,   39,   35,    0,   39,    0,   37,   37,    0,
       35,    0,    0,   35,    0,   35,   39,    0,   35,   35,
       37,   37,   35,    0,   37,   38,    0,   37,   39,   38,
        0,    0,   39,    0,   86,   39,    0,   38,    0,   86,
       38,   38,    0,   86,   38,   40,   40,   40,  196,  196,
      196,   86,  196,   40,   86,   38,   86,    0,   40,   38,
        0,    0,   40,    0,    0,   40,    0,   38,    0,    0,
       38,   38,    0,    0,   38,   40,   40,   40,    0,  142,
      142,  142,  142,   40,   42,   42,   41,   41,   40,   41,
       41,  142,   40,    0,   41,   40,    0,   42,   42,   41,

       41,   42,    0,   41,   42,    0,   41,  119,  119,  119,
      119,  119,  119,  119,   42,   42,   41,   41,    0,   41,
       41,  360,  360,  360,   41,   44,   44,   42,   42,   41,
       41,   42,    0,   41,   42,   43,   41,    0,   44,   43,
        0,   44,   44,    0,    0,   44,    0,   43,    0,   43,
       43,   43,    0,    0,   43,   44,   44,  135,  135,  135,
      135,  135,  135,  135,    0,   43,    0,    0,   44,   43,
        0,   44,   44,    0,    0,   44,    0,   43,   47,   43,
       43,   43,   45,   45,   43,   47,   45,  426,  426,  426,
       47,  477,  477,  477,   47,   45,   45,   47,    0,   45,

        0,    0,   45,    0,  293,  293,  293,  293,   47,  621,
      621,  621,   45,   45,    0,   47,   45,  613,  613,  613,
       47,  613,    0,    0,   47,   45,   45,   47,    0,   45,
        0,    0,   45,   46,   46,    0,    0,   46,    0,    0,
       46,   46,   48,   48,    0,    0,   46,  880,  880,  880,
       46,   46,   46,   46,   48,    0,    0,   48,   48,    0,
        0,   48,    0,   46,   46,  293,    0,   46,    0,    0,
       46,   46,   48,   48,    0,    0,   46,   49,   49,    0,
       46,   46,   46,   46,   48,    0,   50,   48,   48,    0,
       49,   48,   50,    0,   49,    0,    0,   49,   50,  838,

      838,  838,   50,  838,    0,   50,    0,   49,   49,  317,
      317,  317,  317,  317,   51,    0,   50,   51,    0,    0,
       49,    0,   50,    0,   49,    0,   51,   49,   50,    0,
       51,    0,   50,   51,    0,   50,   57,    0,   58,    0,
        0,    0,    0,   57,   51,   58,   57,   51,   57,    0,
       58,   57,   57,    0,   58,   57,   51,   58,    0,    0,
       51,    0,    0,   51,    0,   57,   57,    0,   58,    0,
        0,    0,    0,   57,    0,   58,   57,    0,   57,    0,
       58,   57,   57,   58,   58,   57,    0,   58,   64,   64,
       64,   64,   64,   64,   64,   64,   64,   64,   64,   64,

       64,   64,   64,   64,   64,   65,   65,   65,   65,   65,
       65,   65,   65,   65,   65,   65,   65,   65,   65,   65,
       65,   65,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   68,   68,   68,   68,
       68,   68,   68,   68,    0,   68,   68,   68,   68,    0,
       68,   68,   68,   69,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,   69,   69,   69,   69,   69,   69,
       71,   71,   71,   71,   71,   71,   71,   71,   71,   71,

       71,   71,   71,   71,   71,   71,   71,   73,   73,   73,
       73,   73,   73,   73,   73,   73,   73,   73,   73,   73,
       73,   73,   73,   73,   74,   74,   74,   74,   74,   74,
       74,   74,   74,   74,   74,   74,   74,   74,   74,   74,
       74,   75,   75,   75,   75,   75,   75,   75,   75,   75,
       75,   75,   75,   75,   75,   75,   75,   75,   76,   76,
       76,   76,   76,   76,   76,   76,   76,   76,   76,   76,
       76,   76,   76,   76,   76,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   80,   80,   80,   80,   80,

       80,   80,   80,   80,   80,   80,   80,   80,   80,   80,
       80,   80,   84,   87,   87,   87,   87,   87,   87,   87,
       87,   87,   87,   87,   87,   87,   87,   87,   87,   88,
       88,   88,   88,   88,   88,   88,   88,   88,   88,   88,
       88,   88,   88,   88,   89,   89,   89,   89,   89,   89,
       89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
       89,  185,  185,  185,  185,  185,  185,   84,   91,   91,
       91,   91,   91,   91,   91,   91,   91,   91,   91,   91,
       91,   91,   91,   91,   91,   92,   92,   92,   92,   92,
       92,   92,   92,   92,   92,   94,   94,   94,   94,   94,

       94,   94,   94,   94,   94,   84,  144,  144,  144,  144,
      144,  144,  144,  144,    0,   84,    0,   84,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,   84,   84,   93,   93,   93,   93,   93,   93,
       93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
       93,   95,   95,   95,   95,   95,   95,   95,   95,   95,
       95,   95,   95,   95,   95,   95,   95,   95,   97,  147,
      147,  147,  147,  147,  147,  147,  147,    0,   97,    0,
       97,   97,   97,   97,   97,   97,   97,   97,   97,   97,
       97,   97,   97,   97,   97,   97,   97,   98,   98,   98,

       98,   98,   98,   98,   98,   98,   98,   98,   98,   98,
       98,   98,   98,   99,   99,   99,   99,   99,   99,   99,
       99,   99,   99,   99,   99,   99,   99,   99,  100,  100,
      100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  102,  102,  102,  102,  102,
      102,  102,  102,  102,  102,  102,  102,  102,  102,  102,
      102,  102,  103,  103,  103,  103,  103,  103,  103,  103,
      103,  103,  104,  104,  104,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  104,  104,  104,  104,  105,
      105,  105,  105,  105,  105,  105,  105,  105,  105,  106,

      106,  106,  106,  106,  106,  106,  106,  106,  106,  106,
      106,  106,  106,  106,  106,  106,  108,  108,  108,  108,
      108,  108,  108,  108,  164,  164,  164,  164,  164,  164,
      164,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,    0,    0,    0,    0,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,
      108,  108,  108,  108,  108,  108,    0,    0,    0,    0,
      108,  108,  108,  108,  108,  108,  108,  108,  108,  108,

      108,  108,  108,  108,  108,  108,    0,  108,  108,  108,
        0,  108,  108,  108,  108,  108,  108,  108,  108,    0,
      108,  108,  108,  109,  109,  109,  109,  109,  109,  109,
      109,  109,  109,  109,  109,  109,  109,  109,  109,  109,
      110,  110,  110,  110,  110,  110,  110,  110,  110,  110,
      110,  110,  110,  110,  110,  110,  110,  111,  111,  111,
      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
      111,  111,  111,  111,  112,  112,  112,  112,  112,  112,
      112,  112,  112,  112,  112,  112,  112,  112,  112,  112,
      112,  113,  113,  113,  113,  113,  113,  113,  113,  113,

      113,  113,  113,  113,  113,  113,  113,  113,  114,  114,
      114,  114,  114,  114,  114,  114,  114,  114,  114,  114,
      114,  114,  114,  114,  114,  115,  115,  115,  115,  115,
      115,  115,  115,    0,  115,  115,  115,  115,    0,  115,
      115,  115,  116,  116,  116,  116,  116,  116,  116,  116,
      116,  116,  116,  116,  116,  116,  116,  116,  116,  118,
      118,  118,  118,  118,  118,  118,  118,  118,  118,  118,
      118,  118,  118,  118,  118,  118,  120,  120,  120,  120,
      120,  120,  120,  120,  120,  120,  120,  120,  120,  120,
      120,  120,  120,  121,  121,  121,  121,  121,  121,  121,

      121,  121,  121,  121,  121,  121,  121,  121,  121,  121,
      122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  122,  123,  123,  123,
      123,  123,  123,  123,  123,  123,  123,  123,  123,  123,
      123,  123,  123,  123,  124,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  126,  126,  126,  126,  126,  126,
      126,  126,  126,  126,  127,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  127,  127,  127,  127,
      127,  129,  131,    0,    0,    0,    0,  131,  132,  132,
      132,  132,  132,  132,  132,  132,  132,  132,  132,  132,

      132,  132,  132,  132,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  133,  133,  133,  133,  133,  133,  137,
      137,  137,  137,  137,  137,  137,  137,  137,  137,    0,
        0,  129,  379,  379,  379,  379,  379,  131,    0,    0,
        0,    0,  131,    0,    0,    0,  131,  179,  179,  179,
      179,  179,  179,  179,  131,    0,  152,  131,  152,  131,
        0,  152,  152,  152,  152,  152,  152,  152,  152,  129,
      198,  198,  198,  198,  198,  198,  198,    0,    0,  129,
        0,  129,  129,  129,  129,  129,  129,  129,  129,  129,
      129,  129,  129,  129,  129,  129,  129,  129,  134,  134,

      134,  134,  134,  134,  134,  134,  134,  134,  134,  134,
      134,  134,  134,  134,  134,  136,  136,  136,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  136,
      136,  136,  138,  138,  138,  138,  138,  138,  138,  138,
      138,  138,  138,  138,  138,  138,  138,  138,  138,  139,
      139,  139,  139,  139,  139,  139,  139,  139,  139,  140,
      140,  140,  140,  140,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  140,  140,  140,  145,    0,  145,  145,
      145,  145,  145,  145,  145,  145,  148,    0,  148,  148,
      148,  148,  148,  148,  148,  148,    0,  145,  149,  149,

      149,  149,  149,  149,  149,  149,    0,  148,    0,  150,
      150,  150,  150,  150,  150,  150,  150,  149,  229,  229,
      229,  229,  229,  229,  229,    0,    0,  145,  150,  354,
      354,  354,  354,  354,  354,  354,  151,  148,  151,  151,
      151,  151,  151,  151,  151,  151,    0,  149,  402,  402,
      402,  402,  402,  402,  402,  402,    0,  151,  150,  154,
      154,  154,  154,  154,  154,  154,  154,  154,  154,  154,
      154,  154,  154,  154,  154,  154,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,    0,  151,  153,  153,
        0,  153,  153,  153,  153,  153,  153,  153,  153,  420,

      420,  420,  420,  420,  420,  420,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,    0,    0,    0,    0,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,    0,    0,    0,    0,  153,  153,  153,  153,  153,
      153,  153,  153,  153,  153,  153,  153,  153,  153,  153,
      153,    0,  153,  153,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  153,    0,  153,  153,  153,  155,  155,

      155,  155,  155,  155,  155,  155,  155,  155,  155,  155,
      155,  155,  155,  155,  155,  156,  156,  156,  156,  156,
      156,  156,  156,  156,  156,  156,  156,  156,  156,  156,
      156,  156,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  158,
      158,  158,  158,  158,  158,  158,  158,  158,  158,  158,
      158,  158,  158,  158,  158,  158,  159,  159,  159,  159,
      159,  159,  159,  159,  159,  159,  159,  159,  159,  159,
      159,  159,  159,  160,  160,  160,  160,  160,  160,  160,
      160,    0,  160,  160,  160,  160,    0,  160,  160,  160,

      161,  161,  161,  161,  161,  161,  161,  161,  161,  161,
      161,  161,  161,  161,  161,  161,  161,  163,  163,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  163,
      163,  163,  163,  163,  165,  165,  165,  165,  165,  165,
      165,  165,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  166,  166,  166,  166,  166,  167,  167,
      167,  167,  167,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  167,  167,  168,  168,  168,  168,  168,
      168,  168,  168,  168,  168,  168,  168,  168,  168,  168,

      168,  168,  171,  171,  171,  171,  171,  171,  171,  171,
      171,  171,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  173,
      176,  176,  176,  176,  176,  176,  176,  176,  176,  176,
      176,  176,  176,  176,  176,  176,  177,  177,  177,  177,
      177,  177,  177,  177,  177,  177,  177,  177,  177,  177,
      177,  178,  178,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,  178,  178,  178,  178,  178,  180,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  180,  180,    0,  173,  403,  403,  403,

      403,  403,  403,  403,  403,    0,  173,    0,  173,  173,
      173,  173,  173,  173,  173,  173,  173,  173,  173,  173,
      173,  173,  173,  173,  173,  181,  181,  181,  181,  181,
      181,  181,  181,  181,  181,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  183,  183,  183,  183,  183,  183,  183,  183,
      183,  183,  184,  184,  184,  184,  184,  184,  184,  184,
      184,  184,  184,  184,  184,  184,  184,  184,  184,  187,
      187,  187,  187,  187,  187,  187,  187,  445,  445,  445,
      445,  445,    0,    0,  187,  187,  187,  187,  187,  187,

      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,    0,
        0,    0,    0,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,    0,
        0,    0,    0,  187,  187,  187,  187,  187,  187,  187,
      187,  187,  187,  187,  187,  187,  187,  187,  187,    0,
      187,  187,  187,    0,  187,  187,  187,  187,  187,  187,
      187,  187,    0,  187,  187,  187,  188,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  188,  188,  188,  188,

      188,  188,  188,  189,  189,  189,  189,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  189,  189,  189,
      190,  190,  190,  190,  190,  190,  190,  190,  190,  190,
      190,  190,  190,  190,  190,  190,  190,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,  191,  191,  191,
      191,  191,  191,  191,  192,  192,  192,  192,  192,  192,
      192,  192,  192,  192,  192,  192,  192,  192,  192,  192,
      192,  193,  193,  193,  193,  193,  193,  193,  193,  193,
      193,  193,  193,  193,  193,  193,  193,  193,  194,  194,
      194,  194,  194,  194,  194,  194,    0,  194,  194,  194,

      194,    0,  194,  194,  194,  195,  195,  195,  195,  195,
      195,  195,  195,  195,  195,  195,  195,  195,  195,  195,
      195,  195,  197,  197,  197,  197,  197,  197,  197,  197,
      197,  197,  197,  197,  197,  197,  197,  197,  197,  199,
      199,  199,  199,  199,  199,  199,  199,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  200,  200,  200,  200,
      200,  200,  200,  200,  200,  200,  200,  200,  200,  200,
      200,  200,  200,  201,  201,  201,  201,  201,  201,  201,
      201,  201,  201,  201,  201,  201,  201,  201,  201,  201,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  202,

      202,  202,  202,  202,  202,  202,  202,  203,  203,  203,
      203,  203,  203,  203,  203,  203,  203,  205,  205,  205,
      205,  205,  205,  205,  205,  205,  205,  206,  206,  206,
      206,  206,  206,  206,  206,  206,  206,  206,  206,  206,
      206,  206,  206,  206,  208,  209,  496,  496,  496,  496,
      496,    0,  211,  209,    0,    0,  208,    0,    0,    0,
      208,    0,    0,  208,  211,  209,    0,    0,  211,  209,
        0,  211,  209,    0,  208,  471,  471,  471,  471,  471,
      471,  471,  211,  209,    0,    0,  208,    0,    0,    0,
      208,    0,    0,  208,  211,  209,    0,    0,  211,  209,

        0,  211,  209,  210,  210,  210,  210,  210,  210,  210,
      210,  210,  210,  210,  210,  210,  210,  210,  210,    0,
      212,  210,  210,    0,  210,  210,  210,  210,  210,  210,
      210,  210,  212,  210,  210,  210,  212,  213,    0,  212,
        0,    0,  214,  214,  523,  523,  523,  523,  523,  213,
      212,    0,  215,  213,  214,    0,  213,  215,  214,  213,
        0,  214,  212,    0,  215,    0,  212,  213,  215,  212,
        0,  215,  214,  214,  671,  671,  671,  671,  671,  213,
        0,    0,  215,  213,  214,    0,  213,  215,  214,  213,
        0,  214,    0,    0,  215,    0,    0,    0,  215,    0,

        0,  215,  216,  216,  216,  216,  216,  216,  216,  216,
      216,  216,  216,  216,  216,  216,  216,  216,  216,  217,
      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,
      217,  217,  217,  217,  217,  217,  218,  218,  218,  218,
      218,  218,  218,  218,  218,  218,  218,  218,  218,  218,
      218,  218,  218,  219,  219,  219,  219,  219,  219,  219,
      219,  219,  219,  219,  219,  219,  219,  219,  219,  219,
      220,  220,  220,  220,  220,  220,  220,  220,  220,  220,
      220,  220,  220,  220,  220,  220,  220,  221,  221,  221,
      221,  221,  221,  221,  221,  221,  221,  221,  221,  221,

      221,  221,  221,  221,  222,  222,  222,  222,  222,  222,
      222,  222,  222,  222,  222,  222,  222,  222,  222,  222,
      222,  224,  224,  224,  224,  224,  224,  224,  224,    0,
      224,  224,  224,  224,    0,  224,  224,  224,  225,  225,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
      225,  225,  225,  225,  225,  226,  226,  226,  226,  226,
      226,  226,  226,  226,  226,  226,  226,  226,  226,  226,
      226,  226,  227,  227,  227,  227,  227,  227,  227,  227,
      227,  227,  227,  227,  227,  227,  227,  227,  227,  228,
      228,  228,  228,  228,  228,  228,  228,  228,  228,  228,

      228,  228,  228,  228,  228,  228,  230,  230,  230,  230,
      230,  230,  230,  230,  230,  230,  230,  230,  230,  230,
      230,  230,  230,  231,  231,  231,  231,  231,  231,  231,
      231,  231,  231,  231,  231,  231,  231,  231,  231,  231,
      232,  232,  232,  232,  232,  232,  232,  232,  232,  232,
      232,  232,  232,  232,  232,  232,  232,  233,  233,  233,
      233,  233,  233,  233,  233,  233,  233,  233,  233,  233,
      233,  233,  233,  233,  234,  234,  234,  234,  234,  234,
      234,  234,  234,  234,  236,  236,  236,  236,  236,  236,
      236,  236,  236,  236,  237,  237,  237,  237,  237,  237,

      237,  237,  237,  237,  237,  237,  237,  237,  237,  237,
      237,  238,  239,  240,  615,  615,  615,  615,  615,  615,
      615,  241,    0,  238,  239,  240,  240,  238,  239,  240,
      238,  239,  240,  241,    0,    0,    0,  241,    0,  241,
      241,  238,  239,  240,  639,  639,  639,  639,  639,  639,
      639,  241,  242,  238,  239,  240,  240,  238,  239,  240,
      238,  239,  240,  241,  242,  243,    0,  241,  242,  241,
      241,  242,  243,  244,  244,    0,    0,  243,    0,    0,
        0,  243,  242,    0,  243,    0,  244,    0,    0,    0,
      244,    0,  244,  244,  242,  243,  245,    0,  242,    0,

        0,  242,  243,  244,  244,  246,    0,  243,  245,    0,
        0,  243,  245,  245,  243,  245,  244,  246,  245,    0,
      244,  246,  244,  244,  246,  247,  245,  393,  393,  393,
      393,  393,  393,  393,  393,  246,    0,  247,  245,    0,
        0,  247,  245,  245,  247,  245,  393,  246,  245,  248,
      248,  246,    0,    0,  246,  247,    0,  248,    0,    0,
        0,    0,  248,    0,    0,    0,  248,  247,    0,  248,
        0,  247,    0,    0,  247,    0,  393,    0,    0,  248,
      248,  249,  249,  249,    0,    0,    0,  248,    0,  252,
        0,  250,  248,  249,    0,    0,  248,  249,  250,  248,

      249,  252,  252,  250,    0,  252,  251,  250,  252,    0,
      250,  249,  249,  249,    0,    0,  251,    0,  251,  252,
        0,  250,  251,  249,    0,  251,    0,  249,  250,    0,
      249,  252,  252,  250,    0,  252,  251,  250,  252,    0,
      250,  253,    0,    0,    0,    0,  251,    0,  251,  254,
      254,    0,  251,  253,  253,  251,  255,  253,  256,    0,
      253,    0,  254,  254,    0,    0,  254,    0,  255,  254,
      256,  253,  255,    0,  256,  255,  256,  256,    0,  254,
      254,    0,    0,  253,  253,    0,  255,  253,  256,    0,
      253,    0,  254,  254,    0,    0,  254,  257,  255,  254,

      256,    0,  255,  258,  256,  255,  256,  256,    0,  257,
        0,    0,    0,  257,    0,  258,  257,    0,  259,  258,
      258,    0,  258,    0,    0,  259,    0,  257,    0,    0,
      259,    0,    0,  258,  259,    0,    0,  259,    0,  257,
        0,    0,    0,  257,    0,  258,  257,  260,  259,  258,
      258,    0,  258,    0,  260,  259,  261,  260,    0,  260,
      259,  262,  262,  260,  259,  260,  260,  259,  261,    0,
        0,    0,  261,    0,  262,  261,    0,  260,  262,    0,
        0,  262,    0,    0,  260,    0,  261,  260,    0,  260,
        0,  262,  262,  260,    0,  260,  260,    0,  261,    0,

      265,  263,  261,  264,  262,  261,    0,    0,  262,    0,
        0,  262,  263,  263,    0,  264,  266,  263,    0,  264,
      263,    0,  264,    0,  264,  265,    0,  266,  266,    0,
        0,  263,  266,  264,    0,  266,    0,  265,    0,    0,
        0,  265,  263,  263,  265,  264,  266,  263,    0,  264,
      263,    0,  264,    0,  264,  265,  267,  266,  266,    0,
        0,  268,  266,    0,    0,  266,    0,  265,  267,    0,
        0,  265,  267,  268,  265,  267,  269,  268,    0,    0,
      268,  731,  731,  731,  731,  731,  267,  269,  269,    0,
        0,  268,  269,    0,    0,  269,  270,    0,  267,    0,

        0,    0,  267,  268,    0,  267,  269,  268,  270,    0,
      268,  272,  270,  270,    0,  270,  270,  269,  269,    0,
      271,    0,  269,  272,  271,  269,  270,  272,  272,    0,
      272,    0,  271,    0,    0,    0,  271,    0,  270,  271,
      274,  272,  270,  270,    0,  270,  270,    0,    0,  273,
      271,  273,  274,  272,  271,    0,  274,  272,  272,  274,
      272,  273,  271,    0,  275,  273,  271,  275,  273,  271,
      274,  275,    0,    0,    0,    0,  275,  275,    0,  273,
      275,  273,  274,  275,  276,    0,  274,    0,    0,  274,
        0,  273,    0,    0,  275,  273,  276,  275,  273,    0,

      276,  275,    0,  276,    0,    0,  275,  275,  281,  281,
      275,    0,    0,  275,  276,  277,    0,  277,    0,    0,
      277,  281,    0,    0,  278,  281,  276,  277,  281,    0,
      276,  277,    0,  276,  277,  277,  278,  279,  281,  281,
      278,    0,  278,  278,    0,  277,    0,  277,  279,  279,
      277,  281,    0,  279,  278,  281,  279,  277,  281,    0,
        0,  277,    0,    0,  277,  277,  278,  279,    0,    0,
      278,    0,  278,  278,    0,  280,  280,    0,  279,  279,
        0,    0,    0,  279,    0,  280,  279,  280,  282,  280,
      280,  280,    0,    0,  280,    0,    0,    0,  282,    0,

      282,    0,    0,    0,  282,  280,  280,  282,    0,  283,
      283,    0,    0,  283,    0,  280,    0,  280,  282,  280,
      280,  280,  283,    0,  280,  283,  283,    0,  282,  283,
      282,    0,    0,    0,  282,  284,    0,  282,    0,  283,
      283,    0,    0,  283,    0,    0,  284,  284,    0,    0,
      285,  284,  283,    0,  284,  283,  283,    0,    0,  283,
        0,  285,  285,  300,    0,  284,  285,    0,    0,  285,
      286,  286,    0,    0,    0,  300,  284,  284,    0,  300,
      285,  284,  300,  286,  284,    0,    0,  286,    0,    0,
      286,  285,  285,  300,    0,  287,  285,  287,    0,  285,

      286,  286,  287,  288,    0,  300,    0,  287,  287,  300,
      288,  287,  300,  286,  287,  288,    0,  286,    0,  288,
      286,    0,  288,  289,    0,  287,  289,  287,    0,    0,
        0,    0,  287,  288,    0,  289,    0,  287,  287,  289,
      288,  287,  289,    0,  287,  288,    0,  290,  291,  288,
        0,  291,  288,  289,    0,    0,  289,  290,    0,  290,
      291,    0,  290,  290,  291,  289,  290,  291,    0,  289,
        0,    0,  289,    0,    0,    0,    0,  290,  291,    0,
        0,  291,  292,  292,    0,    0,    0,  290,    0,  290,
      291,    0,  290,  290,  291,  292,  290,  291,  395,  292,

      395,    0,  292,  395,  395,  395,  395,  395,  395,  395,
      395,    0,  292,  292,  359,  359,  359,  359,  359,  359,
      359,  359,  359,  359,    0,  292,    0,    0,    0,  292,
        0,    0,  292,  296,  296,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  296,  296,  296,  296,    0,
      297,  296,  296,    0,  296,  296,  296,  296,  296,  296,
      296,  296,  297,  296,  296,  296,  297,  298,    0,  297,
        0,    0,  301,  645,  645,  645,  645,  645,  645,  298,
      297,    0,  302,  298,  301,    0,  298,    0,  301,    0,
      297,  301,  297,    0,  302,    0,  297,  298,  302,  297,

        0,  302,  301,    0,    0,    0,    0,  303,    0,  298,
        0,    0,  302,  298,  301,  298,  298,  304,  301,  303,
        0,  301,  305,  303,  302,    0,  303,  306,  302,  304,
        0,  302,    0,  304,  305,    0,  304,  303,  305,  306,
        0,  305,    0,  306,    0,    0,  306,  304,    0,  303,
        0,    0,  305,  303,    0,    0,  303,  306,    0,  304,
        0,    0,    0,  304,  305,    0,  304,    0,  305,  306,
        0,  305,    0,  306,    0,    0,  306,  307,  307,  307,
      307,  307,  307,  307,  307,  307,  307,  307,  307,  307,
      307,  307,  307,  307,  308,  308,  308,  308,  308,  308,

      308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  309,  309,  309,  309,  309,  309,  309,  309,  309,
      309,  309,  309,  309,  309,  309,  309,  309,  310,  310,
      310,  310,  310,  310,  310,  310,  310,  310,  310,  310,
      310,  310,  310,  310,  310,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  311,  311,  311,  311,
      311,  311,  312,  312,  312,  312,  312,  312,  312,  312,
      312,  312,  312,  312,  312,  312,  312,  312,  312,  313,
      313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,  313,  313,  313,  313,  314,  314,  314,  314,

      314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
      314,  314,  314,  315,  315,  315,  315,  315,  315,  315,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,  316,  316,  316,  316,  316,  318,  318,  318,
      318,  318,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  318,  318,  318,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
      319,  321,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  324,

      324,  324,  324,  324,  324,  324,  324,  324,  324,  324,
      324,  324,  324,  324,  324,  324,  325,  325,  325,  325,
      325,  325,  325,  325,  325,  325,  325,  325,  325,  325,
      325,  325,  325,    0,    0,    0,  321,  326,  326,  326,
      326,  326,  326,  326,  326,  326,  326,  326,  326,  326,
      326,  326,  326,  326,  327,  327,  327,  327,  327,  327,
      327,  327,  327,  327,  327,  327,  327,  327,  327,  327,
      327,  398,    0,  398,  321,    0,  398,  398,  398,  398,
      398,  398,  398,  398,  321,    0,  321,  321,  321,  321,
      321,  321,  321,  321,  321,  321,  321,  321,  321,  321,

      321,  321,  321,  328,  328,  328,  328,  328,  328,  328,
      328,  328,  328,  328,  328,  328,  328,  328,  328,  328,
      329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  329,  330,  330,  330,
      330,  330,  330,  330,  330,  330,  330,  330,  330,  330,
      330,  330,  330,  330,  331,  331,  331,  331,  331,  331,
      331,  331,  331,  331,  331,  331,  331,  331,  331,  331,
      331,  333,  333,  333,  333,  333,  333,  333,  333,  333,
      333,  333,  333,  333,  333,  333,  333,  333,  334,  334,
      334,  334,  334,  334,  334,  334,  334,  334,  334,  334,

      334,  334,  334,  334,  334,  335,  335,  335,  335,  335,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  335,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  337,
      337,  337,  337,  337,  337,  337,  337,  337,  337,  337,
      337,  337,  337,  337,  337,  337,  338,  338,  338,  338,
      338,  338,  338,  338,  338,  338,  338,  338,  338,  338,
      338,  338,  338,  339,  339,  339,  339,  339,  339,  339,
      339,  339,  339,  339,  339,  339,  339,  339,  339,  339,
      342,  342,  342,  342,  342,  342,  342,  342,  342,  342,

      342,  342,  342,  342,  342,  342,  342,  343,  343,  343,
      343,  343,  343,  343,  343,  343,  343,  343,  343,  343,
      343,  343,  343,  343,  344,  344,  344,  344,  344,  344,
      344,  344,  344,  344,  344,  344,  344,  344,  344,  344,
      344,  345,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  345,  345,  345,  345,  345,  345,  345,  346,  346,
      346,  346,  346,  346,  346,  346,  346,  346,  346,  346,
      346,  346,  346,  346,  346,  347,  347,  347,  347,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,  347,
      347,  347,  348,  348,  348,  348,  348,  348,  348,  348,

      348,  348,  348,  348,  348,  348,  348,  348,  348,  350,
      350,  350,  350,  350,  350,  350,  350,    0,  350,  350,
      350,  350,    0,  350,  350,  350,  351,  351,  351,  351,
      351,  351,  351,  351,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  352,  352,  352,  352,  352,  352,  352,
      352,  352,  352,  352,  352,  352,  352,  352,    0,  352,
      353,  353,  353,  353,  353,  353,  353,  353,  353,  353,
      353,  353,  353,  353,  353,  353,  353,  355,  355,  355,
      355,  355,  355,  355,  355,  355,  355,  355,  355,  355,
      355,  355,  355,  355,  356,  356,  356,  356,  356,  356,

      356,  356,  356,  356,  356,  356,  356,  356,  356,  356,
      356,  357,  357,  357,  357,  357,  357,  357,  357,  357,
      357,  357,  357,  357,  357,  357,  357,  357,  358,  358,
      358,  358,  358,  358,  358,  358,  358,  358,  358,  358,
      358,  358,  358,  358,  358,  361,  361,  361,  361,  361,
      361,  361,  361,  361,  361,  362,  362,  362,  362,  362,
      362,  362,  362,  362,  362,  362,  362,  362,  362,  362,
      362,  362,  369,  369,  369,  369,  369,  369,  369,  369,
      369,  369,  369,  369,  369,  369,  369,  369,  369,  370,
      370,  370,  370,  370,  370,  370,  370,  370,  370,  370,

      370,  370,  370,  370,  370,  370,  371,  371,  371,  371,
      371,  371,  371,  371,  371,  371,  371,  371,  371,  371,
      371,  371,  371,  372,  372,  372,  372,  372,  372,  372,
      372,  372,  372,  372,  372,  372,  372,  372,  372,  372,
      373,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  373,  373,  373,  373,  373,  374,  374,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  374,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  375,  375,  375,  375,  375,  375,  375,
      375,  376,  376,  376,  376,  376,  376,  376,  376,  376,

      376,  376,  376,  376,  376,  376,  376,  376,  377,  377,
      377,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  377,  377,  377,  378,  378,  378,  378,  378,
      378,  378,  378,  378,  378,  378,  378,  378,  378,  378,
      378,  378,  380,  380,  380,  380,  380,  380,  380,  380,
      380,  380,  380,  380,  380,  380,  380,  380,  380,  381,
      381,  381,  381,  381,  381,  381,  381,  381,  381,  381,
      381,  381,  381,  381,  381,  381,  383,  384,  384,  384,
      384,  384,  384,  384,  384,  384,  384,  384,  384,  384,
      384,  384,  384,  384,  386,  386,  386,  386,  386,  386,

      386,  386,  386,  386,  386,  386,  386,  386,  386,  386,
      386,  399,    0,  399,    0,    0,  399,  399,  399,  399,
      399,  399,  399,  399,    0,    0,  383,  387,  387,  387,
      387,  387,  387,  387,  387,  387,  387,  387,  387,  387,
      387,  387,  387,  387,  388,  388,  388,  388,  388,  388,
      388,  388,  388,  388,  388,  388,  388,  388,  388,  388,
      388,  401,    0,  401,  383,    0,  401,  401,  401,  401,
      401,  401,  401,  401,  383,    0,  383,  383,  383,  383,
      383,  383,  383,  383,  383,  383,  383,  383,  383,  383,
      383,  383,  383,  389,  389,  389,  389,  389,  389,  389,

      389,  389,  389,  389,  389,  389,  389,  389,  389,  389,
      390,  390,  390,  390,  390,  390,  390,  390,  390,  390,
      390,  390,  390,  390,  390,  390,  390,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  392,  392,  392,  392,  392,  392,
      392,  392,  392,  392,  392,  392,  392,  392,  392,  392,
      392,  394,  394,  394,  394,  394,  394,  394,  394,  396,
      396,  396,  396,  396,  396,  396,  396,    0,    0,    0,
      394,  687,  687,  687,  687,  687,  687,  687,  396,  397,
      397,  397,  397,  397,  397,  397,  397,  400,  400,  400,

      400,  400,  400,  400,  400,    0,    0,    0,  397,    0,
      394,  762,  762,  762,  762,  762,  400,    0,  396,  407,
      407,  407,  407,  407,  407,  407,  407,  407,  407,  407,
      407,  407,  407,  407,  407,  407,    0,    0,  397,  693,
      693,  693,  693,  693,  693,    0,  400,  408,  408,  408,
      408,  408,  408,  408,  408,  408,  408,  408,  408,  408,
      408,  408,  408,  408,  409,  409,  409,  409,  409,  409,
      409,  409,  409,  409,  409,  409,  409,  409,  409,  409,
      409,  410,  410,  410,  410,  410,  410,  410,  410,  410,
      410,  410,  410,  410,  410,  410,  410,  410,  411,  411,

      411,  411,  411,  411,  411,  411,  411,  411,  411,  411,
      411,  411,  411,  411,  411,  412,  412,  412,  412,  412,
      412,  412,  412,  412,  412,  412,  412,  412,  412,  412,
      412,  412,  413,  413,  413,  413,  413,  413,  413,  413,
      413,  413,  413,  413,  413,  413,  413,  413,  413,  415,
      415,  415,  415,  415,  415,  415,  415,    0,  415,  415,
      415,  415,    0,  415,  415,  415,  416,  416,  416,  416,
      416,  416,  416,  416,  416,  416,  416,  416,  416,  416,
      416,  416,  416,  417,  417,  417,  417,  417,  417,  417,
      417,  417,  417,  417,  417,  417,  417,  417,  417,  417,

      418,  418,  418,  418,  418,  418,  418,  418,  418,  418,
      418,  418,  418,  418,  418,  418,  418,  419,  419,  419,
      419,  419,  419,  419,  419,  419,  419,  419,  419,  419,
      419,  419,  419,  419,  421,  421,  421,  421,  421,  421,
      421,  421,  421,  421,  421,  421,  421,  421,  421,  421,
      421,  422,  422,  422,  422,  422,  422,  422,  422,  422,
      422,  422,  422,  422,  422,  422,  422,  422,  423,  423,
      423,  423,  423,  423,  423,  423,  423,  423,  423,  423,
      423,  423,  423,  423,  423,  424,  424,  424,  424,  424,
      424,  424,  424,  424,  424,  424,  424,  424,  424,  424,

      424,  424,  425,  425,  425,  425,  425,  425,  425,  425,
      425,  425,  427,  427,  427,  427,  427,  427,  427,  427,
      427,  427,  428,  428,  428,  428,  428,  428,  428,  428,
      428,  428,  428,  428,  428,  428,  428,  428,  428,  435,
      435,  435,  435,  435,  435,  435,  435,  435,  435,  435,
      435,  435,  435,  435,  435,  435,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  437,  437,  437,  437,  437,  437,  437,
      437,  437,  437,  437,  437,  437,  437,  437,  437,  437,
      438,  438,  438,  438,  438,  438,  438,  438,  438,  438,

      438,  438,  438,  438,  438,  438,  438,  439,  439,  439,
      439,  439,  439,  439,  439,  439,  439,  439,  439,  439,
      439,  439,  439,  439,  440,  440,  440,  440,  440,  440,
      440,  440,  440,  440,  440,  440,  440,  440,  440,  440,
      440,  441,  441,  441,  441,  441,  441,  441,  441,  441,
      441,  441,  441,  441,  441,  441,  441,  441,  442,  442,
      442,  442,  442,  442,  442,  442,  442,  442,  442,  442,
      442,  442,  442,  442,  442,  443,  443,  443,  443,  443,
      443,  443,  443,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  444,  444,  444,  444,  444,  444,  444,  444,

      444,  444,  444,  444,  444,  444,  444,  444,  444,  446,
      446,  446,  446,  446,  446,  446,  446,  446,  446,  446,
      446,  446,  446,  446,  446,  446,  447,  447,  447,  447,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
      447,  447,  447,  448,  448,  448,  448,  448,  448,  448,
      448,  448,  448,  448,  448,  448,  448,  448,  448,  448,
      450,  450,  450,  450,  450,  450,  450,  450,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  451,  451,  451,
      451,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,  451,  451,  452,  452,  452,  452,  452,  452,

      452,  452,  452,  452,  452,  452,  452,  452,  452,  452,
      452,  453,  453,  453,  453,  453,  453,  453,  453,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  454,  454,
      454,  454,  454,  454,  454,  454,  454,  454,  454,  454,
      454,  454,  454,  454,  454,  455,  455,  455,  455,  455,
      455,  455,  455,  455,  455,  455,  455,  455,  455,  455,
      455,  455,  456,  456,  456,  456,  456,  456,  456,  456,
      456,  456,  456,  456,  456,  456,  456,  456,  456,  459,
      459,  459,  459,  459,  459,  459,  459,  459,  459,  459,
      459,  459,  459,  459,  459,  459,  460,  460,  460,  460,

      460,  460,  460,  460,  460,  460,  460,  460,  460,  460,
      460,  460,  460,  461,  461,  461,  461,  461,  461,  461,
      461,  461,  461,  461,  461,  461,  461,  461,  461,  461,
      462,  462,  462,  462,  462,  462,  462,  462,  462,  462,
      462,  462,  462,  462,  462,  462,  462,  463,  463,  463,
      463,  463,  463,  463,  463,  463,  463,  463,  463,  463,
      463,  463,  463,  463,  464,  464,  464,  464,  464,  464,
      464,  464,  464,  464,  464,  464,  464,  464,  464,  464,
      464,  465,  465,  465,  465,  465,  465,  465,  465,  465,
      465,  465,  465,  465,  465,  465,  465,  465,  467,  467,

      467,  467,  467,  467,  467,  467,    0,  467,  467,  467,
      467,    0,  467,  467,  467,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  469,  469,  469,  469,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,  469,    0,  469,  470,
      470,  470,  470,  470,  470,  470,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,  472,  472,  472,  472,
      472,  472,  472,  472,  472,  472,  472,  472,  472,  472,
      472,  472,  472,  473,  473,  473,  473,  473,  473,  473,
      473,  473,  473,  473,  473,  473,  473,  473,  473,  473,

      474,  474,  474,  474,  474,  474,  474,  474,  474,  474,
      474,  474,  474,  474,  474,  474,  474,  475,  475,  475,
      475,  475,  475,  475,  475,  475,  475,  475,  475,  475,
      475,  475,  475,  475,  476,  476,  476,  476,  476,  476,
      476,  476,  476,  476,  478,  478,  478,  478,  478,  478,
      478,  478,  478,  478,  479,  479,  479,  479,  479,  479,
      479,  479,  479,  479,  479,  479,  479,  479,  479,  479,
      479,  486,  486,  486,  486,  486,  486,  486,  486,  486,
      486,  486,  486,  486,  486,  486,  486,  486,  487,  487,
      487,  487,  487,  487,  487,  487,  487,  487,  487,  487,

      487,  487,  487,  487,  487,  488,  488,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  489,  489,  489,  489,  489,  489,  489,  489,
      489,  489,  489,  489,  489,  489,  489,  489,  489,  490,
      490,  490,  490,  490,  490,  490,  490,  490,  490,  490,
      490,  490,  490,  490,  490,  490,  491,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  491,  492,  492,  492,  492,  492,  492,  492,
      492,  492,  492,  492,  492,  492,  492,  492,  492,  492,
      493,  493,  493,  493,  493,  493,  493,  493,  493,  493,

      493,  493,  493,  493,  493,  493,  493,  494,  494,  494,
      494,  494,  494,  494,  494,  494,  494,  494,  494,  494,
      494,  494,  494,  494,  495,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  495,  495,  495,  495,
      495,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,  497,  498,  498,
      498,  498,  498,  498,  498,  498,  498,  498,  498,  498,
      498,  498,  498,  498,  498,  500,  501,  502,  874,  874,
      874,  874,  874,  874,  874,  503,    0,  500,  501,  502,
        0,  500,  501,  502,  500,  501,  502,  503,    0,    0,

        0,  503,    0,    0,  503,  500,  501,  502,  899,  899,
      899,  899,  899,    0,    0,  503,  504,  500,  501,  502,
        0,  500,  501,  502,  500,  501,  502,  503,  504,  505,
        0,  503,  504,    0,  503,  504,    0,  506,  507,    0,
        0,  505,    0,    0,    0,  505,  504,    0,  505,  506,
      507,    0,    0,  506,  507,    0,  506,  507,  504,  505,
        0,    0,  504,    0,    0,  504,    0,  506,  507,  508,
        0,  505,    0,    0,    0,  505,    0,  509,  505,  506,
      507,  508,  510,  506,  507,  508,  506,  507,  508,  509,
      511,    0,    0,  509,  510,    0,  509,    0,  510,  508,

        0,  510,  511,    0,    0,    0,  511,  509,    0,  511,
        0,  508,  510,    0,    0,  508,    0,    0,  508,  509,
      511,  512,    0,  509,  510,    0,  509,    0,  510,    0,
        0,  510,  511,  512,    0,    0,  511,  512,    0,  511,
      512,    0,    0,  611,  611,  611,  611,  611,  611,  611,
      611,  512,  611,  611,  611,  611,    0,  611,  611,  611,
        0,    0,    0,  512,    0,    0,    0,  512,    0,    0,
      512,  513,  513,  513,  513,  513,  513,  513,  513,  513,
      513,  513,  513,  513,  513,  513,  513,  513,  514,  514,
      514,  514,  514,  514,  514,  514,  514,  514,  514,  514,

      514,  514,  514,  514,  514,  515,  515,  515,  515,  515,
      515,  515,  515,  515,  515,  515,  515,  515,  515,  515,
      515,  515,  516,  516,  516,  516,  516,  516,  516,  516,
      516,  516,  516,  516,  516,  516,  516,  516,  516,  517,
      517,  517,  517,  517,  517,  517,  517,  517,  517,  517,
      517,  517,  517,  517,  517,  517,  518,  518,  518,  518,
      518,  518,  518,  518,  518,  518,  518,  518,  518,  518,
      518,  518,  518,  519,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  519,  519,  519,  519,  519,  519,  519,
      520,  520,  520,  520,  520,  520,  520,  520,  520,  520,

      520,  520,  520,  520,  520,  520,  520,  521,  521,  521,
      521,  521,  521,  521,  521,  521,  521,  521,  521,  521,
      521,  521,  521,  521,  522,  522,  522,  522,  522,  522,
      522,  522,  522,  522,  522,  522,  522,  522,  522,  522,
      522,  524,  524,  524,  524,  524,  524,  524,  524,  524,
      524,  524,  524,  524,  524,  524,  524,  524,  525,  525,
      525,  525,  525,  525,  525,  525,  525,  525,  525,  525,
      525,  525,  525,  525,  525,  526,    0,  527,  526,  527,
        0,    0,    0,  528,    0,  528,    0,  526,    0,  527,
        0,  526,    0,  527,  526,  528,  527,    0,    0,  528,

        0,    0,  528,    0,    0,  526,    0,  527,  526,  527,
        0,    0,    0,  528,    0,  528,    0,  526,  529,  527,
        0,  526,    0,  527,  526,  528,  527,    0,  530,  528,
      529,    0,  528,  531,  529,    0,    0,  529,  530,    0,
      530,    0,    0,  531,  530,  531,    0,  530,  529,  531,
      533,    0,  531, 1053, 1053, 1053, 1053, 1053,  530,    0,
      529,    0,  533,  531,  529,    0,  533,  529,  530,  533,
      530,  532,  532,  531,  530,  531,    0,  530,    0,  531,
      533,    0,  531,  532,    0,    0,    0,  532,  532,    0,
      532,    0,  533,  535,  534,  534,  533,    0,    0,  533,

        0,  532,  532,  536,  536,  535,    0,  534,    0,  535,
        0,  534,  535,  532,  534,  536,    0,  532,  532,  536,
      532,    0,  536,  535,  534,  534,    0,    0,    0,    0,
        0,  537,    0,  536,  536,  535,    0,  534,    0,  535,
        0,  534,  535,  537,  534,  536,    0,  537,  537,  536,
      537,  539,  536,  538,  538,    0,    0,    0,    0,    0,
        0,  537,    0,  539,    0,  538,    0,  539,    0,  538,
      539,    0,  538,  537,    0,  540,    0,  537,  537,    0,
      537,  539,    0,  538,  538,    0,    0,  540,  540,    0,
        0,  540,  541,  539,  540,  538,    0,  539,    0,  538,

      539,    0,  538,    0,  541,  540,    0,  542,  541,    0,
        0,  541,    0,  543,    0,    0,    0,  540,  540,  542,
        0,  540,  541,  542,  540,  543,  542,    0,    0,  543,
      543,    0,  543,    0,  541,  544,    0,  542,  541,    0,
        0,  541,    0,  543,    0,    0,    0,  544,  544,  542,
        0,  544,  545,  542,  544,  543,  542,    0,    0,  543,
      543,    0,  543,  545,  545,  544,    0,    0,  545,    0,
        0,  545,    0,  546,    0,    0,    0,  544,  544,    0,
        0,  544,  545,  548,  544,  546,    0,  546,  547,  546,
      548,    0,  546,  545,  545,  548,    0,    0,  545,  548,

      547,  545,  548,  546,  547,    0,  547,  547,    0,    0,
        0,    0,  549,  548,    0,  546,    0,  546,  547,  546,
      548,    0,  546,    0,  549,  548,    0,  549,  549,  548,
      547,  549,  548,    0,  547,    0,  547,  547,    0,    0,
      550,    0,  549,  550,    0,    0,    0,    0,  551,    0,
        0,    0,  550,  552,  549,    0,  550,  549,  549,  550,
      551,  549,    0,  552,  551,  552,    0,  551,  554,  552,
      550,    0,  552,  550,    0,  554,    0,    0,  551,    0,
      554,    0,  550,  552,  554,    0,  550,  554,  553,  550,
      551,    0,    0,  552,  551,  552,    0,  551,  554,  552,

      553,    0,  552,  553,  553,  554,    0,  553,  555,    0,
      554,    0,    0,  556,  554,    0,    0,  554,  553,    0,
      555,    0,    0,  559,  555,  556,  555,  555,  556,  556,
      553,    0,  556,  553,  553,  559,    0,  553,  555,  559,
        0,    0,  559,  556,    0,    0,    0,    0,  557,    0,
      555,  557,    0,  559,  555,  556,  555,  555,  556,  556,
      557,  558,  556,  560,  557,  559,  558,  557,    0,  559,
      560,    0,  559,  558,    0,  560,  561,  558,  557,  560,
      558,  557,  560,    0,    0,    0,    0,    0,  561,    0,
      557,  558,  561,  560,  557,  561,  558,  557,    0,    0,

      560,  563,    0,  558,    0,  560,  561,  558,    0,  560,
      558,  564,  560,  563,    0,    0,  565,  563,  561,    0,
      563,    0,  561,  564,    0,  561,  567,  564,  565,  564,
      564,  563,  565,  565,    0,  565,  566,    0,  567,  566,
        0,  564,  567,  563,    0,  567,  565,  563,  566,    0,
      563,    0,  566,  564,    0,  566,  567,  564,  565,  564,
      564,  568,  565,  565,    0,  565,  566,  569,  567,  566,
        0,    0,  567,  568,    0,  567,    0,  568,  566,  569,
      568,    0,  566,  569,    0,  566,  569,    0,    0,  570,
        0,  568,    0,    0,    0,    0,  570,  569,    0,  571,

        0,  570,  571,  568,    0,  570,    0,  568,  570,  569,
      568,  571,    0,  569,    0,  571,  569,    0,  571,  570,
        0,  572,    0,    0,    0,    0,  570,    0,    0,  571,
      573,  570,  571,  572,  573,  570,    0,  572,  570,    0,
      572,  571,  573,  574,    0,  571,  573,    0,  571,  573,
        0,  572,    0,    0,  574,  574,    0,    0,    0,  574,
      573,    0,  574,  572,  573,    0,    0,  572,    0,    0,
      572,  575,  573,  574,    0,    0,  573,    0,    0,  573,
        0,  577,  575,  575,  574,  574,  576,  575,  576,  574,
      575,  578,  574,  577,  578,    0,    0,  577,  576,  577,

      577,  575,  576,  578,    0,  576,    0,  578,    0,    0,
      578,  577,  575,  575,    0,    0,  576,  575,  576,    0,
      575,  578,    0,  577,  578,    0,  579,  577,  576,  577,
      577,  580,  576,  578,    0,  576,  583,  578,  579,  583,
      578,  579,  579,  580,    0,  579,  581,  580,  583,  581,
      580,  582,  583,    0,    0,  583,  579,    0,  581,    0,
      581,  580,  581,  582,  582,  581,  583,  582,  579,  583,
      582,  579,  579,  580,    0,  579,  581,  580,  583,  581,
      580,  582,  583,    0,  586,  583,  584,  584,  581,  585,
      581,    0,  581,  582,  582,  581,    0,  582,    0,  584,

      582,  585,    0,  584,    0,  585,  584,    0,  585,  586,
        0,  587,    0,    0,  587,    0,  584,  584,    0,  585,
        0,  586,    0,  587,  586,  586,    0,  587,  586,  584,
      587,  585,    0,  584,    0,  585,  584,    0,  585,  586,
        0,  587,    0,    0,  587,    0,    0,  588,    0,    0,
        0,  586,    0,  587,  586,  586,  589,  587,  586,  588,
      587,    0,  588,  588,    0,    0,  588,  589,  589,    0,
        0,  590,  589,  590,  590,  589,    0,  588,    0,    0,
        0,  590,    0,  590,    0,    0,  589,  590,    0,  588,
      590,    0,  588,  588,    0,    0,  588,  589,  589,    0,

      591,  590,  589,  590,  590,  589,  592,    0,    0,    0,
        0,  590,  591,  590,    0,  594,  591,  590,  592,  591,
      590,  593,  592,    0,  593,  592,    0,  594,    0,    0,
      591,  594,    0,  593,  594,    0,  592,  593,    0,    0,
      593,    0,  591,    0,    0,  594,  591,    0,  592,  591,
      595,  593,  592,  595,  593,  592,    0,  594,    0,  596,
        0,  594,  595,  593,  594,    0,  595,  593,    0,  595,
      593,  596,  596,    0,  598,  596,    0,    0,  596,  597,
      595,    0,    0,  595,    0,    0,  598,    0,    0,  596,
      598,  597,  595,  598,  597,  597,  595,    0,  597,  595,

        0,  596,  596,  599,  598,  596,    0,    0,  596,  597,
        0,    0,    0,    0,    0,  599,  598,    0,  599,  599,
      598,  597,  599,  598,  597,  597,    0,  601,  597,    0,
        0,    0,    0,  599,    0,  600,    0,    0,    0,  601,
        0,    0,    0,  601,  602,  599,  601,  600,  599,  599,
        0,  600,  599,  600,  600,    0,  602,  601,    0,  602,
      602,    0,    0,  602,    0,  600,    0,    0,    0,  601,
        0,    0,    0,  601,  602,    0,  601,  600,    0,  603,
        0,  600,    0,  600,  600,    0,  602,    0,    0,  602,
      602,  603,    0,  602,  603,  603,    0,    0,  603,  620,

      620,  620,  620,  620,  620,  620,  620,  620,  620,  603,
      622,  622,  622,  622,  622,  622,  622,  622,  622,  622,
        0,  603,    0,    0,  603,  603,    0,    0,  603,  604,
      604,    0,  604,  604,  604,  604,  604,  604,  604,  604,
        0,    0,    0,    0,    0,    0,    0,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,    0,    0,    0,    0,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,

      604,  604,    0,    0,    0,    0,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,  604,  604,  604,  604,
      604,  604,    0,  604,  604,  604,  604,  604,  604,  604,
      604,  604,  604,  604,  604,    0,  604,  604,  604,  605,
      605,  605,  605,  605,  605,  605,  605,  605,  605,  605,
      605,  605,  605,  605,  605,  605,  606,  606,  606,  606,
      606,  606,  606,  606,  606,  606,  606,  606,  606,  606,
      606,  606,  606,  607,  607,  607,  607,  607,  607,  607,
      607,  607,  607,  607,  607,  607,  607,  607,  607,  607,
      608,  608,  608,  608,  608,  608,  608,  608,  608,  608,

      608,  608,  608,  608,  608,  608,  608,  609,  609,  609,
      609,  609,  609,  609,  609,  609,  609,  609,  609,  609,
      609,  609,  609,  609,  610,  610,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,  610,  610,  610,  610,
      610,  612,  612,  612,  612,  612,  612,  612,  612,  612,
      612,  612,  612,  612,  612,  612,  612,  612,  614,  614,
      614,  614,  614,  614,  614,  614,  614,  614,  614,  614,
      614,  614,  614,  614,  614,  616,  616,  616,  616,  616,
      616,  616,  616,  616,  616,  616,  616,  616,  616,  616,
      616,  616,  617,  617,  617,  617,  617,  617,  617,  617,

      617,  617,  617,  617,  617,  617,  617,  617,  617,  618,
      618,  618,  618,  618,  618,  618,  618,  618,  618,  618,
      618,  618,  618,  618,  618,  618,  619,  619,  619,  619,
      619,  619,  619,  619,  619,  619,  619,  619,  619,  619,
      619,  619,  619,  623,  623,  623,  623,  623,  623,  623,
      623,  623,  623,  623,  623,  623,  623,  623,  623,  623,
      624,  625,  626,    0,    0,    0,    0,    0,    0,    0,
      627,    0,  624,  625,  626,    0,  624,  625,  626,  624,
      625,  626,  627,    0,    0,    0,  627,    0,    0,  627,
      624,  625,  626,    0,  625,    0,    0,    0,    0,    0,

      627,  628,  624,  625,  626,    0,  624,  625,  626,  624,
      625,  626,  627,  628,  629,    0,  627,  628,    0,  627,
      628,    0,  630,    0,    0,    0,  629,    0,    0,    0,
      629,  628,    0,  629,  630,    0,    0,    0,  630,    0,
        0,  630,    0,  628,  629,    0,    0,  628,    0,    0,
      628,    0,  630,  635,    0,    0,  629,    0,  635,    0,
      629,    0,    0,  629,  630,    0,    0,    0,  630,    0,
        0,  630,  631,  631,  631,  631,  631,  631,  631,  631,
      631,  631,  631,  631,  631,  631,  631,  631,  631,  632,
      632,  632,  632,  632,  632,  632,  632,  632,  632,  632,

      632,  632,  632,  632,  632,  632,  633,    0,  635,    0,
        0,    0,    0,  635,    0,    0,    0,  635,    0,    0,
        0,    0,    0,    0,    0,  635,    0,    0,  635,    0,
      635,  636,  636,  636,  636,  636,  636,  636,  636,  636,
      636,  636,  636,  636,  636,  636,  636,  641,  641,  641,
      641,  641,  641,  641,  641,  641,  641,    0,    0,    0,
        0,  633,  637,  637,  637,  637,  637,  637,  637,  637,
      637,  637,  637,  637,  637,  637,  637,  638,  638,  638,
      638,  638,  638,  638,  638,  638,  638,  638,  638,  638,
      638,  638,  638,  638,    0,  698,    0,  698,    0,  633,

      698,  698,  698,  698,  698,  698,  698,  698,    0,  633,
        0,  633,  633,  633,  633,  633,  633,  633,  633,  633,
      633,  633,  633,  633,  633,  633,  633,  633,  634,  640,
      640,  640,  640,  640,  640,  640,  640,  640,  640,  640,
      640,  640,  640,  640,  640,  640,  642,  642,  642,  642,
      642,  642,  642,  642,  642,  642,  642,  642,  642,  642,
      642,  642,  642,  643,  643,  643,  643,  643,  643,  643,
      643,  643,  643,  689,  689,  689,  689,  689,  689,  689,
      689,  689,  689,  634,  644,  644,  644,  644,  644,  644,
      644,  644,  644,  644,  644,  644,  644,  644,  644,  644,

      644,  647,  647,  647,  647,  647,  647,  647,  647,  647,
      647,  647,  647,  647,  647,  647,  647,  647,  700,    0,
      700,  634,    0,  700,  700,  700,  700,  700,  700,  700,
      700,  634,    0,  634,  634,  634,  634,  634,  634,  634,
      634,  634,  634,  634,  634,  634,  634,  634,  634,  634,
      646,  648,  648,  648,  648,  648,  648,  648,  648,  648,
      648,  648,  648,  648,  648,  648,  648,  648,  649,  649,
      649,  649,  649,  649,  649,  649,  649,  649,  649,  649,
      649,  649,  649,  649,  649,  701,  701,  701,  701,  701,
      701,  701,  701,    0,  650,  702,  702,  702,  702,  702,

      702,  702,  702,    0,  650,  646,  650,  650,  650,  650,
      650,  650,  650,  650,  650,  650,  650,  650,  650,  650,
      650,  650,  650,  651,  651,  651,  651,  651,  651,  651,
      651,  651,  651,  651,  651,  651,  651,  651,  651,  651,
      703,    0,  703,  646,    0,  703,  703,  703,  703,  703,
      703,  703,  703,  646,    0,  646,  646,  646,  646,  646,
      646,  646,  646,  646,  646,  646,  646,  646,  646,  646,
      646,  646,  652,  652,  652,  652,  652,  652,  652,  652,
      652,  652,  652,  652,  652,  652,  652,  652,  652,  653,
      653,  653,  653,  653,  653,  653,  653,  653,  653,  653,

      653,  653,  653,  653,  653,  653,  661,  661,  661,  661,
      661,  661,  661,  661,  661,  661,  661,  661,  661,  661,
      661,  661,  661,  662,  662,  662,  662,  662,  662,  662,
      662,  662,  662,  662,  662,  662,  662,  662,  662,  662,
      663,  663,  663,  663,  663,  663,  663,  663,  663,  663,
      663,  663,  663,  663,  663,  663,  663,  664,  664,  664,
      664,  664,  664,  664,  664,  664,  664,  664,  664,  664,
      664,  664,  664,  664,  665,  665,  665,  665,  665,  665,
      665,  665,  665,  665,  665,  665,  665,  665,  665,  665,
      665,  666,  666,  666,  666,  666,  666,  666,  666,  666,

      666,  666,  666,  666,  666,  666,  666,  666,  667,  667,
      667,  667,  667,  667,  667,  667,  667,  667,  667,  667,
      667,  667,  667,  667,  667,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668,  668,  668,
      668,  668,  669,  669,  669,  669,  669,  669,  669,  669,
      669,  669,  669,  669,  669,  669,  669,  669,  669,  670,
      670,  670,  670,  670,  670,  670,  670,  670,  670,  670,
      670,  670,  670,  670,  670,  670,  672,  672,  672,  672,
      672,  672,  672,  672,  672,  672,  672,  672,  672,  672,
      672,  672,  672,  673,  673,  673,  673,  673,  673,  673,

      673,  673,  673,  673,  673,  673,  673,  673,  673,  673,
      679,  679,  679,  679,  679,  679,  679,  679,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  680,  680,  680,
      680,  680,  680,  680,  680,  680,  680,  680,  680,  680,
      680,  680,  680,  680,  681,  683,    0,    0,    0,    0,
      683,  684,  684,  684,  684,  684,  684,  684,  684,  684,
      684,  684,  684,  684,  684,  684,  684,  685,  685,  685,
      685,  685,  685,  685,  685,  685,  685,  685,  685,  685,
      685,  685,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,    0,    0,  681,    0,    0,    0,    0,    0,

      683,    0,    0,    0,    0,  683,    0,    0,    0,  683,
        0,    0,    0,    0,    0,    0,    0,  683,    0,  705,
      683,  705,  683,    0,  705,  705,  705,  705,  705,  705,
      705,  705,  681,  706,  706,  706,  706,  706,  706,  706,
      706,    0,  681,    0,  681,  681,  681,  681,  681,  681,
      681,  681,  681,  681,  681,  681,  681,  681,  681,  681,
      681,  682,  686,  686,  686,  686,  686,  686,  686,  686,
      686,  686,  686,  686,  686,  686,  686,  686,  686,  688,
      688,  688,  688,  688,  688,  688,  688,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  707,  707,  707,  707,

      707,  707,  707,  707,    0,    0,    0,    0,    0,    0,
        0,  682,  690,  690,  690,  690,  690,  690,  690,  690,
      690,  690,  690,  690,  690,  690,  690,  690,  690,  692,
      692,  692,  692,  692,  692,  692,  692,  692,  692,  692,
      692,  692,  692,  692,  692,  692,    0,    0,    0,  682,
      708,  708,  708,  708,  708,  708,  708,  708,    0,  682,
        0,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,  694,  695,
      695,  695,  695,  695,  695,  695,  695,  695,  695,  695,
      695,  695,  695,  695,  695,  695,  696,  696,  696,  696,

      696,  696,  696,  696,  696,  696,  696,  696,  696,  696,
      696,  696,  696,  709,  709,  709,  709,  709,  709,  709,
      709,    0,    0,    0,    0,    0,    0,    0,  694,  697,
      697,  697,  697,  697,  697,  697,  697,  697,  697,  697,
      697,  697,  697,  697,  697,  697,  699,  699,  699,  699,
      699,  699,  699,  699,  704,  704,  704,  704,  704,  704,
      704,  704,    0,    0,    0,  699,  694,    0,    0,    0,
        0,    0,    0,  704,    0,    0,  694,    0,  694,  694,
      694,  694,  694,  694,  694,  694,  694,  694,  694,  694,
      694,  694,  694,  694,  694,  699,    0,    0,    0,    0,

        0,    0,    0,  704,  710,  710,  710,  710,  710,  710,
      710,  710,  711,  711,  711,  711,  711,  711,  711,  711,
      721,  721,  721,  721,  721,  721,  721,  721,  721,  721,
      721,  721,  721,  721,  721,  721,  721,  722,  722,  722,
      722,  722,  722,  722,  722,  722,  722,  722,  722,  722,
      722,  722,  722,  722,  723,  723,  723,  723,  723,  723,
      723,  723,  723,  723,  723,  723,  723,  723,  723,  723,
      723,  724,  724,  724,  724,  724,  724,  724,  724,  724,
      724,  724,  724,  724,  724,  724,  724,  724,  725,  725,
      725,  725,  725,  725,  725,  725,  725,  725,  725,  725,

      725,  725,  725,  725,  725,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  726,
      726,  726,  727,  727,  727,  727,  727,  727,  727,  727,
      727,  727,  727,  727,  727,  727,  727,  727,  727,  728,
      728,  728,  728,  728,  728,  728,  728,  728,  728,  728,
      728,  728,  728,  728,  728,  728,  729,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,  729,
      729,  729,  729,  730,  730,  730,  730,  730,  730,  730,
      730,  730,  730,  730,  730,  730,  730,  730,  730,  730,
      732,  732,  732,  732,  732,  732,  732,  732,  732,  732,

      732,  732,  732,  732,  732,  732,  732,  733,  733,  733,
      733,  733,  733,  733,  733,  733,  733,  733,  733,  733,
      733,  733,  733,  733,  739,  739,  739,  739,  739,  739,
      739,  739,  739,  739,  739,  739,  739,  739,  739,  739,
      739,  740,  740,  740,  740,  740,  740,  740,  740,  740,
      740,  740,  740,  740,  740,  740,  740,  740,  741,  742,
      742,  742,  742,  742,  742,  742,  742,  742,  742,  742,
      742,  742,  742,  742,  742,  742,  743,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  744,  744,  744,  744,  744,  744,  744,

      744,  744,  744,  744,  744,  744,  744,  744,  744,  744,
        0,    0,  869,  869,  869,  869,  869,  869,  869,  869,
        0,  869,  869,  869,  869,  741,  869,  869,  869,    0,
        0,    0,    0,    0,    0,  741,    0,  741,  741,  741,
      741,  741,  741,  741,  741,  741,  741,  741,  741,  741,
      741,  741,  741,  741,  752,  752,  752,  752,  752,  752,
      752,  752,  752,  752,  752,  752,  752,  752,  752,  752,
      752,  753,  753,  753,  753,  753,  753,  753,  753,  753,
      753,  753,  753,  753,  753,  753,  753,  753,  754,  754,
      754,  754,  754,  754,  754,  754,  754,  754,  754,  754,

      754,  754,  754,  754,  754,  755,  755,  755,  755,  755,
      755,  755,  755,  755,  755,  755,  755,  755,  755,  755,
      755,  755,  756,  756,  756,  756,  756,  756,  756,  756,
      756,  756,  756,  756,  756,  756,  756,  756,  756,  757,
      757,  757,  757,  757,  757,  757,  757,  757,  757,  757,
      757,  757,  757,  757,  757,  757,  758,  758,  758,  758,
      758,  758,  758,  758,  758,  758,  758,  758,  758,  758,
      758,  758,  758,  759,  759,  759,  759,  759,  759,  759,
      759,  759,  759,  759,  759,  759,  759,  759,  759,  759,
      760,  760,  760,  760,  760,  760,  760,  760,  760,  760,

      760,  760,  760,  760,  760,  760,  760,  761,  761,  761,
      761,  761,  761,  761,  761,  761,  761,  761,  761,  761,
      761,  761,  761,  761,  763,  763,  763,  763,  763,  763,
      763,  763,  763,  763,  763,  763,  763,  763,  763,  763,
      763,  764,  764,  764,  764,  764,  764,  764,  764,  764,
      764,  764,  764,  764,  764,  764,  764,  764,  770,  770,
      770,  770,  770,  770,  770,  770,  770,  770,  770,  770,
      770,  770,  770,  770,  770,  771,  771,  771,  771,  771,
      771,  771,  771,  771,  771,  771,  771,  771,  771,  771,
      771,  771,  773,  774,  775,    0,    0,    0,    0,    0,

        0,    0,  776,    0,  773,  774,  775,    0,  773,  774,
      775,  773,  774,  775,  776,    0,    0,    0,  776,    0,
        0,  776,  773,  774,  775,    0,    0,    0,    0,    0,
        0,    0,  776,  777,  773,  774,  775,    0,  773,  774,
      775,  773,  774,  775,  776,  777,    0,    0,  776,  777,
        0,  776,  777,  879,  879,  879,  879,  879,  879,  879,
      879,  879,  879,  777,  881,  881,  881,  881,  881,  881,
      881,  881,  881,  881,    0,  777,    0,    0,    0,  777,
        0,    0,  777,  778,  778,  778,  778,  778,  778,  778,
      778,  778,  778,  778,  778,  778,  778,  778,  778,  778,

      779,  779,  779,  779,  779,  779,  779,  779,  779,  779,
      779,  779,  779,  779,  779,  779,  779,  780,  781,  782,
        0,    0,  782,    0,    0,    0,    0,    0,    0,  780,
      781,  782,    0,  780,  781,  782,  780,  781,  782,  783,
        0,  783,    0,    0,    0,    0,    0,  780,  781,  782,
        0,  783,  782,    0,    0,  783,    0,    0,  783,  780,
      781,  782,    0,  780,  781,  782,  780,  781,  782,  783,
      784,  783,    0,    0,    0,  785,    0,    0,  785,  786,
      786,  783,  784,    0,    0,  783,  784,  785,  783,  784,
        0,  785,  786,    0,  785,    0,  786,    0,    0,  786,

      784,    0,    0,    0,    0,  785,    0,    0,  785,  786,
      786,  787,  784,    0,    0,    0,  784,  785,    0,  784,
        0,  785,  786,  787,  785,    0,  786,  787,  787,  786,
      787,  788,  788,  789,    0,    0,    0,    0,    0,    0,
        0,  787,    0,    0,  788,  789,    0,    0,  788,  789,
      789,  788,  789,  787,  790,    0,    0,  787,  787,    0,
      787,  788,  788,  789,    0,    0,  790,    0,    0,    0,
      790,  790,    0,  790,  788,  789,  791,    0,  788,  789,
      789,  788,  789,    0,  790,    0,  792,    0,  791,    0,
        0,    0,  791,  792,    0,  791,  790,    0,  792,    0,

      790,  790,  792,  790,    0,  792,  791,    0,  793,    0,
        0,    0,    0,    0,  794,    0,  792,  794,  791,    0,
      793,  793,  791,  792,  793,  791,  794,  793,  792,  795,
      794,  795,  792,  794,    0,  792,    0,    0,  793,    0,
        0,  795,    0,    0,  794,  795,  796,  794,  795,    0,
      793,  793,    0,    0,  793,    0,  794,  793,  796,  795,
      794,  795,  796,  794,    0,  796,    0,  797,    0,    0,
        0,  795,    0,    0,    0,  795,  796,  798,  795,  797,
      798,    0,  800,  797,  797,    0,  797,  799,  796,  798,
        0,    0,  796,  798,  800,  796,  798,  797,  800,  799,

        0,  800,  799,  799,    0,    0,  799,  798,    0,  797,
      798,    0,  800,  797,  797,    0,  797,  799,    0,  798,
        0,    0,    0,  798,  800,  802,  798,    0,  800,  799,
        0,  800,  799,  799,  801,  803,  799,  802,    0,  802,
      801,  802,    0,    0,  802,    0,  801,  803,    0,    0,
      801,  803,    0,  801,  803,  802,  804,    0,    0,    0,
        0,    0,    0,    0,  801,  803,    0,  802,  804,  802,
      801,  802,  804,  805,  802,  804,  801,  803,    0,    0,
      801,  803,    0,  801,  803,  805,  804,    0,  805,  805,
        0,    0,  805,  806,  806,    0,    0,    0,  804,    0,

        0,    0,  804,  805,    0,  804,  806,    0,    0,  807,
      806,    0,    0,  806,  808,  805,  807,    0,  805,  805,
        0,  807,  805,  806,  806,  807,  808,    0,  807,    0,
      808,  808,    0,  808,    0,    0,  806,    0,  809,  807,
      806,    0,    0,  806,  808,    0,  807,    0,    0,  809,
      809,  807,    0,    0,  809,  807,  808,  809,  807,  810,
      808,  808,    0,  808,    0,    0,  810,    0,  809,    0,
        0,  810,    0,    0,    0,  810,  811,    0,  810,  809,
      809,    0,    0,    0,  809,    0,  811,  809,  811,  810,
        0,  812,  811,    0,    0,  811,  810,    0,    0,    0,

        0,  810,  812,  812,    0,  810,  811,  812,  810,    0,
      812,  813,  814,    0,  813,    0,  811,    0,  811,    0,
        0,  812,  811,  813,  814,  811,    0,  813,  814,  814,
      813,  814,  812,  812,    0,    0,  816,  812,    0,  816,
      812,  813,  814,    0,  813,    0,    0,    0,  816,    0,
        0,  817,  816,  813,  814,  816,    0,  813,  814,  814,
      813,  814,    0,  817,    0,    0,  816,  817,  817,  816,
      817,  818,  819,    0,  819,    0,    0,  818,  816,    0,
        0,  817,  816,  818,  819,  816,    0,  818,  819,    0,
      818,  819,    0,  817,    0,    0,  820,  817,  817,  820,

      817,  818,  819,    0,  819,    0,    0,  818,  820,    0,
        0,  821,  820,  818,  819,  820,  822,  818,  819,    0,
      818,  819,    0,  821,  821,    0,  820,  821,  822,  820,
      821,  822,  822,    0,    0,  822,  823,    0,  820,    0,
        0,  821,  820,    0,    0,  820,  822,    0,  823,    0,
        0,    0,  823,  821,  821,  823,  823,  821,  822,    0,
      821,  822,  822,    0,  824,  822,  823,    0,    0,    0,
        0,  824,    0,    0,    0,    0,  824,    0,  823,  827,
      824,    0,  823,  824,    0,  823,  823,  825,  825,    0,
        0,  827,    0,    0,  824,  827,  826,    0,  827,    0,

      825,  824,    0,  826,  825,    0,  824,  825,  826,  827,
      824,    0,  826,  824,    0,  826,    0,  825,  825,    0,
        0,  827,    0,    0,    0,  827,  826,    0,  827,    0,
      825,  828,  828,  826,  825,    0,  829,  825,  826,    0,
        0,    0,  826,  828,  830,  826,    0,  828,  829,    0,
      828,  830,  829,  832,    0,  829,  830,  829,    0,    0,
      830,  828,  828,  830,    0,  832,  829,    0,    0,  832,
      832,    0,  832,  828,  830,    0,    0,  828,  829,    0,
      828,  830,  829,  832,    0,  829,  830,  829,    0,  831,
      830,  831,    0,  830,  833,  832,    0,    0,    0,  832,

      832,  831,  832,    0,  833,  831,  833,    0,  831,    0,
      833,  834,    0,  833,    0,    0,    0,    0,    0,  831,
        0,  831,    0,  834,  833,    0,    0,  834,    0,    0,
      834,  831,  835,  835,  833,  831,  833,    0,  831,    0,
      833,  834,    0,  833,  835,    0,    0,    0,  835,  836,
        0,  835,    0,  834,    0,    0,    0,  834,    0,    0,
      834,  836,  835,  835,  836,  836,    0,    0,  836,    0,
      837,    0,    0,  837,  835,    0,    0,  837,  835,  836,
      839,  835,  837,  839,    0,  840,  837,    0,    0,  837,
        0,  836,  839,    0,  836,  836,  839,  840,  836,  839,

      837,  840,    0,  837,  840,  842,    0,  837,    0,    0,
      839,    0,  837,  839,    0,  840,  837,  842,    0,  837,
      841,  842,  839,  842,  842,    0,  839,  840,    0,  839,
      844,  840,  841,    0,  840,  842,  841,  841,    0,  841,
      843,    0,  844,    0,    0,    0,  844,  842,    0,  844,
      841,  842,  843,  842,  842,    0,  843,  843,    0,  843,
      844,    0,  841,    0,  845,  845,  841,  841,  845,  841,
      843,    0,  844,    0,    0,    0,  844,  845,    0,  844,
      846,  845,  843,    0,  845,    0,  843,  843,    0,  843,
      848,    0,  846,    0,  845,  845,  846,  846,  845,  846,

      847,    0,  848,    0,    0,    0,  848,  845,    0,  848,
      846,  845,  847,  848,  845,    0,  847,  847,    0,  847,
      848,  849,  846,    0,  849,    0,  846,  846,    0,  846,
      847,    0,  848,  849,    0,    0,  848,  849,    0,  848,
      849,  850,  847,  848,    0,  850,  847,  847,    0,  847,
      851,  849,    0,  850,  849,    0,    0,  850,    0,    0,
      850,    0,  851,  849,    0,    0,  851,  849,    0,  851,
      849,  850,  852,    0,  852,  850,    0,    0,    0,    0,
      851,  853,  854,  850,  852,  854,    0,  850,  852,    0,
      850,  852,  851,  853,  854,    0,  851,  853,  854,  851,

      853,  854,  852,    0,  852,    0,    0,    0,    0,  855,
      855,  853,  854,    0,  852,  854,    0,    0,  852,    0,
        0,  852,  855,  853,  854,    0,  855,  853,  854,  855,
      853,  854,  856,    0,  857,  856,    0,    0,    0,  855,
      855,    0,    0,    0,  856,    0,  857,    0,  856,    0,
      857,  856,  855,  857,    0,    0,  855,    0,    0,  855,
        0,    0,  856,    0,  857,  856,  933,  933,  933,  933,
      933,  933,  933,  933,  856,    0,  857,    0,  856,    0,
      857,  856,    0,  857,  861,  861,  861,  861,  861,  861,
      861,  861,  861,  861,  861,  861,  861,  861,  861,  861,

      861,  862,  862,  862,  862,  862,  862,  862,  862,  862,
      862,  862,  862,  862,  862,  862,  862,  862,  863,  863,
      863,  863,  863,  863,  863,  863,  863,  863,  863,  863,
      863,  863,  863,  863,  863,  864,  864,  864,  864,  864,
      864,  864,  864,  864,  864,  864,  864,  864,  864,  864,
      864,  864,  865,  865,  865,  865,  865,  865,  865,  865,
      865,  865,  865,  865,  865,  865,  865,  865,  865,  866,
      866,  866,  866,  866,  866,  866,  866,  866,  866,  866,
      866,  866,  866,  866,  866,  866,  867,  867,  867,  867,
      867,  867,  867,  867,  867,  867,  867,  867,  867,  867,

      867,  867,  867,  870,  870,  870,  870,  870,  870,  870,
      870,  870,  870,  870,  870,  870,  870,  870,  870,  870,
      871,  871,  871,  871,  871,  871,  871,  871,  871,  871,
      871,  871,  871,  871,  871,  871,  871,  872,  872,  872,
      872,  872,  872,  872,  872,  872,  872,  872,  872,  872,
      872,  872,  872,  872,  873,  873,  873,  873,  873,  873,
      873,  873,  873,  873,  873,  873,  873,  873,  873,  873,
      873,  875,  875,  875,  875,  875,  875,  875,  875,  875,
      875,  875,  875,  875,  875,  875,  875,  875,  876,  876,
      876,  876,  876,  876,  876,  876,  876,  876,  876,  876,

      876,  876,  876,  876,  876,  877,  877,  877,  877,  877,
      877,  877,  877,  877,  877,  877,  877,  877,  877,  877,
      877,  877,  878,  878,  878,  878,  878,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  878,  882,
      882,  882,  882,  882,  882,  882,  882,  882,  882,  882,
      882,  882,  882,  882,  882,  882,  889,  889,  889,  889,
      889,  889,  889,  889,  889,  889,  889,  889,  889,  889,
      889,  889,  889,  890,  890,  890,  890,  890,  890,  890,
      890,  890,  890,  890,  890,  890,  890,  890,  890,  890,
      891,  891,  891,  891,  891,  891,  891,  891,  891,  891,

      891,  891,  891,  891,  891,  891,  891,  892,  892,  892,
      892,  892,  892,  892,  892,  892,  892,  892,  892,  892,
      892,  892,  892,  892,  893,  893,  893,  893,  893,  893,
      893,  893,  893,  893,  893,  893,  893,  893,  893,  893,
      893,  894,  894,  894,  894,  894,  894,  894,  894,  894,
      894,  894,  894,  894,  894,  894,  894,  894,  895,  895,
      895,  895,  895,  895,  895,  895,  895,  895,  895,  895,
      895,  895,  895,  895,  895,  896,  896,  896,  896,  896,
      896,  896,  896,  896,  896,  896,  896,  896,  896,  896,
      896,  896,  897,  897,  897,  897,  897,  897,  897,  897,

      897,  897,  897,  897,  897,  897,  897,  897,  897,  898,
      898,  898,  898,  898,  898,  898,  898,  898,  898,  898,
      898,  898,  898,  898,  898,  898,  900,  900,  900,  900,
      900,  900,  900,  900,  900,  900,  900,  900,  900,  900,
      900,  900,  900,  901,  901,  901,  901,  901,  901,  901,
      901,  901,  901,  901,  901,  901,  901,  901,  901,  901,
      902,  903,  904,  934,  934,  934,  934,  934,  934,  934,
      934,    0,  902,  903,  904,    0,  902,  903,  904,  902,
      903,  904,  935,  935,  935,  935,  935,  935,  935,  935,
      902,  903,  904,  902,  936,  936,  936,  936,  936,  936,

      936,  936,  902,  903,  904,    0,  902,  903,  904,  902,
      903,  904,  905,  906,  906,  906,  906,  906,  906,  906,
      906,  906,  906,  906,  906,  906,  906,  906,  906,  906,
      908,  908,  908,  908,  908,  908,  908,  908,  908,  908,
      908,  908,  908,  908,  908,  908,  908,  909,  909,  909,
      909,  909,  909,  909,  909,  909,  909,  909,  909,  909,
      909,  909,  909,  909,    0,    0,    0,  905,  910,  910,
      910,  910,  910,  910,  910,  910,  910,  910,  910,  910,
      910,  910,  910,  910,  910,  911,  911,  911,  911,  911,
      911,  911,  911,  911,  911,  911,  911,  911,  911,  911,

      911,  911,    0,    0,    0,  905,  937,  937,  937,  937,
      937,  937,  937,  937,    0,  905,    0,  905,  905,  905,
      905,  905,  905,  905,  905,  905,  905,  905,  905,  905,
      905,  905,  905,  905,  912,  912,  912,  912,  912,  912,
      912,  912,  912,  912,  912,  912,  912,  912,  912,  912,
      912,  913,  913,  913,  913,  913,  913,  913,  913,  913,
      913,  913,  913,  913,  913,  913,  913,  913,  914,  914,
      914,  914,  914,  914,  914,  914,  914,  914,  914,  914,
      914,  914,  914,  914,  914,  920,  920,  920,  920,  920,
      920,  920,  920,  920,  920,  920,  920,  920,  920,  920,

      920,  920,  921,  921,  921,  921,  921,  921,  921,  921,
      921,  921,  921,  921,  921,  921,  921,  921,  921,  923,
      924,  924,  924,  924,  924,  924,  924,  924,  924,  924,
      924,  924,  924,  924,  924,  924,  924,  926,  926,  926,
      926,  926,  926,  926,  926,  926,  926,  926,  926,  926,
      926,  926,  926,  926,  938,  938,  938,  938,  938,  938,
      938,  938,    0,    0,    0,    0,    0,    0,    0,  923,
      927,  927,  927,  927,  927,  927,  927,  927,  927,  927,
      927,  927,  927,  927,  927,  927,  927,  928,  928,  928,
      928,  928,  928,  928,  928,  928,  928,  928,  928,  928,

      928,  928,  928,  928,    0,    0,    0,  923,  939,  939,
      939,  939,  939,  939,  939,  939,    0,  923,    0,  923,
      923,  923,  923,  923,  923,  923,  923,  923,  923,  923,
      923,  923,  923,  923,  923,  923,  929,  929,  929,  929,
      929,  929,  929,  929,  929,  929,  929,  929,  929,  929,
      929,  929,  929,  930,  930,  930,  930,  930,  930,  930,
      930,  930,  930,  930,  930,  930,  930,  930,  930,  930,
      931,  931,  931,  931,  931,  931,  931,  931,  931,  931,
      931,  931,  931,  931,  931,  931,  931,  932,  932,  932,
      932,  932,  932,  932,  932,  932,  932,  932,  932,  932,

      932,  932,  932,  932,  940,  940,  940,  940,  940,  940,
      940,  940,  946,  946,  946,  946,  946,  946,  946,  946,
      946,  946,  946,  946,  946,  946,  946,  946,  946,  947,
      947,  947,  947,  947,  947,  947,  947,  947,  947,  947,
      947,  947,  947,  947,  947,  947,  954,  954,  954,  954,
      954,  954,  954,  954,  954,  954,  954,  954,  954,  954,
      954,  954,  954,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  955,  955,  955,  955,  955,  955,  955,  955,
      957,  958,  959,    0,    0,    0,    0,    0,    0,    0,
      960,    0,  957,  958,  959,    0,  957,  958,  959,  957,

      958,  959,  960,    0,    0,    0,  960,    0,    0,  960,
      957,  958,  959,    0,    0,    0,    0,    0,    0,    0,
      960,  961,  957,  958,  959,    0,  957,  958,  959,  957,
      958,  959,  960,  961,  962,    0,  960,  961,  961,  960,
      961,    0,  964,    0,    0,    0,  962,    0,    0,  962,
      962,  961,    0,  962,  964,    0,    0,    0,  964,  963,
        0,  964,    0,  961,  962,    0,  963,  961,  961,    0,
      961,  963,  964,  965,  965,  963,  962,    0,  963,  962,
      962,    0,    0,  962,  964,    0,  965,    0,  964,  963,
      965,  964,    0,  965,  967,  966,  963,    0,    0,    0,

        0,  963,    0,  965,  965,  963,  967,  966,  963,    0,
      967,  966,    0,  967,  966,  968,  965,  966,    0,    0,
      965,    0,    0,  965,  967,  966,    0,  968,    0,    0,
      970,  968,    0,  970,  968,    0,  967,  966,    0,  969,
      967,  966,  970,  967,  966,  968,  970,  966,    0,  970,
        0,  969,    0,    0,  969,  969,    0,  968,  969,  971,
      970,  968,    0,  970,  968,    0,    0,    0,    0,  969,
        0,  971,  970,    0,  973,  971,  970,    0,  971,  970,
      972,  969,    0,    0,  969,  969,  973,    0,  969,  971,
      973,    0,  972,  973,    0,  972,  972,    0,    0,  972,

        0,  971,  974,    0,  973,  971,    0,    0,  971,    0,
      972,    0,  975,    0,  974,    0,  973,    0,  974,    0,
      973,  974,  972,  973,  975,  972,  972,  977,  975,  972,
        0,  975,  974,  976,    0,    0,    0,    0,  976,  977,
      975,    0,  975,  977,  974,  976,  977,    0,  974,  976,
        0,  974,  976,    0,  975,  978,    0,  977,  975,    0,
        0,  975,    0,  976,    0,  979,    0,  978,  976,  977,
        0,  978,    0,  977,  978,  976,  977,  979,    0,  976,
      980,  979,  976,    0,  979,  978,  981,    0,    0,  981,
        0,    0,  980,    0,    0,  979,  980,  978,  981,  980,

        0,  978,  981,    0,  978,  981,    0,  979,    0,    0,
      980,  979,    0,    0,  979,  982,  981,    0,  982,  981,
        0,  983,  980,    0,    0,    0,  980,  982,  981,  980,
      984,  982,  981,  983,  982,  981,    0,  983,    0,    0,
      983,    0,  984,    0,    0,  982,  984,    0,  982,  984,
      986,  983,    0,    0,    0,    0,    0,  982,  985,  985,
      984,  982,  986,  983,  982,  987,  986,  983,    0,  986,
      983,  985,  984,    0,  990,  985,  984,  987,  985,  984,
      986,  987,    0,    0,  987,    0,  990,    0,  985,  985,
      990,    0,  986,  990,  989,  987,  986,    0,    0,  986,

        0,  985,    0,    0,  990,  985,  989,  987,  985,  989,
      989,  987,    0,  989,  987,  991,  990,    0,  991,    0,
      990,    0,    0,  990,  989,  992,    0,  991,    0,    0,
      993,  991,    0,    0,  991,  994,  989,  992,    0,  989,
      989,  992,  993,  989,  992,  991,  993,  994,  991,  993,
      995,  994,  994,    0,  994,  992,    0,  991,    0,    0,
      993,  991,  995,    0,  991,  994,  995,  992,    0,  995,
        0,  992,  993,    0,  992,  996,  993,  994,    0,  993,
      995,  994,  994,    0,  994,  997,    0,  996,    0,    0,
      998,  996,  995,    0,  996,    0,  995,  997,  997,  995,

        0,  997,  998,    0,  997,  996,  998,  999,    0,  998,
        0,  998,    0,    0,    0,  997,    0,  996,    0,  999,
      998,  996,  999,  999,  996,    0,  999,  997,  997,    0,
        0,  997,  998,    0,  997, 1000,  998,  999,    0,  998,
        0,  998,    0, 1001,    0, 1002, 1001, 1000,    0,  999,
        0, 1000,  999,  999, 1000, 1001,  999, 1002,    0, 1001,
        0, 1002, 1001,    0, 1002, 1000,    0,    0,    0,    0,
        0,    0,    0, 1001, 1004, 1002, 1001, 1000,    0,    0,
        0, 1000,    0, 1003, 1000, 1001, 1004, 1002,    0, 1001,
     1004, 1002, 1001, 1004, 1002, 1003,    0,    0, 1005, 1003,

     1003, 1005, 1003, 1006, 1004,    0, 1006,    0,    0,    0,
     1005,    0,    0, 1003, 1005, 1006, 1004, 1005,    0, 1006,
     1004,    0, 1006, 1004,    0, 1003,    0,    0, 1005, 1003,
     1003, 1005, 1003, 1006,    0,    0, 1006,    0,    0, 1007,
     1005, 1007,    0,    0, 1005, 1006,    0, 1005, 1008, 1006,
        0, 1007, 1006, 1009, 1009, 1007,    0,    0, 1007,    0,
     1008,    0,    0,    0, 1008, 1008, 1009, 1008,    0, 1007,
     1009, 1007,    0, 1009,    0,    0,    0,    0, 1008,    0,
        0, 1007,    0, 1009, 1009, 1007, 1010,    0, 1007,    0,
     1008,    0, 1011, 1011, 1008, 1008, 1009, 1008, 1010,    0,

     1009, 1010, 1010, 1009, 1011, 1010,    0,    0, 1011,    0,
        0, 1011,    0,    0,    0,    0, 1010, 1016,    0, 1016,
        0,    0, 1011, 1011,    0,    0,    0, 1017, 1010, 1016,
        0, 1010, 1010, 1016, 1011, 1010, 1016,    0, 1011, 1017,
        0, 1011, 1018, 1017, 1017,    0, 1017, 1016,    0, 1016,
        0,    0, 1019,    0, 1018,    0,    0, 1017, 1018, 1016,
        0, 1018,    0, 1016, 1019,    0, 1016, 1019, 1019, 1017,
        0, 1019, 1018, 1017, 1017,    0, 1017, 1020,    0,    0,
        0,    0, 1019, 1021, 1018, 1021,    0,    0, 1018, 1020,
        0, 1018, 1022, 1020, 1019, 1021, 1020, 1019, 1019, 1021,

        0, 1019, 1021,    0, 1022, 1023,    0, 1020, 1022,    0,
        0, 1022,    0, 1021,    0, 1021,    0, 1023,    0, 1020,
        0, 1023, 1022, 1020, 1023, 1021, 1020, 1025,    0, 1021,
        0,    0, 1021,    0, 1022, 1023, 1024, 1024, 1022, 1025,
        0, 1022, 1025, 1025,    0,    0, 1025, 1023,    0, 1024,
        0, 1023, 1026, 1024, 1023,    0, 1024, 1025, 1027,    0,
        0,    0,    0,    0, 1026, 1026, 1024, 1024, 1026, 1025,
     1027, 1026, 1025, 1025, 1027,    0, 1025, 1027,    0, 1024,
     1028,    0, 1026, 1024,    0,    0, 1024,    0, 1027,    0,
     1029,    0, 1028,    0, 1026, 1026, 1028,    0, 1026, 1028,

     1027, 1026, 1029,    0, 1027, 1030, 1029, 1027, 1030, 1029,
     1028, 1031,    0,    0,    0,    0,    0, 1030,    0,    0,
     1029, 1030, 1028, 1031, 1030,    0, 1028, 1031,    0, 1028,
     1031,    0, 1029, 1032,    0, 1030, 1029,    0, 1030, 1029,
        0, 1031,    0, 1033, 1032, 1032,    0, 1030,    0, 1032,
        0, 1030, 1032, 1031, 1030, 1033,    0, 1031,    0, 1033,
     1031,    0, 1033, 1032,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1033, 1032, 1032,    0,    0,    0, 1032,
        0,    0, 1032,    0,    0, 1033,    0,    0,    0, 1033,
        0,    0, 1033, 1043, 1043, 1043, 1043, 1043, 1043, 1043,

     1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043, 1043,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1044, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1046, 1046, 1046, 1046, 1046, 1046,
     1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046, 1046,
     1046, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1047, 1047, 1047, 1047, 1047, 1047, 1048, 1048,
     1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
     1048, 1048, 1048, 1048, 1048, 1049, 1049, 1049, 1049, 1049,

     1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,
     1049, 1049, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050,
     1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1050, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052, 1052, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
     1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054, 1054,
     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055, 1055,
     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1061, 1061, 1061,

     1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061, 1061,
     1061, 1061, 1061, 1061, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062, 1062,
     1062, 1063,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1063,    0,    0,    0, 1063,    0,    0,
     1063,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0, 1063,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0, 1063,    0,    0,    0, 1063,    0,    0,
     1063, 1065, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066,
     1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1066, 1067,

     1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1067, 1067, 1067, 1068, 1068, 1068, 1068,
     1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1068, 1068,    0,    0,    0, 1065, 1072, 1072, 1072,
     1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072, 1072,
     1072, 1072, 1072, 1072, 1073, 1073, 1073, 1073, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
     1073,    0,    0,    0, 1065,    0,    0,    0,    0,    0,
        0,    0,    0,    0, 1065,    0, 1065, 1065, 1065, 1065,
     1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065, 1065,

     1065, 1065, 1065, 1071, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074, 1077, 1077,    0,    0,    0, 1078,    0,    0,    0,
        0, 1079,    0, 1077,    0,    0,    0, 1077, 1078,    0,
     1077,    0, 1078, 1079,    0, 1078, 1080, 1079,    0, 1079,
     1079, 1077, 1077, 1071,    0,    0, 1078,    0, 1080,    0,
        0, 1079, 1080, 1077,    0, 1080,    0, 1077, 1078,    0,
     1077,    0, 1078, 1079,    0, 1078, 1080, 1079,    0, 1079,
     1079,    0,    0,    0,    0,    0,    0,    0, 1080,    0,
        0, 1071, 1080,    0,    0, 1080,    0,    0,    0,    0,

        0, 1071,    0, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071, 1071,
     1081, 1082, 1083, 1083,    0,    0,    0,    0,    0,    0,
        0,    0, 1081, 1082, 1083, 1082, 1081, 1082, 1083, 1081,
     1082, 1083, 1084,    0,    0,    0,    0,    0,    0, 1084,
     1081, 1082, 1083, 1083, 1084,    0, 1086,    0, 1084,    0,
        0, 1084, 1081, 1082, 1083, 1082, 1081, 1082, 1083, 1081,
     1082, 1083, 1084, 1085,    0,    0,    0,    0,    0, 1084,
        0, 1086, 1087, 1088, 1084, 1085,    0,    0, 1084, 1085,
        0, 1084, 1085, 1086, 1087, 1088,    0, 1086, 1087, 1088,

     1086, 1087, 1088, 1085,    0,    0,    0,    0,    0,    0,
        0, 1086, 1087, 1088,    0, 1085,    0,    0,    0, 1085,
        0,    0, 1085, 1086, 1087, 1088,    0, 1086, 1087, 1088,
     1086, 1087, 1088, 1089, 1089, 1090,    0,    0,    0,    0,
        0, 1091,    0,    0, 1091, 1089,    0, 1090,    0, 1089,
     1092, 1090, 1089, 1091, 1090,    0,    0, 1091,    0, 1092,
     1091,    0, 1092, 1089, 1089, 1090, 1092,    0,    0, 1092,
        0, 1091,    0,    0, 1091, 1089,    0, 1090,    0, 1089,
     1092, 1090, 1089, 1091, 1090, 1093, 1096, 1091,    0, 1092,
     1091, 1094, 1092,    0,    0,    0, 1092, 1093, 1096, 1092,

     1093, 1093, 1096, 1094, 1093, 1096, 1094, 1094,    0,    0,
     1094,    0,    0,    0,    0, 1093, 1096,    0,    0,    0,
        0, 1094,    0,    0,    0,    0, 1095, 1093, 1096,    0,
     1093, 1093, 1096, 1094, 1093, 1096, 1094, 1094, 1095, 1097,
     1094, 1098, 1095, 1095,    0, 1095, 1099, 1099,    0,    0,
        0, 1097,    0, 1098,    0, 1097, 1095, 1098, 1097, 1099,
     1098,    0,    0, 1099,    0,    0, 1099,    0, 1095, 1097,
        0, 1098, 1095, 1095,    0, 1095, 1099, 1099,    0, 1100,
        0, 1097,    0, 1098,    0, 1097,    0, 1098, 1097, 1099,
     1098, 1100, 1101, 1099, 1100, 1100, 1099,    0, 1100,    0,

        0, 1102,    0,    0, 1101,    0,    0,    0, 1101, 1100,
        0, 1101,    0, 1102, 1103, 1103,    0, 1102,    0,    0,
     1102, 1100, 1101, 1102, 1100, 1100, 1103,    0, 1100,    0,
     1103, 1102,    0, 1103, 1101,    0,    0,    0, 1101,    0,
        0, 1101,    0, 1102, 1103, 1103, 1104, 1102, 1104,    0,
     1102,    0, 1105, 1102, 1106, 1105, 1103,    0, 1104,    0,
     1103,    0, 1104, 1103, 1105, 1104, 1106, 1107, 1105, 1106,
     1106, 1105,    0, 1106,    0,    0, 1104,    0, 1104, 1107,
        0,    0, 1105, 1107, 1106, 1105, 1107,    0, 1104,    0,
        0,    0, 1104,    0, 1105, 1104, 1106, 1107, 1105, 1106,

     1106, 1105, 1108, 1106,    0,    0,    0, 1109, 1110, 1107,
        0,    0,    0, 1107, 1108,    0, 1107, 1111, 1108, 1109,
     1110, 1108,    0, 1109, 1110, 1110, 1109, 1110,    0, 1111,
        0,    0, 1108, 1111,    0,    0, 1111, 1109, 1110,    0,
        0,    0,    0,    0, 1108,    0,    0, 1111, 1108, 1109,
     1110, 1108, 1117, 1109, 1110, 1110, 1109, 1110, 1112, 1111,
     1118, 1112,    0, 1111, 1117,    0, 1111,    0, 1117,    0,
     1112, 1117, 1118, 1119, 1112,    0, 1118, 1112,    0, 1118,
        0,    0, 1117,    0,    0, 1119,    0,    0, 1112, 1119,
     1118, 1112, 1119,    0, 1117,    0,    0,    0, 1117,    0,

     1112, 1117, 1118, 1119, 1112, 1120, 1118, 1112,    0, 1118,
        0, 1121, 1120, 1122,    0, 1119,    0, 1120, 1122, 1119,
        0, 1120, 1119, 1121, 1120, 1122,    0, 1121,    0, 1122,
     1121,    0, 1122, 1123,    0, 1120,    0,    0,    0,    0,
        0, 1121, 1120, 1122,    0, 1123,    0, 1120, 1122, 1123,
        0, 1120, 1123, 1121, 1120, 1122,    0, 1121, 1124, 1122,
     1121,    0, 1122, 1123, 1125,    0,    0,    0,    0,    0,
     1124,    0,    0, 1124, 1124, 1123, 1125, 1124,    0, 1123,
     1125,    0, 1123, 1125,    0,    0, 1126,    0, 1124,    0,
        0,    0,    0,    0, 1125,    0, 1127,    0, 1126,    0,

     1124,    0, 1126, 1124, 1124, 1126, 1125, 1124, 1127,    0,
     1125, 1127, 1127, 1125,    0, 1127, 1126, 1128, 1129,    0,
        0, 1129,    0,    0,    0,    0, 1127,    0, 1126, 1128,
     1129,    0, 1126, 1128, 1129, 1126, 1128, 1129, 1127,    0,
        0, 1127, 1127,    0,    0, 1127,    0, 1128, 1129,    0,
        0, 1129,    0,    0,    0,    0,    0,    0,    0, 1128,
     1129,    0,    0, 1128, 1129,    0, 1128, 1129, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1135, 1136, 1136, 1136, 1136, 1136,
     1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136, 1136,

     1136, 1136, 1138, 1139, 1139, 1138,    0,    0, 1140,    0,
        0,    0,    0,    0, 1138, 1139,    0,    0, 1138, 1139,
     1140, 1138, 1139,    0, 1140,    0,    0, 1140,    0,    0,
        0,    0, 1138, 1139, 1139, 1138,    0,    0, 1140,    0,
        0,    0,    0, 1141, 1138, 1139, 1141,    0, 1138, 1139,
     1140, 1138, 1139, 1142, 1140, 1141, 1142, 1140, 1143, 1141,
        0,    0, 1141,    0,    0, 1142,    0, 1144, 1144, 1142,
     1143,    0, 1142, 1141, 1143, 1143, 1141, 1143,    0,    0,
     1144,    0,    0, 1142, 1144, 1141, 1142, 1144, 1143, 1141,
        0,    0, 1141,    0,    0, 1142, 1146, 1144, 1144, 1142,

     1143,    0, 1142,    0, 1143, 1143,    0, 1143, 1146, 1146,
     1144,    0, 1146, 1148, 1144, 1146,    0, 1144, 1147, 1147,
        0,    0,    0,    0,    0, 1148, 1146, 1149, 1149, 1148,
     1147,    0, 1148,    0, 1147,    0,    0, 1147, 1146, 1146,
     1149,    0, 1146, 1148, 1149, 1146,    0, 1149, 1147, 1147,
        0,    0,    0,    0,    0, 1148, 1150, 1149, 1149, 1148,
     1147,    0, 1148, 1150, 1147,    0,    0, 1147, 1150, 1152,
     1149,    0, 1150,    0, 1149, 1150,    0, 1149, 1151, 1151,
        0, 1152,    0,    0, 1153, 1152, 1150,    0, 1152,    0,
     1151,    0,    0, 1150, 1151,    0, 1153, 1151, 1150, 1152,

     1153,    0, 1150, 1153,    0, 1150,    0,    0, 1151, 1151,
        0, 1152,    0, 1154, 1153, 1152,    0,    0, 1152, 1155,
     1151, 1155,    0, 1154, 1151, 1154, 1153, 1151, 1156, 1154,
     1153, 1155, 1154, 1153,    0, 1155,    0, 1156, 1155,    0,
     1156,    0,    0, 1154, 1156,    0,    0, 1156,    0, 1155,
        0, 1155,    0, 1154,    0, 1154,    0, 1157, 1156, 1154,
        0, 1155, 1154,    0,    0, 1155, 1158, 1156, 1155, 1157,
     1156,    0, 1159, 1157, 1156, 1157, 1157, 1156, 1158,    0,
        0, 1160, 1158,    0, 1159, 1158,    0, 1157, 1159,    0,
        0, 1159, 1160, 1160,    0,    0, 1158, 1160,    0, 1157,

     1160, 1161, 1159, 1157,    0, 1157, 1157,    0, 1158,    0,
        0, 1160, 1158, 1161, 1159, 1158, 1162, 1161, 1159,    0,
     1161, 1159, 1160, 1160,    0, 1163, 1168, 1160, 1162, 1162,
     1160, 1161, 1162,    0,    0, 1162,    0, 1163, 1168,    0,
        0, 1163, 1168, 1161, 1163, 1168, 1162, 1161,    0,    0,
     1161,    0,    0, 1167, 1167, 1163, 1168,    0, 1162, 1162,
        0,    0, 1162,    0,    0, 1162, 1167, 1163, 1168, 1169,
     1167, 1163, 1168, 1167, 1163, 1168,    0,    0, 1170,    0,
        0, 1169,    0, 1167, 1167, 1169,    0,    0, 1169,    0,
     1170,    0,    0, 1171, 1170,    0, 1167, 1170,    0, 1169,

     1167,    0,    0, 1167,    0, 1171,    0,    0, 1170, 1171,
     1171, 1169, 1171, 1172, 1173, 1169, 1172, 1173, 1169,    0,
     1170,    0, 1174, 1171, 1170, 1172, 1173, 1170,    0, 1172,
     1173,    0, 1172, 1173, 1174, 1171,    0,    0, 1174, 1171,
     1171, 1174, 1171, 1172, 1173,    0, 1172, 1173,    0,    0,
        0,    0, 1174, 1176,    0, 1172, 1173,    0, 1177, 1172,
     1173,    0, 1172, 1173, 1174, 1176, 1178,    0, 1174, 1176,
     1177, 1174, 1176,    0, 1177, 1177,    0, 1177, 1178,    0,
        0,    0, 1178, 1176,    0, 1178,    0,    0, 1177,    0,
        0,    0,    0,    0, 1179, 1176, 1178,    0,    0, 1176,

     1177,    0, 1176,    0, 1177, 1177, 1179, 1177, 1178, 1180,
     1179, 1181, 1178, 1179,    0, 1178,    0,    0,    0, 1182,
        0, 1180,    0, 1181, 1179, 1180,    0, 1181, 1180,    0,
     1181, 1182,    0,    0,    0, 1182, 1179,    0, 1182, 1180,
     1179, 1181,    0, 1179,    0,    0,    0, 1184,    0, 1182,
        0, 1180,    0, 1181,    0, 1180,    0, 1181, 1180, 1184,
     1181, 1182, 1185, 1184,    0, 1182, 1184,    0, 1182,    0,
        0,    0, 1186,    0, 1185,    0,    0, 1184, 1185, 1185,
        0, 1185, 1186,    0, 1186,    0,    0,    0, 1186, 1184,
        0, 1186, 1185, 1184, 1187, 1187, 1184,    0,    0,    0,

        0,    0, 1186,    0, 1185,    0, 1187, 1189, 1185, 1185,
     1187, 1185, 1186, 1187, 1186, 1190, 1188,    0, 1186, 1189,
        0, 1186, 1188, 1189, 1187, 1187, 1189, 1190, 1188,    0,
        0, 1190, 1188,    0, 1190, 1188, 1187, 1189,    0,    0,
     1187,    0,    0, 1187,    0, 1190, 1188, 1191,    0, 1189,
     1191,    0, 1188, 1189,    0, 1192, 1189, 1190, 1188, 1191,
        0, 1190, 1188, 1191, 1190, 1188, 1191, 1192, 1192,    0,
        0, 1192,    0,    0, 1192, 1193, 1193, 1191,    0,    0,
     1191,    0,    0,    0,    0, 1192,    0,    0, 1193, 1191,
        0, 1194, 1193, 1191,    0, 1193, 1191, 1192, 1192,    0,

     1195, 1192,    0, 1194, 1192, 1193, 1193, 1194, 1199,    0,
     1194,    0, 1195,    0,    0, 1195, 1195,    0, 1193, 1195,
     1199, 1194, 1193, 1199, 1199, 1193,    0, 1199,    0,    0,
     1195,    0, 1200, 1194,    0,    0,    0, 1194, 1199,    0,
     1194,    0, 1195,    0, 1200, 1195, 1195, 1201, 1200, 1195,
     1199, 1200,    0, 1199, 1199,    0, 1202, 1199, 1202, 1201,
        0,    0, 1200, 1201, 1203,    0, 1201,    0, 1202,    0,
        0,    0, 1202,    0, 1200, 1202, 1203, 1201, 1200,    0,
     1203, 1200,    0, 1203,    0, 1204, 1202,    0, 1202, 1201,
        0,    0,    0, 1201, 1203, 1205, 1201, 1204, 1202,    0,

        0, 1204, 1202,    0, 1204, 1202, 1203, 1205,    0,    0,
     1203, 1205,    0, 1203, 1205, 1204, 1207, 1207,    0,    0,
        0,    0,    0,    0, 1209, 1205, 1208, 1204, 1207,    0,
        0, 1204, 1207, 1208, 1204, 1207, 1209, 1205, 1208,    0,
     1209, 1205, 1208, 1209, 1205, 1208, 1207, 1207, 1210,    0,
        0,    0,    0,    0, 1209,    0, 1208,    0, 1207,    0,
     1210,    0, 1207, 1208, 1210, 1207, 1209, 1210, 1208,    0,
     1209,    0, 1208, 1209,    0, 1208, 1211, 1212, 1210, 1211,
        0,    0,    0,    0,    0,    0, 1213,    0, 1211, 1212,
     1210,    0, 1211, 1212, 1210, 1211, 1212, 1210, 1213, 1212,

        0, 1215, 1213,    0, 1213, 1213, 1211, 1212,    0, 1211,
        0,    0,    0, 1215,    0,    0, 1213, 1215, 1211, 1212,
     1215, 1214, 1211, 1212,    0, 1211, 1212,    0, 1213, 1212,
     1216, 1215, 1213, 1214, 1213, 1213, 1214, 1214,    0,    0,
     1214,    0, 1216, 1215,    0, 1217, 1216, 1215,    0, 1216,
     1215, 1214,    0,    0,    0,    0,    0, 1217,    0,    0,
     1216, 1217, 1218, 1214, 1217,    0, 1214, 1214,    0,    0,
     1214,    0, 1216,    0, 1218, 1217, 1216, 1221, 1218, 1216,
        0, 1218, 1220, 1220,    0,    0,    0, 1217,    0, 1221,
     1221, 1217, 1218, 1221, 1217, 1220, 1221,    0, 1222, 1220,

        0,    0, 1220,    0, 1218,    0,    0, 1221, 1218,    0,
     1222, 1218, 1220, 1220, 1222, 1223,    0, 1222,    0, 1221,
     1221,    0,    0, 1221,    0, 1220, 1221, 1223, 1222, 1220,
     1224, 1223, 1220,    0, 1223,    0, 1225,    0,    0,    0,
     1222,    0, 1224,    0, 1222, 1223, 1224, 1222, 1225, 1224,
        0, 1226, 1225,    0,    0, 1225,    0, 1223,    0,    0,
     1224, 1223,    0, 1226, 1223,    0, 1225, 1226,    0,    0,
     1226, 1228, 1224,    0,    0,    0, 1224,    0, 1225, 1224,
     1229, 1226, 1225, 1228,    0, 1225, 1230, 1228, 1228,    0,
     1228,    0, 1229, 1226,    0, 1231, 1229, 1226, 1230, 1229,

     1226, 1228, 1230,    0,    0, 1230,    0, 1231,    0,    0,
     1229, 1231,    0, 1228, 1231, 1233, 1230, 1228, 1228,    0,
     1228,    0, 1229,    0, 1234, 1231, 1229, 1233, 1230, 1229,
        0, 1233, 1230,    0, 1233, 1230, 1234, 1231,    0,    0,
     1234, 1231,    0, 1234, 1231, 1233,    0,    0,    0,    0,
        0,    0,    0,    0, 1234,    0,    0, 1233,    0,    0,
        0, 1233,    0,    0, 1233,    0, 1234,    0,    0,    0,
     1234,    0,    0, 1234, 1242,    0, 1242, 1242, 1242, 1242,
     1243,    0, 1243, 1243, 1243, 1243, 1244, 1244, 1244,    0,
     1244, 1245,    0, 1245, 1245, 1245, 1245, 1246, 1246, 1246,

        0, 1246, 1247, 1247, 1247, 1247, 1248, 1248, 1248,    0,
     1248, 1250, 1250, 1250,    0, 1250, 1251, 1251, 1251, 1251,
     1251, 1251, 1252, 1252, 1252, 1252, 1252, 1252, 1253, 1253,
     1254,    0, 1254, 1254, 1254, 1254, 1255,    0, 1255, 1255,
     1255, 1255, 1256,    0, 1256, 1256, 1256, 1256, 1257, 1257,
     1257, 1257, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,

     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241, 1241,
     1241
    } ;

static yyconst flex_int16_t yy_rule_linenum[160] =
    {   0,
      248,  249,  250,  251,  252,  253,  254,  255,  256,  257,
      258,  259,  260,  261,  262,  263,  264,  265,  266,  267,
      268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
      278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
      288,  289,  290,  291,  292,  293,  294,  295,  296,  297,
      298,  299,  300,  301,  302,  303,  304,  305,  306,  307,
      308,  309,  310,  311,  312,  313,  314,  315,  316,  317,
      318,  319,  320,  321,  322,  323,  324,  325,  326,  327,
      328,  329,  330,  331,  332,  333,  334,  335,  336,  337,
      338,  339,  340,  341,  342,  343,  344,  345,  346,  347,

      348,  349,  350,  351,  352,  353,  354,  355,  356,  357,
      358,  359,  360,  361,  362,  363,  364,  365,  366,  367,
      368,  369,  370,  371,  372,  373,  374,  375,  376,  377,
      378,  379,  380,  381,  382,  383,  384,  385,  386,  387,
      388,  389,  390,  391,  392,  393,  394,  395,  396,  397,
      398,  399,  400,  401,  402,  403,  404,  405,  408
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "lib/MapSetScanner.lpp"
/* $Id: MapSetScanner.lpp,v 1.4 2008-10-03 07:06:03 eric Exp $ -*- mode: c++ -*- */
/** \file MapSetScanner.ll Define the Flex lexical scanner */
#line 5 "lib/MapSetScanner.lpp"

#include "MapSetParser.hpp"
#include "MapSetScanner.hpp"

/* import the parser's token type into a local typedef */
typedef w3c_sw::MapSetParser::token token;
typedef w3c_sw::MapSetParser::token_type token_type;

/* Work around an incompatibility in flex (at least versions 2.5.31 through
 * 2.5.33): it generates code that does not conform to C89.  See Debian bug
 * 333231 <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=333231>.  */
// #undef yywrap	// ##flex2.5
// #define yywrap() 1	// ##flex2.5

/* By default yylex returns int, we use token_type. Unfortunately yyterminate
 * by default returns 0, which is not of token_type. */
#define yyterminate() return token::__EOF__

/* This disables inclusion of unistd.h, which is not available under Visual C++
 * on Win32. The C++ scanner uses STL streams instead. */
#define YY_NO_UNISTD_H

/*** Flex Declarations and Options ***/
/* enable c++ scanner class generation */
/* change the name of the scanner class. results in "MapSetFlexLexer" */
/* consider using class instead
 * %option yyclass="MapSetScanner"
 * void MapSetFlexLexer::LexerError( yyconst char msg[] )
 */
/* the manual says "somewhat more optimized" */
/* enable scanner to generate debug output. disable this for release
 * versions. */
/* no support for include files is planned */
/* enables the use of start condition stacks */
/* The following paragraph suffices to track locations accurately. Each time
 * yylex is invoked, the begin position is moved onto the end position. */
#line 60 "lib/MapSetScanner.lpp"
#define YY_USER_ACTION  yylloc->columns(yyleng);
#define YY_FATAL_ERROR(msg) do {		\
    throw msg;   \
} while(0)
/* START patterns for MapSet terminals */
/* <IRIREF> ::= "<" (( [^<>\"{}|^`\\] - [#0000- ] ))* ">" */
/* <STRING_LITERAL_LONG2> ::= "'''" (( (( "'" | "''" ))? ( [^'\\] | ECHAR ) ))* "'''" */
/* END patterns for MapSet terminals */
/* START semantic actions for MapSet terminals */
#line 4634 "lib/MapSetScanner.cpp"

#define INITIAL 0

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */

/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy (char *,yyconst char *,int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */

/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */

/* %ok-for-header */

/* %not-for-header */

/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */

/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin.rdbuf(std::cin.rdbuf());
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout.rdbuf(std::cout.rdbuf());
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
/* %% [7.0] user's declarations go here */
#line 247 "lib/MapSetScanner.lpp"

#line 4833 "lib/MapSetScanner.cpp"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1242 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1241 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 160 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 160 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 161 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
/* rule 1 can match eol */
YY_RULE_SETUP
#line 248 "lib/MapSetScanner.lpp"
{ yylloc->end.lines(1); }
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 249 "lib/MapSetScanner.lpp"
{ yylloc->step(); /* @@ needed? useful? */ }
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 250 "lib/MapSetScanner.lpp"
{return token::IT_REWRITEVAR;}
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 251 "lib/MapSetScanner.lpp"
{return token::IT_DRIVER;}
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 252 "lib/MapSetScanner.lpp"
{return token::IT_SERVER;}
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 253 "lib/MapSetScanner.lpp"
{return token::IT_USER;}
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 254 "lib/MapSetScanner.lpp"
{return token::IT_PASSWORD;}
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 255 "lib/MapSetScanner.lpp"
{return token::IT_DATABASE;}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 256 "lib/MapSetScanner.lpp"
{return token::IT_STEMURI;}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 257 "lib/MapSetScanner.lpp"
{return token::IT_PRIMARYKEY;}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 258 "lib/MapSetScanner.lpp"
{return token::IT_SHAREDVARS;}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 259 "lib/MapSetScanner.lpp"
{return token::IT_INTERSECTION;}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 260 "lib/MapSetScanner.lpp"
{return token::IT_PROMISCUOUS;}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 261 "lib/MapSetScanner.lpp"
{return token::IT_VARNAMES;}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 262 "lib/MapSetScanner.lpp"
{return token::IT_DRACONIAN;}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 263 "lib/MapSetScanner.lpp"
{return token::GT_LCURLEY;}
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 264 "lib/MapSetScanner.lpp"
{return token::GT_RCURLEY;}
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 265 "lib/MapSetScanner.lpp"
{return token::GT_DOT;}
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 266 "lib/MapSetScanner.lpp"
{return token::GT_LBRACKET;}
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 267 "lib/MapSetScanner.lpp"
{return token::GT_RBRACKET;}
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 268 "lib/MapSetScanner.lpp"
{return token::IT_BASE;}
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 269 "lib/MapSetScanner.lpp"
{return token::IT_PREFIX;}
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 270 "lib/MapSetScanner.lpp"
{return token::IT_SELECT;}
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 271 "lib/MapSetScanner.lpp"
{return token::IT_DISTINCT;}
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 272 "lib/MapSetScanner.lpp"
{return token::IT_REDUCED;}
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 273 "lib/MapSetScanner.lpp"
{return token::IT_AS;}
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 274 "lib/MapSetScanner.lpp"
{return token::GT_LPAREN;}
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 275 "lib/MapSetScanner.lpp"
{return token::GT_RPAREN;}
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 276 "lib/MapSetScanner.lpp"
{return token::GT_TIMES;}
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 277 "lib/MapSetScanner.lpp"
{return token::IT_LABEL;}
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 278 "lib/MapSetScanner.lpp"
{return token::IT_CONSTRUCT;}
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 279 "lib/MapSetScanner.lpp"
{return token::IT_FROM;}
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 280 "lib/MapSetScanner.lpp"
{return token::IT_NAMED;}
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 281 "lib/MapSetScanner.lpp"
{return token::IT_WHERE;}
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 282 "lib/MapSetScanner.lpp"
{return token::IT_GROUP;}
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 283 "lib/MapSetScanner.lpp"
{return token::IT_BY;}
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 284 "lib/MapSetScanner.lpp"
{return token::IT_HAVING;}
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 285 "lib/MapSetScanner.lpp"
{return token::IT_ORDER;}
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 286 "lib/MapSetScanner.lpp"
{return token::IT_ASC;}
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 287 "lib/MapSetScanner.lpp"
{return token::IT_DESC;}
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 288 "lib/MapSetScanner.lpp"
{return token::IT_LIMIT;}
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 289 "lib/MapSetScanner.lpp"
{return token::IT_OFFSET;}
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 290 "lib/MapSetScanner.lpp"
{return token::IT_VALUES;}
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 291 "lib/MapSetScanner.lpp"
{return token::IT_UNDEF;}
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 292 "lib/MapSetScanner.lpp"
{return token::GT_MINUS_MINUS;}
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 293 "lib/MapSetScanner.lpp"
{return token::IT_OPTIONAL;}
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 294 "lib/MapSetScanner.lpp"
{return token::IT_GRAPH;}
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 295 "lib/MapSetScanner.lpp"
{return token::IT_SERVICE;}
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 296 "lib/MapSetScanner.lpp"
{return token::IT_BIND;}
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 297 "lib/MapSetScanner.lpp"
{return token::IT_MINUS;}
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 298 "lib/MapSetScanner.lpp"
{return token::IT_UNION;}
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 299 "lib/MapSetScanner.lpp"
{return token::IT_FILTER;}
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 300 "lib/MapSetScanner.lpp"
{return token::GT_COMMA;}
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 301 "lib/MapSetScanner.lpp"
{return token::GT_SEMI;}
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 302 "lib/MapSetScanner.lpp"
{return token::IT_SILENT;}
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 303 "lib/MapSetScanner.lpp"
{return token::IT_a;}
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 304 "lib/MapSetScanner.lpp"
{return token::GT_PIPE;}
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 305 "lib/MapSetScanner.lpp"
{return token::GT_DIVIDE;}
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 306 "lib/MapSetScanner.lpp"
{return token::GT_CARROT;}
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 307 "lib/MapSetScanner.lpp"
{return token::GT_OPT;}
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 308 "lib/MapSetScanner.lpp"
{return token::GT_PLUS;}
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 309 "lib/MapSetScanner.lpp"
{return token::GT_NOT;}
	YY_BREAK
case 63:
YY_RULE_SETUP
#line 310 "lib/MapSetScanner.lpp"
{return token::IT_MEMBERS;}
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 311 "lib/MapSetScanner.lpp"
{return token::IT_STARTS;}
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 312 "lib/MapSetScanner.lpp"
{return token::IT_ENDS;}
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 313 "lib/MapSetScanner.lpp"
{return token::IT_ANY;}
	YY_BREAK
case 67:
YY_RULE_SETUP
#line 314 "lib/MapSetScanner.lpp"
{return token::IT_UNORDERED;}
	YY_BREAK
case 68:
YY_RULE_SETUP
#line 315 "lib/MapSetScanner.lpp"
{return token::GT_OR;}
	YY_BREAK
case 69:
YY_RULE_SETUP
#line 316 "lib/MapSetScanner.lpp"
{return token::GT_AND;}
	YY_BREAK
case 70:
YY_RULE_SETUP
#line 317 "lib/MapSetScanner.lpp"
{return token::GT_EQUAL;}
	YY_BREAK
case 71:
YY_RULE_SETUP
#line 318 "lib/MapSetScanner.lpp"
{return token::GT_NEQUAL;}
	YY_BREAK
case 72:
YY_RULE_SETUP
#line 319 "lib/MapSetScanner.lpp"
{return token::GT_LT;}
	YY_BREAK
case 73:
YY_RULE_SETUP
#line 320 "lib/MapSetScanner.lpp"
{return token::GT_GT;}
	YY_BREAK
case 74:
YY_RULE_SETUP
#line 321 "lib/MapSetScanner.lpp"
{return token::GT_LE;}
	YY_BREAK
case 75:
YY_RULE_SETUP
#line 322 "lib/MapSetScanner.lpp"
{return token::GT_GE;}
	YY_BREAK
case 76:
YY_RULE_SETUP
#line 323 "lib/MapSetScanner.lpp"
{return token::IT_IN;}
	YY_BREAK
case 77:
YY_RULE_SETUP
#line 324 "lib/MapSetScanner.lpp"
{return token::IT_NOT;}
	YY_BREAK
case 78:
YY_RULE_SETUP
#line 325 "lib/MapSetScanner.lpp"
{return token::GT_MINUS;}
	YY_BREAK
case 79:
YY_RULE_SETUP
#line 326 "lib/MapSetScanner.lpp"
{return token::IT_STR;}
	YY_BREAK
case 80:
YY_RULE_SETUP
#line 327 "lib/MapSetScanner.lpp"
{return token::IT_LANG;}
	YY_BREAK
case 81:
YY_RULE_SETUP
#line 328 "lib/MapSetScanner.lpp"
{return token::IT_LANGMATCHES;}
	YY_BREAK
case 82:
YY_RULE_SETUP
#line 329 "lib/MapSetScanner.lpp"
{return token::IT_DATATYPE;}
	YY_BREAK
case 83:
YY_RULE_SETUP
#line 330 "lib/MapSetScanner.lpp"
{return token::IT_BOUND;}
	YY_BREAK
case 84:
YY_RULE_SETUP
#line 331 "lib/MapSetScanner.lpp"
{return token::IT_IRI;}
	YY_BREAK
case 85:
YY_RULE_SETUP
#line 332 "lib/MapSetScanner.lpp"
{return token::IT_URI;}
	YY_BREAK
case 86:
YY_RULE_SETUP
#line 333 "lib/MapSetScanner.lpp"
{return token::IT_BNODE;}
	YY_BREAK
case 87:
YY_RULE_SETUP
#line 334 "lib/MapSetScanner.lpp"
{return token::IT_RAND;}
	YY_BREAK
case 88:
YY_RULE_SETUP
#line 335 "lib/MapSetScanner.lpp"
{return token::IT_ABS;}
	YY_BREAK
case 89:
YY_RULE_SETUP
#line 336 "lib/MapSetScanner.lpp"
{return token::IT_CEIL;}
	YY_BREAK
case 90:
YY_RULE_SETUP
#line 337 "lib/MapSetScanner.lpp"
{return token::IT_FLOOR;}
	YY_BREAK
case 91:
YY_RULE_SETUP
#line 338 "lib/MapSetScanner.lpp"
{return token::IT_ROUND;}
	YY_BREAK
case 92:
YY_RULE_SETUP
#line 339 "lib/MapSetScanner.lpp"
{return token::IT_CONCAT;}
	YY_BREAK
case 93:
YY_RULE_SETUP
#line 340 "lib/MapSetScanner.lpp"
{return token::IT_STRLEN;}
	YY_BREAK
case 94:
YY_RULE_SETUP
#line 341 "lib/MapSetScanner.lpp"
{return token::IT_UCASE;}
	YY_BREAK
case 95:
YY_RULE_SETUP
#line 342 "lib/MapSetScanner.lpp"
{return token::IT_LCASE;}
	YY_BREAK
case 96:
YY_RULE_SETUP
#line 343 "lib/MapSetScanner.lpp"
{return token::IT_ENCODE_FOR_URI;}
	YY_BREAK
case 97:
YY_RULE_SETUP
#line 344 "lib/MapSetScanner.lpp"
{return token::IT_CONTAINS;}
	YY_BREAK
case 98:
YY_RULE_SETUP
#line 345 "lib/MapSetScanner.lpp"
{return token::IT_STRSTARTS;}
	YY_BREAK
case 99:
YY_RULE_SETUP
#line 346 "lib/MapSetScanner.lpp"
{return token::IT_STRENDS;}
	YY_BREAK
case 100:
YY_RULE_SETUP
#line 347 "lib/MapSetScanner.lpp"
{return token::IT_YEAR;}
	YY_BREAK
case 101:
YY_RULE_SETUP
#line 348 "lib/MapSetScanner.lpp"
{return token::IT_MONTH;}
	YY_BREAK
case 102:
YY_RULE_SETUP
#line 349 "lib/MapSetScanner.lpp"
{return token::IT_DAY;}
	YY_BREAK
case 103:
YY_RULE_SETUP
#line 350 "lib/MapSetScanner.lpp"
{return token::IT_HOURS;}
	YY_BREAK
case 104:
YY_RULE_SETUP
#line 351 "lib/MapSetScanner.lpp"
{return token::IT_MINUTES;}
	YY_BREAK
case 105:
YY_RULE_SETUP
#line 352 "lib/MapSetScanner.lpp"
{return token::IT_SECONDS;}
	YY_BREAK
case 106:
YY_RULE_SETUP
#line 353 "lib/MapSetScanner.lpp"
{return token::IT_TIMEZONE;}
	YY_BREAK
case 107:
YY_RULE_SETUP
#line 354 "lib/MapSetScanner.lpp"
{return token::IT_NOW;}
	YY_BREAK
case 108:
YY_RULE_SETUP
#line 355 "lib/MapSetScanner.lpp"
{return token::IT_MD5;}
	YY_BREAK
case 109:
YY_RULE_SETUP
#line 356 "lib/MapSetScanner.lpp"
{return token::IT_SHA1;}
	YY_BREAK
case 110:
YY_RULE_SETUP
#line 357 "lib/MapSetScanner.lpp"
{return token::IT_SHA256;}
	YY_BREAK
case 111:
YY_RULE_SETUP
#line 358 "lib/MapSetScanner.lpp"
{return token::IT_SHA384;}
	YY_BREAK
case 112:
YY_RULE_SETUP
#line 359 "lib/MapSetScanner.lpp"
{return token::IT_SHA512;}
	YY_BREAK
case 113:
YY_RULE_SETUP
#line 360 "lib/MapSetScanner.lpp"
{return token::IT_COALESCE;}
	YY_BREAK
case 114:
YY_RULE_SETUP
#line 361 "lib/MapSetScanner.lpp"
{return token::IT_IF;}
	YY_BREAK
case 115:
YY_RULE_SETUP
#line 362 "lib/MapSetScanner.lpp"
{return token::IT_STRLANG;}
	YY_BREAK
case 116:
YY_RULE_SETUP
#line 363 "lib/MapSetScanner.lpp"
{return token::IT_STRDT;}
	YY_BREAK
case 117:
YY_RULE_SETUP
#line 364 "lib/MapSetScanner.lpp"
{return token::IT_sameTerm;}
	YY_BREAK
case 118:
YY_RULE_SETUP
#line 365 "lib/MapSetScanner.lpp"
{return token::IT_isIRI;}
	YY_BREAK
case 119:
YY_RULE_SETUP
#line 366 "lib/MapSetScanner.lpp"
{return token::IT_isURI;}
	YY_BREAK
case 120:
YY_RULE_SETUP
#line 367 "lib/MapSetScanner.lpp"
{return token::IT_isBLANK;}
	YY_BREAK
case 121:
YY_RULE_SETUP
#line 368 "lib/MapSetScanner.lpp"
{return token::IT_isLITERAL;}
	YY_BREAK
case 122:
YY_RULE_SETUP
#line 369 "lib/MapSetScanner.lpp"
{return token::IT_isNUMERIC;}
	YY_BREAK
case 123:
YY_RULE_SETUP
#line 370 "lib/MapSetScanner.lpp"
{return token::IT_REGEX;}
	YY_BREAK
case 124:
YY_RULE_SETUP
#line 371 "lib/MapSetScanner.lpp"
{return token::IT_SUBSTR;}
	YY_BREAK
case 125:
YY_RULE_SETUP
#line 372 "lib/MapSetScanner.lpp"
{return token::IT_EXISTS;}
	YY_BREAK
case 126:
YY_RULE_SETUP
#line 373 "lib/MapSetScanner.lpp"
{return token::IT_COUNT;}
	YY_BREAK
case 127:
YY_RULE_SETUP
#line 374 "lib/MapSetScanner.lpp"
{return token::IT_GROUP_CONCAT;}
	YY_BREAK
case 128:
YY_RULE_SETUP
#line 375 "lib/MapSetScanner.lpp"
{return token::IT_SUM;}
	YY_BREAK
case 129:
YY_RULE_SETUP
#line 376 "lib/MapSetScanner.lpp"
{return token::IT_MIN;}
	YY_BREAK
case 130:
YY_RULE_SETUP
#line 377 "lib/MapSetScanner.lpp"
{return token::IT_MAX;}
	YY_BREAK
case 131:
YY_RULE_SETUP
#line 378 "lib/MapSetScanner.lpp"
{return token::IT_AVG;}
	YY_BREAK
case 132:
YY_RULE_SETUP
#line 379 "lib/MapSetScanner.lpp"
{return token::IT_SAMPLE;}
	YY_BREAK
case 133:
YY_RULE_SETUP
#line 380 "lib/MapSetScanner.lpp"
{return token::IT_SEPARATOR;}
	YY_BREAK
case 134:
YY_RULE_SETUP
#line 381 "lib/MapSetScanner.lpp"
{return token::GT_DTYPE;}
	YY_BREAK
case 135:
YY_RULE_SETUP
#line 382 "lib/MapSetScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("true", 1); return token::IT_true;}
	YY_BREAK
case 136:
YY_RULE_SETUP
#line 383 "lib/MapSetScanner.lpp"
{yylval->p_BooleanRDFLiteral = driver->getBooleanRDFLiteral("false", 0); return token::IT_false;}
	YY_BREAK
case 137:
YY_RULE_SETUP
#line 384 "lib/MapSetScanner.lpp"
{yylval->p_URI = resolveBase(yytext, true); return token::IRIREF;}
	YY_BREAK
case 138:
YY_RULE_SETUP
#line 385 "lib/MapSetScanner.lpp"
{yylval->p_URI = driver->ignorePrefix() ? driver->getURI(yytext) : resolvePrefix(yytext); return token::PNAME_NS;}
	YY_BREAK
case 139:
YY_RULE_SETUP
#line 386 "lib/MapSetScanner.lpp"
{yylval->p_URI = resolvePrefix(yytext); return token::PNAME_LN;}
	YY_BREAK
case 140:
YY_RULE_SETUP
#line 387 "lib/MapSetScanner.lpp"
{yylval->p_TTerm = driver->getBNode(yytext+2); return token::BLANK_NODE_LABEL;}
	YY_BREAK
case 141:
YY_RULE_SETUP
#line 388 "lib/MapSetScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR1;}
	YY_BREAK
case 142:
YY_RULE_SETUP
#line 389 "lib/MapSetScanner.lpp"
{yylval->p_Variable = driver->getVariable(yytext+1); return token::VAR2;}
	YY_BREAK
case 143:
YY_RULE_SETUP
#line 390 "lib/MapSetScanner.lpp"
{yylval->p_LANGTAG = new LANGTAG(yytext+1); return token::LANGTAG;}
	YY_BREAK
case 144:
YY_RULE_SETUP
#line 391 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER);}
	YY_BREAK
case 145:
YY_RULE_SETUP
#line 392 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL);}
	YY_BREAK
case 146:
YY_RULE_SETUP
#line 393 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE);}
	YY_BREAK
case 147:
YY_RULE_SETUP
#line 394 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_POSITIVE);}
	YY_BREAK
case 148:
YY_RULE_SETUP
#line 395 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_POSITIVE);}
	YY_BREAK
case 149:
YY_RULE_SETUP
#line 396 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_POSITIVE);}
	YY_BREAK
case 150:
YY_RULE_SETUP
#line 397 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::INTEGER_NEGATIVE);}
	YY_BREAK
case 151:
YY_RULE_SETUP
#line 398 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DECIMAL_NEGATIVE);}
	YY_BREAK
case 152:
YY_RULE_SETUP
#line 399 "lib/MapSetScanner.lpp"
{return typedLiteral(yylval, token::DOUBLE_NEGATIVE);}
	YY_BREAK
case 153:
YY_RULE_SETUP
#line 400 "lib/MapSetScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL1);}
	YY_BREAK
case 154:
YY_RULE_SETUP
#line 401 "lib/MapSetScanner.lpp"
{return unescape(yylval, 1, token::STRING_LITERAL2);}
	YY_BREAK
case 155:
/* rule 155 can match eol */
YY_RULE_SETUP
#line 402 "lib/MapSetScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG1);}
	YY_BREAK
case 156:
/* rule 156 can match eol */
YY_RULE_SETUP
#line 403 "lib/MapSetScanner.lpp"
{return unescape(yylval, 3, token::STRING_LITERAL_LONG2);}
	YY_BREAK
case 157:
/* rule 157 can match eol */
YY_RULE_SETUP
#line 404 "lib/MapSetScanner.lpp"
{return token::NIL;}
	YY_BREAK
case 158:
/* rule 158 can match eol */
YY_RULE_SETUP
#line 405 "lib/MapSetScanner.lpp"
{yylval->p_TTerm = driver->createBNode(); return token::ANON;}
	YY_BREAK
case YY_STATE_EOF(INITIAL):
#line 407 "lib/MapSetScanner.lpp"
{ yyterminate();}
	YY_BREAK
case 159:
YY_RULE_SETUP
#line 408 "lib/MapSetScanner.lpp"
{
    std::stringstream s;
    s << "unexpected input: '" << yytext << "'";
    driver->error(*yylloc, s.str());
}
	YY_BREAK
case 160:
YY_RULE_SETUP
#line 414 "lib/MapSetScanner.lpp"
YY_FATAL_ERROR( "flex scanner jammed" );
	YY_BREAK
#line 5721 "lib/MapSetScanner.cpp"

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
/* %endif */
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */

/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( FLEX_STD istream* arg_yyin, FLEX_STD ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = 0;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	MapSetfree(yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	MapSetfree(yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	yy_size_t number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (yy_size_t) ((yy_c_buf_p) - (yytext_ptr)) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			yy_size_t num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				yy_size_t new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					MapSetrealloc((void *) b->yy_ch_buf,b->yy_buf_size + 2  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if ((yy_size_t) ((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) MapSetrealloc((void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf,new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */

/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1242 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1242 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1241);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, char* yy_bp)
/* %endif */
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		yy_size_t number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			yy_size_t offset = (yy_c_buf_p) - (yytext_ptr);
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return EOF;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream& input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/* %if-c++-only */
/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	yyrestart( *input_file );
}
/* %endif */

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
/* %endif */
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) MapSetalloc(sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = (yy_size_t)size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) MapSetalloc(b->yy_buf_size + 2  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/* %if-c++-only */
/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}
/* %endif */

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		MapSetfree((void *) b->yy_ch_buf  );

	MapSetfree((void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_input_file = file.rdbuf();
/* %endif */
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
		num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)MapSetalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );
								  
		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));
				
		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)MapSetrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int _new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) MapSetalloc(new_size  );

		else
			(yy_start_stack) = (int *) MapSetrealloc((void *) (yy_start_stack),new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( yyconst char msg[] )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (yyconst char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *MapSetalloc (yy_size_t  size )
{
			return (void *) malloc( size );
}

void *MapSetrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
}

void MapSetfree (void * ptr )
{
			free( (char *) ptr );	/* see MapSetrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 414 "lib/MapSetScanner.lpp"


/* END semantic actions for MapSet terminals */

/* START MapSetScanner */
namespace w3c_sw {

MapSetScanner::MapSetScanner (MapSetDriver* driver, std::istream* in, std::ostream* out) : MapSetFlexLexer(in, out), driver(driver) {  }
MapSetScanner::~MapSetScanner () {  }

MapSetParser::token_type MapSetScanner::typedLiteral (MapSetParser::semantic_type*& yylval, MapSetParser::token_type tok) {
    std::istringstream is(yytext);

    switch (tok) {
    case token::INTEGER:
    case token::INTEGER_POSITIVE:
    case token::INTEGER_NEGATIVE:
	int i;
	is >> i;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, i);
	return tok;
    case token::DECIMAL:
    case token::DECIMAL_POSITIVE:
    case token::DECIMAL_NEGATIVE:
	float f;
	is >> f;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, f);
	return tok;
    case token::DOUBLE:
    case token::DOUBLE_POSITIVE:
    case token::DOUBLE_NEGATIVE:
	double d;
	is >> d;
	yylval->p_NumericRDFLiteral = driver->getNumericRDFLiteral(yytext, d);
	return tok;
    default: throw(new std::exception());
    }
}

MapSetParser::token_type MapSetScanner::unescape (MapSetParser::semantic_type*& yylval, size_t skip, MapSetParser::token_type tok){
    std::string* space = new std::string;
    for (size_t i = skip; i < yyleng-skip; i++) {
	if (yytext[i] == '\\') {
	    switch (yytext[++i]) {
	    case 't': (*space) += '\t'; break;
	    case 'n': (*space) += '\n'; break;
	    case 'r': (*space) += '\r'; break;
	    case 'b': (*space) += '\b'; break;
	    case 'f': (*space) += '\f'; break;
	    case '"': (*space) += '\"'; break;
	    case '\'': (*space) += '\''; break;
	    case '\\': (*space) += '\\'; break;
	    default: throw(new std::exception());
	    }
	} else {
	    (*space) += yytext[i];
	}
    }
    yylval->p_string = space;
    return tok;
}


const URI* MapSetScanner::resolvePrefix (const char* yytext){
    std::string ret(yytext);
    size_t index = ret.find(':');
    if (index == std::string::npos)
	throw(std::runtime_error("Inexplicable lack of ':' in prefix"));
    const URI* nspace = driver->getNamespace(ret.substr(0, index), true);
    if (nspace == NULL) {
	std::stringstream err;
	err << "Unknown prefix: \"" << ret.substr(0, index) << "\"";
	throw(std::runtime_error(err.str()));
    }
    ret.replace(0, index+1, nspace->getLexicalValue());
    return resolveBase(ret.c_str(), false);
}

void MapSetScanner::set_debug(bool b)
{
    yy_flex_debug = b;
}

/* END MapSetScanner */

const URI* MapSetScanner::resolveBase (const char* p_rel, bool stripDelims) {
    std::string stripped(p_rel);
    if (stripDelims) {
	stripped.replace(0, 1, "");
	stripped.replace(stripped.size()-1, 1, "");
    }
    return driver->getAbsoluteURI(stripped.c_str());

#if 0
    // was a transliteration of _generic.pm
    static const boost::regex re_scheme("^([a-zA-Z][a-zA-Z0-9.+-]*):");
    static const boost::regex re_authority("^((?:[a-zA-Z][a-zA-Z0-9.+-]*)?)(?://([^/?\\#]*))?(.*)$");
    static const boost::regex re_path("^((?:[^:/?\\#]+:)?(?://[^/?\\#]*)?)([^?\\#]*)(.*)$");

    boost::smatch what;
    URI* baseURI = driver->getBase();
    std::string base;
    if (baseURI != NULL)
	std::string base = baseURI->getLexicalValue();
    std::string base_scheme;
    if (base.size() > 0 && boost::regex_search(base, what, re_scheme))
	base_scheme = what[1];
    if (boost::regex_search(self, what, re_scheme) &&
	what[1] != base_schema)
	return driver->getURI(self.c_str());
    if (base.size() == 0)
	throw(std::runtime_error(((std::string)"no base declared while resolving relative URI ").append(abs)));

    std::string abs(self);
    if (!boost::regex_search(base, what, re_scheme))
	throw(std::runtime_error(((std::string)"resolving against base URI with no scheme ").append(base)));
    // !!! abs->scheme = base_scheme
    if (false) ; // ...

    if (!boost::regex_search(base, what, re_authority))
	throw(std::runtime_error(((std::string)"resolving against base URI with no authority ").append(base)));
    std::string base_authority(what[2]);

    if (!boost::regex_search(rel, what, re_path))
	throw(std::runtime_error(((std::string)"oddly failed to match re_path on ").append(rel)));
    std::string rel_path(what[2]);
    if (rel_path.find("/") == 0) return driver->getURI(abs.c_str());

#endif
}
} // END namespace w3c_sw

/* This implementation of MapSetFlexLexer::yylex() is required to fill the
 * vtable of the class MapSetFlexLexer. We define the scanner's main yylex
 * function via YY_DECL to reside in the MapSetScanner class instead. */

#ifdef yylex
#undef yylex
#endif

int MapSetFlexLexer::yylex()
{
    std::cerr << "in MapSetFlexLexer::yylex() !" << std::endl;
    return 0;
}


